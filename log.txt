diff --git a/.gitignore b/.gitignore
index e69de29..5ccff1a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -0,0 +1 @@
+html/
diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..156899f
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,8 @@
+{
+    "files.associations": {
+        "array": "cpp",
+        "initializer_list": "cpp",
+        "system_error": "cpp",
+        "type_traits": "cpp"
+    }
+}
\ No newline at end of file
diff --git a/html/Aliasing.html b/html/Aliasing.html
index 820c482..4fdd0c9 100644
--- a/html/Aliasing.html
+++ b/html/Aliasing.html
@@ -97,7 +97,7 @@ $(document).ready(function(){initNavTree('Aliasing.html','');});
 <div class="contents">
 <div class="toc"><h3>Tabla de contenidos</h3>
 <ul><li class="level1"><a href="#sec-Resumen">Resumen</a></li>
-<li class="level1"><a href="#sec-puntero">Álgebra vs. computadora</a><ul><li class="level2"><a href="#sec-invalido">Variables y punteros inválidos y el problema de la memoria finita</a></li>
+<li class="level1"><a href="#sec-puntero">Álgebra vs. computadora</a><ul><li class="level2"><a href="#sec-invalido">Variables y punteros inválidos y el problema de la</a></li>
 </ul>
 </li>
 <li class="level1"><a href="#sec-aliasing">Los aspectos de aliasing</a></li>
@@ -166,7 +166,8 @@ Resumen</h1>
 </ol>
 <p>La existencia del operador &amp; sobre variables computacionales nos permite definir lo que seria el símil de la igualdad observacional de estos objetos, i.e., el alias. Es decir, cuándo dos variables refieren a la misma posición de memoria. En este caso, <em>v</em> y <em>w</em> tiene alias si y sólo si &amp;<em>v</em> <img class="formulaInl" alt="$=_{\rm obs}$" src="form_2.png"/> &amp;<em>w</em>.</p>
 <h2><a class="anchor" id="sec-invalido"></a>
-Variables y punteros inválidos y el problema de la memoria finita</h2>
+Variables y punteros inválidos y el problema de la</h2>
+<p>memoria finita</p>
 <p>Claramente, no todas las combinaciones de bits representan información válida, cuando queremos interpretar una posición de memoria con un tipo <em>T</em>. El comportamiento de la función sombrerito sobre dichas variables está indefinido (ver restricción). Sin embargo, no podemos especificar nada de las variables <em>antes</em> de aplicar sombrerito. Por ello, simplemente asumimos que las variables de nuestro mundo computacional son <em>válidas</em>. En términos formales, suponemos que sombrerito de <em>x</em> siempre denota un valor correcto, más allá de la restricción.</p>
 <p>Análogamente, un puntero a <em>T</em>, al ser una valor computacional, puede tener un valor inválido. Esto ocurre, por ejemplo, cuando la posición de memoria a la que apunta no se puede interpretar correctamente bajo el tipo <em>T</em>. Es decir, si <em>x</em> es una variable inválida, entonces &amp;<em>x</em> es un puntero inválido.</p>
 <p>Obviamente, si suponemos que <em>x</em> siempre es válido, entonces huelga decir que &amp;<em>x</em> es siempre válido. Sin embargo, en sistemas finitos, queremos no perder memoria, razón por la cual tenemos que retornarla al sistema. Una vez más, la devolución de memoria es algo que escapa el mundo algebraico (que supone la existencia de los infinitos términos en simultáneo, i.e., memoria infinita). Si bien no vamos a especificarlo, existe una función computacional de <em>liberación de memoria</em>. Esta función (implícitamente) transforma el espacio de memoria en un valor <img class="formulaInl" alt="$\bot$" src="form_9.png"/> que es inválido para cualquier tipo <em>T</em>. De esta forma, los punteros que apuntan a dicha posición se <em>invalidan</em> aunque lo hayamos inicializado con valores válidos.</p>
@@ -187,7 +188,7 @@ Especificación de los iteradores y el alias</h1>
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/Castellano.html b/html/Castellano.html
index 2d19cd7..f46b8f8 100644
--- a/html/Castellano.html
+++ b/html/Castellano.html
@@ -107,7 +107,7 @@ $(document).ready(function(){initNavTree('Castellano.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/Enunciado.html b/html/Enunciado.html
index 693dc88..ab94567 100644
--- a/html/Enunciado.html
+++ b/html/Enunciado.html
@@ -132,7 +132,7 @@ Lineamientos para la resolución</h2>
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/Implementacion.html b/html/Implementacion.html
index a03a6bb..af0c767 100644
--- a/html/Implementacion.html
+++ b/html/Implementacion.html
@@ -95,7 +95,7 @@ $(document).ready(function(){initNavTree('Implementacion.html','');});
 <div class="title">Implementación del árbol red-black </div>  </div>
 </div><!--header-->
 <div class="contents">
-<div class="textblock"><p>La implementación básica de un árbol red-black está explicada, algoritmos incluidos, en <b>[CormenLeisersonRivestStein2009]</b>. Sin embargo, hay algunas pequeñas diferencias y algunas sutilezas a la hora de definirlos en C++ para implementar un diccionario. En esta sección discutimos estas cuestiones.</p>
+<div class="textblock"><p>La implementación básica de un árbol red-black está explicada, algoritmos incluidos, en <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a>. Sin embargo, hay algunas pequeñas diferencias y algunas sutilezas a la hora de definirlos en C++ para implementar un diccionario. En esta sección discutimos estas cuestiones.</p>
 <p>Lo primero a notar es que el árbol es un ABB, implementado con nodos que almacenan cada valor (par <code>(clave, significado)</code>) junto con los punteros a sus hijos. Asimismo, cada nodo tiene un color, que puede ser rojo o negro. Un tema particular de los ABB es que la iteración se puede hacer en tiempo lineal aplicando el algoritmo inorder. Este algoritmo se puede implementar de dos formas. La primera es guardando una pila con los nodos no recorridos. El inconveniente de este método es que requiere que los iteradores almacenen pilas de <img class="formulaInl" alt="$O$" src="form_1.png"/>(<em>h</em>) elementos, siendo <em>h</em> la altura del árbol. El segundo método es manteniendo exclusivamente un puntero al nodo, que requiere <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) espacio. Para poder aplicar este método, sin embargo, se requiere que cada nodo conozca a su padre. En resumen, la estructura de un nodo almacena los siguientes campos:</p><ul>
 <li>puntero a hijo izquierdo</li>
 <li>puntero a hijo derecho</li>
@@ -105,7 +105,7 @@ $(document).ready(function(){initNavTree('Implementacion.html','');});
 </ul>
 <h1><a class="anchor" id="Cabecera"></a>
 Nodo cabecera</h1>
-<p>En <b>[CormenLeisersonRivestStein2009]</b> se sugiere mantener un nodo especial, llamado centinela, que sirva para representar hojas <em>externas</em> al árbol. Es decir, suponer que el árbol consiste de nodos internos y que sus hojas son <em>centinelas</em> (i.e., nodos sin valor) que se usan por comodidad. En esta implementación, en lugar de nodos centinela para la hojas, vamos a usar un nodo centinela para la <em>cabecera</em>. Las razones de esta elección, y las implicancias se discuten en esta sección.</p>
+<p>En <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a> se sugiere mantener un nodo especial, llamado centinela, que sirva para representar hojas <em>externas</em> al árbol. Es decir, suponer que el árbol consiste de nodos internos y que sus hojas son <em>centinelas</em> (i.e., nodos sin valor) que se usan por comodidad. En esta implementación, en lugar de nodos centinela para la hojas, vamos a usar un nodo centinela para la <em>cabecera</em>. Las razones de esta elección, y las implicancias se discuten en esta sección.</p>
 <p>Un primer problema a resolver es cómo ubicar el primer nodo del recorrido inorder. Obviamente, alcanza con descender hacia la izquierda hasta encontrar un nodo sin hijo izquierdo. El problema de esta implementación es que toma tiempo <img class="formulaInl" alt="$O$" src="form_1.png"/>(<em>h</em>). La solución obvia es mantener un puntero que apunte al primer nodo. Análogamente, podemos mantener un puntero al último nodo. Sin embargo, esta solución no es del todo satisfactoria, porque complica la implementación de los iteradores. Si un iterador <code>it</code> es únicamente un puntero a nodo, entonces no hay forma de que <code>it</code> sepa si está o no apuntando al último nodo. Esto se puede determinar una vez que se avanza <code>it</code>, en cuyo caso <code>it</code> debe apuntar a una dirección inválida, digamos <code>nullptr</code>. El problema de este enfoque es que no hay forma de saber, una vez parado en <code>nullptr</code>, a qué dirección retroceder. Hay dos soluciones posibles. La primera es almacenar, además del puntero al nodo, un puntero al diccionario para tener acceso al puntero al último. La segunda es apuntar a un nodo especial que sirva para retroceder. La ventaja de esta última solución es que los iteradores son más livianos.</p>
 <p>En esta implementación optamos por la segunda versión, aprovechando el nodo especial para que funcione como <em>cabecera</em>, i.e., como punto de acceso a la estructura. Este nodo cabecera tiene como padre a la raíz del RB-tree, como hijo izquierdo al primero nodo y como hijo derecho al último. Asimismo, la raíz tiene como padre al nodo cabecera. De esta forma, podemos:</p><ol type="1">
 <li>Acceder en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tanto al primer como al último nodo del recorrido inorder</li>
@@ -114,7 +114,7 @@ Nodo cabecera</h1>
 </ol>
 <p>Hay dos inconvenientes a resolver: el color de la cabecera y el valor. En cuanto al color, se puede implementar la cabecera usando el color rojo para distinguirla del nodo raíz. Sin embargo, con ciertas rotaciones puede ocurrir que temporalmente tanto la cabecera como la raíz tengan el mismo color. Para evitar bugs innecesarios, se propone un nuevo color (digamos azul) para la cabecera. (Esto requiere un bit mas por nodo, pero igualmente el color usa al menos 8 bits en cualquier implementación real).</p>
 <p>El problema del valor del nodo cabecera es más complejo ya que, aun así pudiéramos asignarle un valor arbitrario al nodo, no sabemos de dónde obtener dicho valor (notar que los tipos <code>Key</code> y <code>Value</code> podrían no tener constructores sin parámetros). La solución, pues, es usar un tipo de nodo especial para la cabecera, que no contenga ningún valor. El inconveniente de esta solución es que el puntero de la raíz (potencialmente cualquier nodo) debe apuntar a un nodo de este tipo nuevo, mientras que el resto deben apuntar a los nodos del árbol. La solución propuesta en esta implementación es con herencia. (Otras opciones incluyen usar un puntero al valor, que puede ser nulo. La ventaja de la herencia es que evita una indirección.) Básicamente, tenemos un tipo nodo básico, que se usa para la cabecera, y tenemos un tipo <em>nodos extendido</em> que se utiliza para implementar a los nodos internos.</p>
-<p>Resumiendo, la estructura de representación propuesta es la siguiente: </p><div class="fragment"><div class="line"><span class="keyword">struct </span>Node {</div><div class="line">  <span class="comment">//punteros a los hijos izquierdo (child[0]) y derecho (child[1])</span></div><div class="line">  Node* child[2]{<span class="keyword">nullptr</span>,<span class="keyword">nullptr</span>};</div><div class="line">  <span class="comment">//puntero al padre: garantiza insercion con puntero en O(1) amortizado e iteracion en O(1) memoria</span></div><div class="line">  Node* parent{<span class="keyword">nullptr</span>};</div><div class="line">  <span class="comment">//color del nodo</span></div><div class="line">  Color color{Color::Red};</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">struct </span>InnerNode : <span class="keyword">public</span> Node {</div><div class="line">  <span class="comment">//Valor del nodo</span></div><div class="line">  value_type _value;</div><div class="line">}</div></div><!-- fragment --><p> Vale notar, por una parte, que los hijos se implementan en un array. Esto permite simplificar algunos algoritmos en donde para el hijo derecho se hace lo mismo que para el izquierdo, cambiando direcciones (acá se cambia un número). Por otra parte, para acceder al valor de un nodo, se puede utilizar un <code>static_cast&lt;InnerNode*&gt;(n)-&gt;_value</code> para cualquier nodo <code>n</code>. Hay que tener cuidado de no aplicar dicho <code>static_cast</code> en el nodo cabecera, ya que no tiene un valor. Salvo por este detalle, no hay inconveniente y no se afecta la complejidad de la solución.</p>
+<p>Resumiendo, la estructura de representación propuesta es la siguiente: </p><div class="fragment"><div class="line"><span class="keyword">struct </span>Node {</div><div class="line">  <span class="comment">//punteros a los hijos izquierdo (child[0]) y derecho (child[1])</span></div><div class="line">  Node* child[2]{<span class="keyword">nullptr</span>,<span class="keyword">nullptr</span>};</div><div class="line">  <span class="comment">//puntero al padre: garantiza insercion con puntero en O(1) amortizado e</span></div><div class="line">iteracion en O(1) memoria</div><div class="line">  Node* parent{<span class="keyword">nullptr</span>};</div><div class="line">  <span class="comment">//color del nodo</span></div><div class="line">  Color color{Color::Red};</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">struct </span>InnerNode : <span class="keyword">public</span> Node {</div><div class="line">  <span class="comment">//Valor del nodo</span></div><div class="line">  value_type _value;</div><div class="line">}</div></div><!-- fragment --><p> Vale notar, por una parte, que los hijos se implementan en un array. Esto permite simplificar algunos algoritmos en donde para el hijo derecho se hace lo mismo que para el izquierdo, cambiando direcciones (acá se cambia un número). Por otra parte, para acceder al valor de un nodo, se puede utilizar un <code>static_cast&lt;InnerNode*&gt;(n)-&gt;_value</code> para cualquier nodo <code>n</code>. Hay que tener cuidado de no aplicar dicho <code>static_cast</code> en el nodo cabecera, ya que no tiene un valor. Salvo por este detalle, no hay inconveniente y no se afecta la complejidad de la solución.</p>
 <dl class="section remark"><dt>Comentarios</dt><dd>El estándar C++17 contiene un tipo, llamado optional, que implementa el concepto de un valor que es potencialmente inválido, sin gastar tiempo en la indirección.</dd></dl>
 <h1><a class="anchor" id="Inserciones"></a>
 Complejidad de la inserción y la remoción.</h1>
@@ -122,13 +122,13 @@ Complejidad de la inserción y la remoción.</h1>
 <li>cada nodo tiene un puntero a su padre, y</li>
 <li>un puntero al nodo a eliminar o al nodo anterior/siguiente al nodo a insertar es dado.</li>
 </ul>
-<p>El algoritmo es exactamente el mismo que se muestra en <b>[CormenLeisersonRivestStein2009]</b> y la razón de este costo puede consultarse, por ejemplo, en <b>[MehlhornSanders2008]</b>. </p>
+<p>El algoritmo es exactamente el mismo que se muestra en <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a> y la razón de este costo puede consultarse, por ejemplo, en <a class="el" href="citelist.html#CITEREF_MehlhornSanders2008">[2]</a>. </p>
 </div></div><!-- contents -->
 </div><!-- doc-content -->
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/Interfaz.html b/html/Interfaz.html
index 888993f..4e4b446 100644
--- a/html/Interfaz.html
+++ b/html/Interfaz.html
@@ -109,8 +109,8 @@ Significados vs. Valores</h1>
 Iteradores</h1>
 <p>El módulo que implementamos viene equipado con iteradores que siguen el estándar C++. Estos iteradores son bidireccionales, ya que también permiten recorrer la estructura en el orden inverso. Obviamente, como estamos implementando un diccionario <b>ordenado</b>, la iteración sigue el orden definido por las claves de acuerdo al functor de comparación (<a class="el" href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523" title="Renombre para poder acceder al tipo del comparador. Compatible con estándar C++. ">aed2::map::key_compare</a>).</p>
 <p>Como vemos en la materia, los iteradores no se usan exclusivamente para recorrer la estructura, sino que también se usan como <em>handles</em> (punteros) a la misma. De esta forma, podemos acceder a los valores en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) sin exhibir la implementación. La desventaja de este esquema (que queda opacada en cuanto a sus ventajas) es que los iteradores se pueden invalidar cuando la estructura cambia. En esta implementación, salvo excepciones puntuales bien documentadas, se <b>garantiza</b> que un iterador se invalida únicamente cuando se elimina el valor referenciado por el mismo. Ninguna otra operación puede invalidar el iterador (obviamente, la secuencia iterada sí cambia, pero no se invalida).</p>
-<p>Aprovechando esta interpretación de iteradores como handles, la interfaz de C++ tiene muchas funciones que retornan iteradores, y algunas que se aprovechan de la existencia de los iteradores para mejorar el tiempo de computo. Por ejemplo, es posible eliminar un valor en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) (amortizado) si se provee un iterador apuntando al valor a eliminar <b>[MehlhornSanders2008]</b>.</p>
-<p>Con respecto a la eficiencia, vamos a <b>garantizar</b> que los iteradores son <em>livianos</em> (i.e., ocupan <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) memoria y son copiables en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tiempo). En consecuencia, se pueden pasar iteradores por copia sin ningún costo. Asimismo, vamos a <b>garantizar</b> que la creación de iteradores apuntando a la primer posición (<code>begin</code>) y la posición pasando-el-fin (<code>end</code>) toman tiempo <img class="formulaInl" alt="$O$" src="form_1.png"/>(1). Esto nos permite verificar si llegamos al fin del recorrido en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tiempo, de la siguiente forma: </p><div class="fragment"><div class="line"><span class="keywordflow">for</span>(<span class="keyword">auto</span> it = d.begin(); it != d.end(); ++it) {...}   <span class="comment">//cada comparacion en O(1)</span></div><div class="line"><span class="keywordflow">for</span>(<span class="keyword">auto</span> it = d.rbegin(); it != d.rend(); ++it) {...} <span class="comment">//cada comparacion en O(1)</span></div></div><!-- fragment --><p> Asimismo, podemos determinar si una clave existe, comparando el resultado de <code>find</code> con el iterador <code>d.end()</code>, usando <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tiempo para la comparación.</p>
+<p>Aprovechando esta interpretación de iteradores como handles, la interfaz de C++ tiene muchas funciones que retornan iteradores, y algunas que se aprovechan de la existencia de los iteradores para mejorar el tiempo de computo. Por ejemplo, es posible eliminar un valor en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) (amortizado) si se provee un iterador apuntando al valor a eliminar <a class="el" href="citelist.html#CITEREF_MehlhornSanders2008">[2]</a>.</p>
+<p>Con respecto a la eficiencia, vamos a <b>garantizar</b> que los iteradores son <em>livianos</em> (i.e., ocupan <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) memoria y son copiables en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tiempo). En consecuencia, se pueden pasar iteradores por copia sin ningún costo. Asimismo, vamos a <b>garantizar</b> que la creación de iteradores apuntando a la primer posición (<code>begin</code>) y la posición pasando-el-fin (<code>end</code>) toman tiempo <img class="formulaInl" alt="$O$" src="form_1.png"/>(1). Esto nos permite verificar si llegamos al fin del recorrido en <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tiempo, de la siguiente forma: </p><div class="fragment"><div class="line"><span class="keywordflow">for</span>(<span class="keyword">auto</span> it = d.begin(); it != d.end(); ++it) {...}   <span class="comment">//cada comparacion en</span></div><div class="line">O(1)</div><div class="line">for(auto it = d.rbegin(); it != d.rend(); ++it) {...} <span class="comment">//cada comparacion en</span></div><div class="line">O(1)</div></div><!-- fragment --><p> Asimismo, podemos determinar si una clave existe, comparando el resultado de <code>find</code> con el iterador <code>d.end()</code>, usando <img class="formulaInl" alt="$O$" src="form_1.png"/>(1) tiempo para la comparación.</p>
 <dl class="section see"><dt>Ver también</dt><dd><a href="http://en.cppreference.com/w/cpp/container/map">Documentación de std::map</a><br />
  <a href="http://en.cppreference.com/w/cpp/concept/BidirectionalIterator">Documentación de BidirectionalIterator</a> </dd></dl>
 </div></div><!-- contents -->
@@ -118,7 +118,7 @@ Iteradores</h1>
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/_formulas.tex b/html/_formulas.tex
deleted file mode 100644
index 535b0e1..0000000
--- a/html/_formulas.tex
+++ /dev/null
@@ -1,69 +0,0 @@
-\batchmode
-\documentclass{article}
-\usepackage{epsfig}
-\pagestyle{empty}
-\begin{document}
-$<$
-\pagebreak
-
-$O$
-\pagebreak
-
-$=_{\rm obs}$
-\pagebreak
-
-$\widehat{T}$
-\pagebreak
-
-$\to$
-\pagebreak
-
-$\alpha$
-\pagebreak
-
-$\bullet$
-\pagebreak
-
-$\times$
-\pagebreak
-
-$\widehat{\alpha}$
-\pagebreak
-
-$\bot$
-\pagebreak
-
-$\beta$
-\pagebreak
-
-$\equiv$
-\pagebreak
-
-$\pi_1$
-\pagebreak
-
-$\cdot$
-\pagebreak
-
-$\land$
-\pagebreak
-
-$-$
-\pagebreak
-
-$\forall$
-\pagebreak
-
-$\land_{\rm L}$
-\pagebreak
-
-$\Leftrightarrow$
-\pagebreak
-
-$\log$
-\pagebreak
-
-$+$
-\pagebreak
-
-\end{document}
diff --git a/html/annotated.html b/html/annotated.html
index 8083dde..a8f52c8 100644
--- a/html/annotated.html
+++ b/html/annotated.html
@@ -110,7 +110,7 @@ $(document).ready(function(){initNavTree('annotated.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/axiomas.html b/html/axiomas.html
index 5506ee3..c4c8f06 100644
--- a/html/axiomas.html
+++ b/html/axiomas.html
@@ -125,7 +125,7 @@ primeros(s) <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> <b>if</b>
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/citelist.html b/html/citelist.html
index fa41619..c88aeb1 100644
--- a/html/citelist.html
+++ b/html/citelist.html
@@ -95,12 +95,22 @@ $(document).ready(function(){initNavTree('citelist.html','');});
 <div class="title">Referencias bibliográficas </div>  </div>
 </div><!--header-->
 <div class="contents">
-<div class="textblock"></div></div><!-- contents -->
+<div class="textblock"><dl class="citelist">
+<dt><a class="anchor" id="CITEREF_CormenLeisersonRivestStein2009"></a>[1]</dt>
+<dd><p class="startdd">Thomas&#160;H. Cormen, Charles&#160;E. Leiserson, Ronald&#160;L. Rivest, and Clifford Stein. <em>Introduction to algorithms</em>. MIT Press, Cambridge, MA, third edition, 2009.</p>
+<p class="enddd"></p>
+</dd>
+<dt><a class="anchor" id="CITEREF_MehlhornSanders2008"></a>[2]</dt>
+<dd><p class="startdd">Kurt Mehlhorn and Peter Sanders. <em>Algorithms and Data Structures: The Basic Toolbox</em>. Springer Publishing Company, Incorporated, 1 edition, 2008.</p>
+<p class="enddd"></p>
+</dd>
+</dl>
+</div></div><!-- contents -->
 </div><!-- doc-content -->
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map-members.html b/html/classaed2_1_1map-members.html
index a7893f2..c6ea2f1 100644
--- a/html/classaed2_1_1map-members.html
+++ b/html/classaed2_1_1map-members.html
@@ -98,6 +98,8 @@ $(document).ready(function(){initNavTree('classaed2_1_1map.html','');});
 
 <p>Lista completa de los miembros de <a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a>, incluyendo todos los heredados:</p>
 <table class="directory">
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">addElem</a>(Node *&amp;now, const value_type &amp;value, int dir)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">assignMaxOrMin</a>(const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">at</a>(const Key &amp;key) const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr><td class="entry"><a class="el" href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1">at</a>(const Key &amp;key)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>()</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
@@ -126,30 +128,36 @@ $(document).ready(function(){initNavTree('classaed2_1_1map.html','');});
   <tr><td class="entry"><a class="el" href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8">insert</a>(const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">insert_or_assign</a>(const_iterator hint, const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr><td class="entry"><a class="el" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">insert_or_assign</a>(const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">insert_or_upsert</a>(const value_type &amp;value, bool upsert)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(Node *newNode, const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">invalidHint</a>(const_iterator hint, const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">isMaxOrMin</a>(const value_type &amp;value)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">key_compare</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
   <tr><td class="entry"><a class="el" href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">key_type</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">lower_bound</a>(const Key &amp;key) const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">lower_bound</a>(const Key &amp;key)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a></td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">map</a>(Compare c=Compare())</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">map</a>(const map &amp;other)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">map</a>(iterator first, iterator last, Compare c=Compare())</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">mapped_type</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09">operator!=</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html#a8ff07f6a24c290ea7e8f63ec7ab24f8d">operator&lt;</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html#afe374b37f17263d0cad3ee19a590d208">operator&lt;=</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">operator=</a>(map other)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933">operator==</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63">operator&gt;</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159">operator&gt;=</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">operator[]</a>(const Key &amp;key)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">pointer</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d">rbegin</a>()</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586">rbegin</a>() const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">reference</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f">rend</a>()</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">rend</a>() const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
-  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">leftrotate</a>(Node *p)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">lower_bound</a>(const Key &amp;key) const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">lower_bound</a>(const Key &amp;key)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a></td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">map</a>(Compare c=Compare())</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">map</a>(const map &amp;other)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">map</a>(iterator first, iterator last, Compare c=Compare())</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">mapped_type</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09">operator!=</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html#a8ff07f6a24c290ea7e8f63ec7ab24f8d">operator&lt;</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html#afe374b37f17263d0cad3ee19a590d208">operator&lt;=</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">operator=</a>(map other)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933">operator==</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63">operator&gt;</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159">operator&gt;=</a>(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">operator[]</a>(const Key &amp;key)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">pointer</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d">rbegin</a>()</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586">rbegin</a>() const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">reference</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f">rend</a>()</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">rend</a>() const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
+  <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> typedef</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"></td></tr>
+  <tr><td class="entry"><a class="el" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">rightrotate</a>(Node *p)</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
   <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>()</td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
   <tr><td class="entry"><a class="el" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">root</a>() const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
   <tr class="even"><td class="entry"><a class="el" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>() const </td><td class="entry"><a class="el" href="classaed2_1_1map.html">aed2::map&lt; Key, Meaning, Compare &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
@@ -163,7 +171,7 @@ $(document).ready(function(){initNavTree('classaed2_1_1map.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map.html b/html/classaed2_1_1map.html
index bf77525..f6e4c72 100644
--- a/html/classaed2_1_1map.html
+++ b/html/classaed2_1_1map.html
@@ -206,11 +206,35 @@ Métodos públicos</h2></td></tr>
 <tr class="memdesc:a89f2613f926ac13293eafe65889d6021"><td class="mdescLeft">&#160;</td><td class="mdescRight">Devuelve la cantidad de valores en el diccionario.  <a href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">Más...</a><br /></td></tr>
 <tr class="separator:a89f2613f926ac13293eafe65889d6021"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr><td colspan="2"><div class="groupHeader">Inserción, borrado y modificación</div></td></tr>
+<tr class="memitem:a709e1a06ac3c5932c1eb6d9741f37b2c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">addElem</a> (<a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&amp;now, const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value, int dir)</td></tr>
+<tr class="memdesc:a709e1a06ac3c5932c1eb6d9741f37b2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">Más...</a><br /></td></tr>
+<tr class="separator:a709e1a06ac3c5932c1eb6d9741f37b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:abe3f47a745e17a6327943b813ff6bfb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a> (<a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *newNode, const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
+<tr class="memdesc:abe3f47a745e17a6327943b813ff6bfb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">Más...</a><br /></td></tr>
+<tr class="separator:abe3f47a745e17a6327943b813ff6bfb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:ad764851f1534f2db0964c4f729056a1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">leftrotate</a> (<a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *p)</td></tr>
+<tr class="memdesc:ad764851f1534f2db0964c4f729056a1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">Más...</a><br /></td></tr>
+<tr class="separator:ad764851f1534f2db0964c4f729056a1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:a816d69fa4dfe18a984dc3628fee14e2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">rightrotate</a> (<a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *p)</td></tr>
+<tr class="memdesc:a816d69fa4dfe18a984dc3628fee14e2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">Más...</a><br /></td></tr>
+<tr class="separator:a816d69fa4dfe18a984dc3628fee14e2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:a7403745a296985d64b8666c18953b2c0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">invalidHint</a> (<a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
+<tr class="memdesc:a7403745a296985d64b8666c18953b2c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">Más...</a><br /></td></tr>
+<tr class="separator:a7403745a296985d64b8666c18953b2c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:a6941cde9a79c27f054b5c97a587a1854"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a> (<a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
 <tr class="memdesc:a6941cde9a79c27f054b5c97a587a1854"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">Más...</a><br /></td></tr>
 <tr class="separator:a6941cde9a79c27f054b5c97a587a1854"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:a81db4ead6daafe94938d5410173bdb6c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">isMaxOrMin</a> (const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
+<tr class="memdesc:a81db4ead6daafe94938d5410173bdb6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">Más...</a><br /></td></tr>
+<tr class="separator:a81db4ead6daafe94938d5410173bdb6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:a8b89040f695bb838538e41b050d8e2d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">assignMaxOrMin</a> (const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
+<tr class="memdesc:a8b89040f695bb838538e41b050d8e2d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">Más...</a><br /></td></tr>
+<tr class="separator:a8b89040f695bb838538e41b050d8e2d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:a60aacba06b1579630b3c8e996cf248c8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8">insert</a> (const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
 <tr class="separator:a60aacba06b1579630b3c8e996cf248c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
+<tr class="memitem:aef47582a93a069c4ec95da8c595e4fee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">insert_or_upsert</a> (const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value, bool upsert)</td></tr>
+<tr class="memdesc:aef47582a93a069c4ec95da8c595e4fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">Más...</a><br /></td></tr>
+<tr class="separator:aef47582a93a069c4ec95da8c595e4fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:a2ef6723c183916276b0afc4a4c721475"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">insert_or_assign</a> (<a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, const <a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> &amp;value)</td></tr>
 <tr class="memdesc:a2ef6723c183916276b0afc4a4c721475"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserta o redefine <b class="paramname">value</b> en el diccionario.  <a href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">Más...</a><br /></td></tr>
 <tr class="separator:a2ef6723c183916276b0afc4a4c721475"><td class="memSeparator" colspan="2">&#160;</td></tr>
@@ -280,9 +304,9 @@ Atributos privados</h2></td></tr>
 <tr><td colspan="2"><div class="groupText"><p>Nota: vamos a omitir la discusión del functor de comparación, ya que no entra dentro del contexto de los TADs de la materia. Para poder definirlos, habría que 1. especificar el tipo functor y 2. extender el TAD Diccionario para que pueda crearse con una instancia del TAD functor.</p>
 <dl class="section user"><dt>Representación</dt><dd>Diccionario se representa con map: tupla(header: Node, count: Nat). Ver <a class="el" href="axiomas.html">Axiomas y proposiciones auxiliares</a></dd></dl>
 <dl class="section user"><dt>Invariante de representacion</dt><dd>rep: map <img class="formulaInl" alt="$\to$" src="form_4.png"/> bool<br />
-rep(m) <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> completar </dd></dl>
+ rep(m) <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> true  asd </dd></dl>
 <dl class="section user"><dt>Función de abstracción</dt><dd>abs: map m <img class="formulaInl" alt="$\to$" src="form_4.png"/> Diccionario(<span class="paramname">Key</span>, <span class="paramname">Meaning</span>) {rep(n)}<br />
-abs(m) <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> completar </dd></dl>
+ abs(m) <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> if m.empty() then vacio else definir (m.root()-&gt;value().first,m.root()-&gt;value().second, Abs(m.erase(m.root()-&gt;value().first)) ) </dd></dl>
 </div></td></tr>
 <tr class="memitem:a0e5be36fae0693e4665bd2a615e7550a"><td class="memItemLeft" align="right" valign="top">Compare&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a></td></tr>
 <tr class="memdesc:a0e5be36fae0693e4665bd2a615e7550a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Orden total para comparar claves.  <a href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">Más...</a><br /></td></tr>
@@ -360,7 +384,7 @@ class aed2::map&lt; Key, Meaning, Compare &gt;</h3>
 <dl class="section user"><dt>Se explica con</dt><dd>Diccionario(<span class="paramname">Key</span>, <span class="paramname">Meaning</span>) con parámetro formal <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> = f.operator() para algún f de tipo <span class="paramname">Compare</span>.</dd></dl>
 <dl class="section attention"><dt>Atención</dt><dd>No tenemos forma en AED2 de decir que el parámetro formal se define en tiempo de ejecución, como ocurre en este caso. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00674">674</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00939">939</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 </div><hr/>La documentación para esta clase fue generada a partir del siguiente fichero:<ul>
 <li><a class="el" href="map_8h_source.html">map.h</a></li>
 </ul>
@@ -370,7 +394,7 @@ class aed2::map&lt; Key, Meaning, Compare &gt;</h3>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map.js b/html/classaed2_1_1map.js
index 3cc1cc6..3fe6e8b 100644
--- a/html/classaed2_1_1map.js
+++ b/html/classaed2_1_1map.js
@@ -31,8 +31,16 @@ var classaed2_1_1map =
     [ "lower_bound", "classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3", null ],
     [ "empty", "classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee", null ],
     [ "size", "classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021", null ],
+    [ "addElem", "classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c", null ],
+    [ "insertionFix", "classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3", null ],
+    [ "leftrotate", "classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e", null ],
+    [ "rightrotate", "classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f", null ],
+    [ "invalidHint", "classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0", null ],
     [ "insert", "classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854", null ],
+    [ "isMaxOrMin", "classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c", null ],
+    [ "assignMaxOrMin", "classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2", null ],
     [ "insert", "classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8", null ],
+    [ "insert_or_upsert", "classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee", null ],
     [ "insert_or_assign", "classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475", null ],
     [ "insert_or_assign", "classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765", null ],
     [ "erase", "classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe", null ],
diff --git a/html/classaed2_1_1map_1_1const__iterator-members.html b/html/classaed2_1_1map_1_1const__iterator-members.html
index 56d20e8..1bcd2c2 100644
--- a/html/classaed2_1_1map_1_1const__iterator-members.html
+++ b/html/classaed2_1_1map_1_1const__iterator-members.html
@@ -116,7 +116,7 @@ $(document).ready(function(){initNavTree('classaed2_1_1map_1_1const__iterator.ht
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator.html b/html/classaed2_1_1map_1_1const__iterator.html
index 2a907fa..eabd05c 100644
--- a/html/classaed2_1_1map_1_1const__iterator.html
+++ b/html/classaed2_1_1map_1_1const__iterator.html
@@ -124,7 +124,7 @@ Métodos públicos</h2></td></tr>
 <tr class="memdesc:adaada1d489552555135d2ea89c67c271"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ver <a class="el" href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5" title="Avanza el iterador a la siguiente posición. ">aed2::map::iterator::operator++()</a>  <a href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271">Más...</a><br /></td></tr>
 <tr class="separator:adaada1d489552555135d2ea89c67c271"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:a2fbc216b2f11694bb567ea850bcfdb2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">operator++</a> (int)</td></tr>
-<tr class="memdesc:a2fbc216b2f11694bb567ea850bcfdb2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ver <a class="el" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974" title="Avanza el iterador a la siguiente posición. ">aed2::map::iterator::operator++(int)</a>  <a href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">Más...</a><br /></td></tr>
+<tr class="memdesc:a2fbc216b2f11694bb567ea850bcfdb2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ver <a class="el" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974" title="Busca el sucesor inorder del nodo al que apunta el iterador. ">aed2::map::iterator::operator++(int)</a>  <a href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">Más...</a><br /></td></tr>
 <tr class="separator:a2fbc216b2f11694bb567ea850bcfdb2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:ae12d6608eeca05957fa3de3f50287c90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90">operator--</a> ()</td></tr>
 <tr class="memdesc:ae12d6608eeca05957fa3de3f50287c90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ver <a class="el" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a" title="Retrocede el iterador a la posición anterior. ">aed2::map::iterator::operator--()</a>  <a href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90">Más...</a><br /></td></tr>
@@ -161,7 +161,7 @@ class aed2::map&lt; Key, Meaning, Compare &gt;::const_iterator</h3>
 <p>Parte del módulo que implementa los iteradores que no permiten la modificación de los significados. </p>
 <p>Este módulo es análogo a <a class="el" href="classaed2_1_1map_1_1iterator.html" title="Parte del módulo que implementa los iteradores que permiten la modificación de los significados...">aed2::map::iterator</a>, pero no permite la modificación cuando hay aliasing. Sólo se documentan las funcionalidades nuevas. Para las restantes, ver <a class="el" href="classaed2_1_1map_1_1iterator.html" title="Parte del módulo que implementa los iteradores que permiten la modificación de los significados...">aed2::map::iterator</a>. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01596">1596</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02262">2262</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 </div><hr/>La documentación para esta clase fue generada a partir del siguiente fichero:<ul>
 <li><a class="el" href="map_8h_source.html">map.h</a></li>
 </ul>
@@ -171,7 +171,7 @@ class aed2::map&lt; Key, Meaning, Compare &gt;::const_iterator</h3>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html b/html/classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html
index 4a2fec7..50d7b83 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838" title="Construye un iterador que apunta al valor del Nodo pos ">aed2::map::iterator::iterator(Node*)</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01663">1663</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02329">2329</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html b/html/classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html
index baf1e27..4be9601 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html
@@ -115,9 +115,9 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </table>
 </div><div class="memdoc">
 
-<p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974" title="Avanza el iterador a la siguiente posición. ">aed2::map::iterator::operator++(int)</a> </p>
+<p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974" title="Busca el sucesor inorder del nodo al que apunta el iterador. ">aed2::map::iterator::operator++(int)</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01641">1641</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02307">2307</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html b/html/classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html
index 77f8970..104ec8e 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe" title="Retorna el valor apuntado por *this ">aed2::map::iterator::operator*()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01629">1629</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02296">2296</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html b/html/classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html
index 0ac66a2..864949e 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51" title="idem !|operator== ">aed2::map::iterator::operator!=()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01657">1657</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02323">2323</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html b/html/classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html
index b572657..2604bc5 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60" title="Retorna la dirección del valor apuntado por *this ">aed2::map::iterator::operator-&gt;()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01633">1633</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02298">2298</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3.html b/html/classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3.html
index 396151e..1313413 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver aed2::map::iterator::operator Node*() </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01665">1665</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02331">2331</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html b/html/classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html
index 591bce1..330a1cc 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba" title="Crea un iterador nulo. ">aed2::map::iterator::iterator()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01607">1607</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02274">2274</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html b/html/classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html
index 4f4e29e..213223e 100644
--- a/html/classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html
+++ b/html/classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html
@@ -113,7 +113,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93" title="Puntero al nodo actual. Ver Estructura de Representación. ">aed2::map::iterator::n</a>. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01667">1667</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02333">2333</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html b/html/classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html
index cd4a1ca..9dda1a6 100644
--- a/html/classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html
+++ b/html/classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html
@@ -137,7 +137,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01625">1625</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02294">2294</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -147,7 +147,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html b/html/classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html
index 4b48446..e474949 100644
--- a/html/classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html
+++ b/html/classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225" title="Retrocede el iterador a la posición anterior. ">aed2::map::iterator::operator--(int)</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01649">1649</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02315">2315</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html b/html/classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html
index 8096b22..f33b379 100644
--- a/html/classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html
+++ b/html/classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5" title="Avanza el iterador a la siguiente posición. ">aed2::map::iterator::operator++()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01637">1637</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02302">2302</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html b/html/classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html
index a53a6e5..10b1e6d 100644
--- a/html/classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html
+++ b/html/classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a" title="Retrocede el iterador a la posición anterior. ">aed2::map::iterator::operator--()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01645">1645</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02311">2311</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html b/html/classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html
index c1c4f25..46a57cb 100644
--- a/html/classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html
+++ b/html/classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Ver <a class="el" href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5" title="Operador de igualdad. ">aed2::map::iterator::operator==()</a> </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01653">1653</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02319">2319</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator-members.html b/html/classaed2_1_1map_1_1iterator-members.html
index c9da167..176bb7d 100644
--- a/html/classaed2_1_1map_1_1iterator-members.html
+++ b/html/classaed2_1_1map_1_1iterator-members.html
@@ -120,7 +120,7 @@ $(document).ready(function(){initNavTree('classaed2_1_1map_1_1iterator.html','')
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator.html b/html/classaed2_1_1map_1_1iterator.html
index b328990..0c2ef6c 100644
--- a/html/classaed2_1_1map_1_1iterator.html
+++ b/html/classaed2_1_1map_1_1iterator.html
@@ -139,7 +139,7 @@ Métodos públicos</h2></td></tr>
 <tr class="memdesc:a7c44de7f0508186e135ddbcfe782fec5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Avanza el iterador a la siguiente posición.  <a href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5">Más...</a><br /></td></tr>
 <tr class="separator:a7c44de7f0508186e135ddbcfe782fec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:af4fe5565eb478cfccd254b2ef230b974"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">operator++</a> (int)</td></tr>
-<tr class="memdesc:af4fe5565eb478cfccd254b2ef230b974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Avanza el iterador a la siguiente posición.  <a href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">Más...</a><br /></td></tr>
+<tr class="memdesc:af4fe5565eb478cfccd254b2ef230b974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Busca el sucesor inorder del nodo al que apunta el iterador.  <a href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">Más...</a><br /></td></tr>
 <tr class="separator:af4fe5565eb478cfccd254b2ef230b974"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:ae7f70f71545d2a9de17b65edaaec748a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a">operator--</a> ()</td></tr>
 <tr class="memdesc:ae7f70f71545d2a9de17b65edaaec748a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrocede el iterador a la posición anterior.  <a href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a">Más...</a><br /></td></tr>
@@ -197,7 +197,7 @@ class aed2::map&lt; Key, Meaning, Compare &gt;::iterator</h3>
 <dl class="section attention"><dt>Atención</dt><dd>En caso de usar los iteradores como punteros, se desaconseja el uso de la posicion pasando-el-ultimo como valor nulo, ya que queda invalidada luego de aplicar la operación <a class="el" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a" title="Intercambia el contenido de *this y other ">aed2::map::swap</a>. Conviene usar el iterador nulo (que, lamentablemente, es independiente del diccionario).</dd></dl>
 <dl class="section see"><dt>Ver también</dt><dd><a href="http://en.cppreference.com/w/cpp/concept/BidirectionalIterator">Documentacion estándar de iteradores bidireccionales</a> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01354">1354</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01985">1985</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 </div><hr/>La documentación para esta clase fue generada a partir del siguiente fichero:<ul>
 <li><a class="el" href="map_8h_source.html">map.h</a></li>
 </ul>
@@ -207,7 +207,7 @@ class aed2::map&lt; Key, Meaning, Compare &gt;::iterator</h3>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html b/html/classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html
index 07d9677..1e60acd 100644
--- a/html/classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html
+++ b/html/classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html
@@ -130,7 +130,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>No hay forma de expresar, en el lenguaje de TADs, que un puntero apunta a la dirección de otro objeto. Es por eso que la postcondición es más débil de lo que debiera. Eso no ocurre en las otras funciones del TP. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01427">1427</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02066">2066</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -140,7 +140,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html b/html/classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html
index 073c848..4827e09 100644
--- a/html/classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html
+++ b/html/classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html
@@ -129,7 +129,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01409">1409</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02048">2048</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -139,7 +139,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html b/html/classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html
index cbf9bfd..c0a4d47 100644
--- a/html/classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html
+++ b/html/classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Tipo de los valores recorridos. Requerido por estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01362">1362</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01994">1994</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html b/html/classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html
index 9fec4cf..1f578fd 100644
--- a/html/classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html
+++ b/html/classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Tipo del puntero (resultado de operator-&gt;). Requerido por estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01366">1366</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02000">2000</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html b/html/classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html
index 22c7bc8..20cfaa0 100644
--- a/html/classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html
+++ b/html/classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Categoria del iterador: bidireccional. Requerido por estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01360">1360</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01992">1992</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html b/html/classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html
index 1d7c277..8806087 100644
--- a/html/classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html
+++ b/html/classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html
@@ -133,7 +133,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01445">1445</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02083">2083</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -143,7 +143,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e.html b/html/classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e.html
index 6a65357..2b1cf2c 100644
--- a/html/classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e.html
+++ b/html/classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e.html
@@ -124,7 +124,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section remark"><dt>Comentarios</dt><dd>Esta función se brinda como ayuda para el TP </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01559">1559</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02219">2219</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -134,7 +134,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html b/html/classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html
index 1ad0a58..1086ea2 100644
--- a/html/classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html
+++ b/html/classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Resultado de la diferencia entre dos punteros. Requerido por estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01368">1368</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02003">2003</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html b/html/classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html
index a72677e..4d1d04e 100644
--- a/html/classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html
+++ b/html/classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>idem !|operator== </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01523">1523</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02178">2178</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html b/html/classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html
index 00eb46f..889d6ce 100644
--- a/html/classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html
+++ b/html/classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html
@@ -138,7 +138,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dl class="section attention"><dt>Atención</dt><dd>El diccionario <code>d</code> se describe en castellano, porque depende de un aspecto de aliasing. Es la interpretacion de la posicion de memoria del nodo cabecera como si fuera un diccionario. No hay forma de expresar este hecho. Igualmente, estamos en la parte privada de nuestro modulo, con lo cual permitimos el castellano.</dd></dl>
 <dl class="section note"><dt>Nota</dt><dd>Este constructor permite castear punteros a nodos en iteradores. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01548">1548</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02206">2206</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -148,7 +148,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html b/html/classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html
index 7f42be1..9ff2e62 100644
--- a/html/classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html
+++ b/html/classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Tipo de la referencia (resultado de operator*). Requerido por estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01364">1364</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01997">1997</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html b/html/classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html
index 87e2fcc..5e557d1 100644
--- a/html/classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html
+++ b/html/classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html
@@ -130,7 +130,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01396">1396</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02035">2035</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -140,7 +140,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html b/html/classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html
index 28bdf80..87ee5d5 100644
--- a/html/classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html
+++ b/html/classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html
@@ -141,7 +141,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01519">1519</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02176">2176</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -151,7 +151,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html b/html/classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html
index f2dabc0..11e88d8 100644
--- a/html/classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html
+++ b/html/classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html
@@ -134,7 +134,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01499">1499</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02153">2153</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -144,7 +144,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html b/html/classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html
index 2a5f017..2832746 100644
--- a/html/classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html
+++ b/html/classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html
@@ -113,7 +113,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Puntero al nodo actual. Ver Estructura de Representación. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01585">1585</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02248">2248</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html b/html/classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html
index acb9937..217b45b 100644
--- a/html/classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html
+++ b/html/classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html
@@ -122,7 +122,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
   </dd>
 </dl>
 <dl class="section user"><dt>Aspectos de aliasing:</dt><dd>completar</dd></dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {HayAnterior?(this)} </dd></dl>
 <dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
@@ -133,7 +133,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01481">1481</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02133">2133</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -143,7 +143,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html b/html/classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html
index c123fca..3dcc9e8 100644
--- a/html/classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html
+++ b/html/classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html
@@ -115,9 +115,10 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </table>
 </div><div class="memdoc">
 
-<p>Avanza el iterador a la siguiente posición. </p>
+<p>Busca el sucesor inorder del nodo al que apunta el iterador. </p>
 <dl class="retval"><dt>Valores devueltos</dt><dd>
   <table class="retval">
+    <tr><td class="paramname">res</td><td>puntero apuntando a la dirección del sucesor Avanza el iterador a la siguiente posición</td></tr>
     <tr><td class="paramname">res</td><td>iterador apuntando a la dirección anterior de <b class="paramname">*this</b></td></tr>
   </table>
   </dd>
@@ -134,7 +135,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01463">1463</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02112">2112</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -144,7 +145,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="classaed2_1_1map_1_1iterator.html">iterator</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html b/html/classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html
index f7875c9..9bc7973 100644
--- a/html/classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html
+++ b/html/classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <p>Devuelve un puntero al nodo raíz. </p>
 <dl class="section return"><dt>Devuelve</dt><dd>Nodo a la raiz del arbol. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01904">1904</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02637">2637</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -127,7 +127,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html b/html/classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html
index 1cdf097..da9f4f3 100644
--- a/html/classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html
+++ b/html/classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01008">1008</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01381">1381</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html b/html/classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html
index 4e188d8..b09d46a 100644
--- a/html/classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html
+++ b/html/classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html
@@ -128,7 +128,7 @@ template&lt;class K , class V , class C &gt; </div>
 <p>Renombre de not(<b class="paramname">m1</b> &lt; <b class="paramname">m2</b>) </p>
 <dl class="section see"><dt>Ver también</dt><dd>aed2::operator&lt;() </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l02025">2025</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02768">2768</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -138,7 +138,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html b/html/classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html
index 2d480f2..6736eaf 100644
--- a/html/classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html
+++ b/html/classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html
@@ -129,15 +129,15 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
   </dd>
 </dl>
 <dl class="section user"><dt>Aspectos de aliasing:</dt><dd>completar</dd></dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
-<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {definido?(<b class="paramname">key</b>,this)}</dd></dl>
+<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {res  obtener(<b class="paramname">key</b>,this)}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>( <img class="formulaInl" alt="$\log$" src="form_19.png"/>(<b>size</b>(<b class="paramname">*this</b>) <img class="formulaInl" alt="$\cdot$" src="form_13.png"/> <b>cmp</b>(<b class="paramname">*this</b>))</dd>
 </dl>
 <dl class="section remark"><dt>Comentarios</dt><dd>Esta función, que se asemeja más a la forma de programar propuesta en AED2 que al estándar C++, fue incluida en el estándar C++11. Antes era obligación recurrir a la función find. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00907">907</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01218">1218</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -147,7 +147,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html b/html/classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html
index 2bcb04a..148f22c 100644
--- a/html/classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html
+++ b/html/classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html
@@ -114,7 +114,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <p>Orden total para comparar claves. </p>
 <p>Definición: lt(x, y) == true cuando x es menor que y; si lt(x,y) == lt(y,x) == false, entonces x e y son iguales. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01888">1888</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02599">2599</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -124,7 +124,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html b/html/classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html
index 6385d88..e3bcd11 100644
--- a/html/classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html
+++ b/html/classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html
@@ -147,7 +147,7 @@ template&lt;class K , class V , class C &gt; </div>
 </dl>
 <dl class="section see"><dt>Ver también</dt><dd><a href="http://en.cppreference.com/w/cpp/concept/Swappable">Swappable</a> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l02049">2049</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02792">2792</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -157,7 +157,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html b/html/classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html
index 7605562..1af0404 100644
--- a/html/classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html
+++ b/html/classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de los punteros de los valores constantes guardados. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00714">714</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00989">989</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html b/html/classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html
index 08d748a..76eddde 100644
--- a/html/classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html
+++ b/html/classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01237">1237</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01868">1868</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html b/html/classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html
index 7b14243..fff099c 100644
--- a/html/classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html
+++ b/html/classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01263">1263</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01889">1889</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html b/html/classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html
index 2c888ab..075c6ec 100644
--- a/html/classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html
+++ b/html/classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html
@@ -128,7 +128,7 @@ template&lt;class K , class V , class C &gt; </div>
 <p>Renombre de <b class="paramname">m2</b> &lt; <b class="paramname">m1</b> </p>
 <dl class="section see"><dt>Ver también</dt><dd>aed2::operator&lt;() </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l02003">2003</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02746">2746</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -138,7 +138,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html b/html/classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html
index cdee00d..ff54ca2 100644
--- a/html/classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html
+++ b/html/classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de referencia constante de los valores guardados. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00706">706</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00979">979</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html b/html/classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html
index 7904574..1c28e42 100644
--- a/html/classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html
+++ b/html/classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html
@@ -129,7 +129,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01310">1310</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01933">1933</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -139,7 +139,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html b/html/classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html
index ea6767c..3edc756 100644
--- a/html/classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html
+++ b/html/classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(<b>del</b>(<b class="paramname">*this</b>))</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01172">1172</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01792">1792</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -133,7 +133,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html b/html/classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html
index 70d6aa7..7c946c2 100644
--- a/html/classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html
+++ b/html/classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html
@@ -154,7 +154,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dl class="section attention"><dt>Atención</dt><dd>Para prevenir que el nuevo valor redefina uno ya existente, usar <a class="el" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854" title="Inserta value en el diccionario. ">aed2::map::insert</a>. </dd></dl>
 <dl class="section remark"><dt>Comentarios</dt><dd>Esta función es similar al operator[], pero tiene dos ventajas y una desventaja. Las ventajas es que 1. se puede indicar un <b class="paramname">hint</b> para la búsqueda y 2. no es necesario que <span class="paramname">Meaning</span> tenga constructor sin parámetros. La desventaja es que la notación no es tan bonita. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01115">1115</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01729">1729</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -164,7 +164,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html b/html/classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html
index fcc6c29..362288e 100644
--- a/html/classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html
+++ b/html/classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo usado para describir diferencias entre punteros. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00722">722</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00999">999</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html b/html/classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html
index 5774806..ebf1093 100644
--- a/html/classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html
+++ b/html/classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html
@@ -130,7 +130,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(<b>del</b>(<b class="paramname">*pos</b>) + <img class="formulaInl" alt="$\log$" src="form_19.png"/>(<b>size</b>(<b class="paramname">*this</b>)) <img class="formulaInl" alt="$\cdot$" src="form_13.png"/> <b>cmp</b>(<b class="paramname">*this</b>))</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01157">1157</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01776">1776</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -140,7 +140,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html b/html/classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html
index de0367e..4433ee6 100644
--- a/html/classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html
+++ b/html/classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 
 <p>Devuelve un iterador al primer valor con clave mayor o igual a <b class="paramname">key</b> </p>
-<p>Retorna un iterador apuntando a la primer posición cuyo valor tenga clave al menos <b class="paramname">key</b>. Si dicho valor no existe, porque <b class="paramname">key</b> es mayor a todas las claves de <b class="paramname">*this</b>, entonces el iterador retornado apunta a la posición <em>pasando-el-último</em>.</p>
+<p>Retorna un iterador apuntando a la primera posición cuyo valor tenga clave al menos <b class="paramname">key</b>. Si dicho valor no existe, porque <b class="paramname">key</b> es mayor a todas las claves de <b class="paramname">*this</b>, entonces el iterador retornado apunta a la posición <em>pasando-el-último</em>.</p>
 <dl class="params"><dt>Parámetros</dt><dd>
   <table class="params">
     <tr><td class="paramname">key</td><td>clave a buscar </td></tr>
@@ -137,7 +137,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>( <img class="formulaInl" alt="$\log$" src="form_19.png"/>(<b>size</b>(<b class="paramname">*this</b>)) <img class="formulaInl" alt="$\cdot$" src="form_13.png"/> <b>cmp</b>(<b class="paramname">*this</b>))</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01003">1003</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01376">1376</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -147,7 +147,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html b/html/classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html
index c50270a..c45f3f9 100644
--- a/html/classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html
+++ b/html/classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo del comparador. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00698">698</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00969">969</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html b/html/classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html
index c74f4ff..b9c6a8f 100644
--- a/html/classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html
+++ b/html/classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01320">1320</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01939">1939</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html b/html/classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html
index 551df01..25cbd2a 100644
--- a/html/classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html
+++ b/html/classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de las claves. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00686">686</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00954">954</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html b/html/classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html
index 3c285ee..996f40e 100644
--- a/html/classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html
+++ b/html/classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html
@@ -137,7 +137,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section note"><dt>Nota</dt><dd>La razón por la que se "invalidan" los iteradores pasando-el-fin tiene que ver con la forma en que se implementa el módulo (que emula la implementacion de C++). No hay ninguna razón técnica que impida mantener los iteradores pasando el fin, salvo por un pequeño ahorro de memoria y tiempo. En caso de querer usar los iteradores como punteros, se recomienda usar el iterador nulo de diccionario para representar al valor inválido, en lugar de usar los iteradores pasando-el-ultimo. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01199">1199</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01830">1830</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -147,7 +147,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html b/html/classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html
index 97da424..5a4badd 100644
--- a/html/classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html
+++ b/html/classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html
@@ -113,7 +113,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Cantidad de elementos en el diccionario. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01890">1890</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02601">2601</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html b/html/classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html
index 00214cb..89f552f 100644
--- a/html/classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html
+++ b/html/classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html
@@ -129,7 +129,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01232">1232</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01865">1865</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -139,7 +139,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html b/html/classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html
index 72732db..3d79e33 100644
--- a/html/classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html
+++ b/html/classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html
@@ -173,7 +173,7 @@ template&lt;class iterator &gt; </div>
 <dl class="section attention"><dt>Atención</dt><dd>El parámetro formal <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> del TAD diccionario se establece en esta función. <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> = <b class="paramname">c</b>.operator()</dd></dl>
 <dl class="section see"><dt>Ver también</dt><dd><a href="http://en.cppreference.com/w/cpp/concept/InputIterator">Documentación de InputIterator</a> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00832">832</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01133">1133</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -183,7 +183,7 @@ template&lt;class iterator &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html b/html/classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html
index d8f9e83..e7d986e 100644
--- a/html/classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html
+++ b/html/classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01082">1082</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01659">1659</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html b/html/classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html
index fa4d84b..28e4c97 100644
--- a/html/classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html
+++ b/html/classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html
@@ -128,15 +128,15 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
   </table>
   </dd>
 </dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
-<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {true} </dd></dl>
+<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {res  vac\'io}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>El parámetro formal <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> del TAD diccionario se establece en esta función. <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> = <b class="paramname">c</b>.operator() </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00765">765</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01053">1053</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -146,7 +146,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html b/html/classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html
index 1a5b337..da56c44 100644
--- a/html/classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html
+++ b/html/classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html
@@ -153,7 +153,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>Para garantizar que el nuevo elemento se inserte sí o sí, usar <a class="el" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475" title="Inserta o redefine value en el diccionario. ">aed2::map::insert_or_assign</a>. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01077">1077</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01581">1581</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -163,7 +163,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html b/html/classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html
index 2b2c645..32ece38 100644
--- a/html/classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html
+++ b/html/classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01294">1294</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01915">1915</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html b/html/classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html
index e0527cb..68baab4 100644
--- a/html/classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html
+++ b/html/classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00912">912</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01235">1235</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html b/html/classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html
index cc72639..658e4b5 100644
--- a/html/classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html
+++ b/html/classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html
@@ -117,9 +117,9 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <li>Color::Black (color negro) </li>
 <li>Color::Header (color azul, reservado para la cabecera)</li>
 </ul>
-<dl class="section see"><dt>Ver también</dt><dd>Cormen et al. <b>[CormenLeisersonRivestStein2009]</b> e <a class="el" href="Implementacion.html">Implementación del árbol red-black</a> </dd></dl>
+<dl class="section see"><dt>Ver también</dt><dd>Cormen et al. <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a> e <a class="el" href="Implementacion.html">Implementación del árbol red-black</a> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01684">1684</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02352">2352</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -129,7 +129,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html b/html/classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html
index 3d5edb4..c4e1fe9 100644
--- a/html/classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html
+++ b/html/classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de las valores almacenados. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00694">694</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00964">964</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html b/html/classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html
index 08c651b..cf02e81 100644
--- a/html/classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html
+++ b/html/classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de los punteros de los valores guardados. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00710">710</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00984">984</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html b/html/classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html
index 284f2cc..e6cd7d4 100644
--- a/html/classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html
+++ b/html/classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html
@@ -129,7 +129,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01258">1258</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01886">1886</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -139,7 +139,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html b/html/classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html
index 3852b60..1933a48 100644
--- a/html/classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html
+++ b/html/classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html
@@ -128,15 +128,15 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
   </table>
   </dd>
 </dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
-<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {true} </dd></dl>
+<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {res  other}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(<b>copy</b>(<b class="paramname">other</b>))</dd>
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>El parámetro formal <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> del TAD diccionario se establece en esta función. <img class="formulaInl" alt="$&lt;$" src="form_0.png"/> es igual al operator() del comparador de <b class="paramname">other</b> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00784">784</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01074">1074</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -146,7 +146,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html b/html/classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html
index 04512b2..cbd4cd7 100644
--- a/html/classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html
+++ b/html/classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01268">1268</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01892">1892</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html b/html/classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html
index 9a41bd9..aca50ae 100644
--- a/html/classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html
+++ b/html/classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01907">1907</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02640">2640</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html b/html/classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html
index ebbe6ce..7ccec87 100644
--- a/html/classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html
+++ b/html/classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html
@@ -128,7 +128,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01041">1041</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01412">1412</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -138,7 +138,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html b/html/classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html
index 1117fb0..816bf28 100644
--- a/html/classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html
+++ b/html/classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo usado para describir tamaños. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00718">718</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00994">994</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html b/html/classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html
index 3f75a16..831c426 100644
--- a/html/classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html
+++ b/html/classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html
@@ -107,7 +107,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <p>Este tipo implementa un iterador que puede recorrer el diccionario en el orden inverso. Es un renombre, porque nos aprovechamos del adaptador <code>std::reverse_iterator</code> que implementa un iterador reverso para <b>cualquier</b> iterador bidireccional que respete el estándar C++. Su interfaz y complejidades pueden consultarse en la documentación de la biblioteca estándar</p>
 <dl class="section see"><dt>Ver también</dt><dd><a href="http://en.cppreference.com/w/cpp/iterator/reverse_iterator">Documentación de <code>std::reverse_iterator</code></a> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00734">734</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01016">1016</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html b/html/classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html
index 82d71a3..2cbb670 100644
--- a/html/classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html
+++ b/html/classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html
@@ -156,7 +156,7 @@ template&lt;class K , class V , class C &gt; </div>
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>Para determinar la comparación de las claves no se utiliza el functor de comparación (que podrian ser distintos entre los diccionarios), sino si los valores son los mismos con respecto al operator&lt; de <span class="paramname">K</span> y T{V}. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01992">1992</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02735">2735</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -166,7 +166,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html b/html/classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html
index 36a2148..1cdf059 100644
--- a/html/classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html
+++ b/html/classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01120">1120</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01737">1737</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html b/html/classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html
index fbc1ec2..f6af106 100644
--- a/html/classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html
+++ b/html/classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html
@@ -113,7 +113,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Cabeceera del arbol; ver <a class="el" href="Implementacion.html">Implementación del árbol red-black</a>. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01892">1892</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02603">2603</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html b/html/classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html
index 107afdf..52c1102 100644
--- a/html/classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html
+++ b/html/classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Devuelve el significado asociado a <b class="paramname">key</b>, asegurando su existencia. </p>
 <p>Devuelve el significado asociado a <b class="paramname">key</b>. Si <b class="paramname">key</b> no está definido en <b class="paramname">*this</b>, entonces se inserta un nuevo valor con clave <b class="paramname">key</b> y significado <span class="paramname">Value</span>(). De esta forma, podemos usar <code>operator[]</code> para definir nuevos valores o modificar los existentes.</p>
-<p>Ejemplo: </p><div class="fragment"><div class="line"><a class="code" href="classaed2_1_1map.html">aed2::map&lt;int, int&gt;</a> d;</div><div class="line">d[1] = 2;      <span class="comment">//define 1 -&gt; 2</span></div><div class="line">d[1] = 3;      <span class="comment">//redefine 1 -&gt; 3</span></div><div class="line"></div><div class="line"><a class="code" href="classaed2_1_1map.html">aed2::map&lt;int, int&gt;</a> m;</div><div class="line"><span class="keywordflow">if</span>(m[1] == 3) {...} <span class="comment">//posible bug: define 1 -&gt; basura (que puede o no ser 3).</span></div></div><!-- fragment --><dl class="params"><dt>Parámetros</dt><dd>
+<p>Ejemplo: </p><div class="fragment"><div class="line"><a class="code" href="classaed2_1_1map.html">aed2::map&lt;int, int&gt;</a> d;</div><div class="line">d[1] = 2;      <span class="comment">//define 1 -&gt; 2</span></div><div class="line">d[1] = 3;      <span class="comment">//redefine 1 -&gt; 3</span></div><div class="line"></div><div class="line"><a class="code" href="classaed2_1_1map.html">aed2::map&lt;int, int&gt;</a> m;</div><div class="line"><span class="keywordflow">if</span>(m[1] == 3) {...} <span class="comment">//posible bug: define 1 -&gt; basura (que puede o no ser</span></div><div class="line">3).</div></div><!-- fragment --><dl class="params"><dt>Parámetros</dt><dd>
   <table class="params">
     <tr><td class="paramname">key</td><td>clave a buscar. </td></tr>
   </table>
@@ -131,8 +131,8 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section user"><dt>Requerimientos sobre el tipo Meaning</dt><dd>Requiere que <span class="paramname">Meaning</span> tenga un constructor sin parámetros con complejidad <img class="formulaInl" alt="$O$" src="form_1.png"/>(<em>c</em>)</dd></dl>
 <dl class="section user"><dt>Aspectos de aliasing:</dt><dd>completar</dd></dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
-<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {definido?(<b class="paramname">key</b>,this)} </dd></dl>
+<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {res  obtener(<b class="paramname">key</b>,this)}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>( <img class="formulaInl" alt="$\log$" src="form_19.png"/>(<b>size</b>(<b class="paramname">*this</b>)) <img class="formulaInl" alt="$\cdot$" src="form_13.png"/> <b>cmp</b>(<b class="paramname">*this</b>) + <em>x</em>) donde<ul>
@@ -142,7 +142,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00950">950</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01290">1290</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -152,7 +152,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html b/html/classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html
index c6344b5..efbcfc7 100644
--- a/html/classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html
+++ b/html/classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de los significados. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00690">690</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00959">959</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html b/html/classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html
index 03db6f2..59ab5f9 100644
--- a/html/classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html
+++ b/html/classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01289">1289</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01910">1910</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html b/html/classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html
index 3cb0272..14ffa74 100644
--- a/html/classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html
+++ b/html/classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01315">1315</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01936">1936</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html b/html/classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html
index 64108c5..8c674c2 100644
--- a/html/classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html
+++ b/html/classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html
@@ -124,7 +124,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>Como se explicita, esta función no hace nada, porque no tiene un objetivo funcional. De hecho, su implementación es innecesaria bajo la hipótesis de infinitud de memoria (que muchos sistemas de especificación, e.g. nuestros TADs, asumen por simplicidad). Sin embargo, esta función tiene un comportamiento real y es liberar la memoria usada. Claramente, esta funcionalidad depende del sistema en que estemos trabajando. Suponiendo que tuvieramos acceso a la implementación de las tablas de memoria del sistema operativo (o al mapa de memoria de la computadora), podríamos expresar la funcionalidad estableciendo la liberación de la memoria </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00880">880</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01189">1189</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -134,7 +134,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html b/html/classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html
index 9cbfc3f..dd4ae53 100644
--- a/html/classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html
+++ b/html/classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html
@@ -135,7 +135,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dl>
 <dl class="section return"><dt>Devuelve</dt><dd>true cuando <b class="paramname">k1</b> y <b class="paramname">k2</b> son iguales con respecto a <b class="paramname">this</b>-&gt;lt. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01920">1920</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02656">2656</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -145,7 +145,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html b/html/classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html
index 90e4261..ec50a70 100644
--- a/html/classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html
+++ b/html/classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html
@@ -116,7 +116,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00981">981</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01336">1336</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -126,7 +126,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html b/html/classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html
index 780e310..37f9ea8 100644
--- a/html/classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html
+++ b/html/classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01242">1242</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01871">1871</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html b/html/classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html
index 724ef81..6c56c6e 100644
--- a/html/classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html
+++ b/html/classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html
@@ -128,7 +128,7 @@ template&lt;class K , class V , class C &gt; </div>
 <p>Renombre de not(<b class="paramname">m1</b> == <b class="paramname">m2</b>) </p>
 <dl class="section see"><dt>Ver también</dt><dd>aed2::operator==() </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01964">1964</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02704">2704</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -138,7 +138,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_abfc51b39670220e79037ac067006e933.html b/html/classaed2_1_1map_abfc51b39670220e79037ac067006e933.html
index 96b0354..4f72af8 100644
--- a/html/classaed2_1_1map_abfc51b39670220e79037ac067006e933.html
+++ b/html/classaed2_1_1map_abfc51b39670220e79037ac067006e933.html
@@ -148,7 +148,7 @@ template&lt;class K , class V , class C &gt; </div>
   </table>
   </dd>
 </dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {true} </dd></dl>
 <dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
@@ -156,7 +156,7 @@ template&lt;class K , class V , class C &gt; </div>
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>Para determinar la igualdad de las claves no se utiliza el functor de comparación (que podrian ser distintos entre los diccionarios), sino si los valores son los mismos con respecto al operator== de <span class="paramname">K</span> y T{V}. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01953">1953</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02692">2692</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -166,7 +166,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html b/html/classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html
index f4faed5..7411d69 100644
--- a/html/classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html
+++ b/html/classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html
@@ -129,7 +129,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01284">1284</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01907">1907</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -139,7 +139,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ac606d334809066929522964d45e76317.html b/html/classaed2_1_1map_ac606d334809066929522964d45e76317.html
index a008d51..cdf9722 100644
--- a/html/classaed2_1_1map_ac606d334809066929522964d45e76317.html
+++ b/html/classaed2_1_1map_ac606d334809066929522964d45e76317.html
@@ -129,15 +129,15 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
   </dd>
 </dl>
 <dl class="section user"><dt>Aspectos de aliasing:</dt><dd>completar</dd></dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
-<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {other0 = other} </dd></dl>
+<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {res = other0}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(<b>del</b>(<b class="paramname">*this</b>) <img class="formulaInl" alt="$+$" src="form_20.png"/> <b>copy</b>(<b class="paramname">other</b>))</dd>
 </dl>
 <dl class="section note"><dt>Nota</dt><dd>Es importante remarcar que no se realiza ninguna comparación entre los elementos. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00855">855</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01157">1157</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -147,7 +147,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html b/html/classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html
index 89ad339..a9614b3 100644
--- a/html/classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html
+++ b/html/classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html
@@ -140,7 +140,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01141">1141</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01759">1759</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -150,7 +150,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html b/html/classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html
index b0359ba..941491e 100644
--- a/html/classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html
+++ b/html/classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html
@@ -107,7 +107,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <p>Este tipo implementa un iterador que puede recorrer el diccionario en el orden inverso. Es un renombre, porque nos aprovechamos del adaptador <code>std::reverse_iterator</code> que implementa un iterador reverso para <b>cualquier</b> iterador bidireccional que respete el estándar C++. Su interfaz y complejidades puede consultarse en la documentación de la biblioteca estándar</p>
 <dl class="section see"><dt>Ver también</dt><dd><a href="http://en.cppreference.com/w/cpp/iterator/reverse_iterator">Documentación de <code>std::reverse_iterator</code></a> </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00745">745</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01032">1032</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -117,7 +117,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html b/html/classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html
index 57e72d6..c9158c8 100644
--- a/html/classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html
+++ b/html/classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Renombre para poder acceder al tipo de referencia de los valores guardados. Compatible con estándar C++. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00702">702</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l00974">974</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html b/html/classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html
index de5a61b..ba434ea 100644
--- a/html/classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html
+++ b/html/classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html
@@ -128,7 +128,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01027">1027</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01400">1400</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -138,7 +138,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html b/html/classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html
index df33bdb..3809d63 100644
--- a/html/classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html
+++ b/html/classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html
@@ -130,15 +130,15 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
   </dd>
 </dl>
 <dl class="section user"><dt>Aspectos de aliasing:</dt><dd>completar</dd></dl>
-<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar} </dd></dl>
-<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {completar}</dd></dl>
+<dl class="section pre"><dt>Precondición</dt><dd><b>P</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {true} </dd></dl>
+<dl class="section post"><dt>Postcondición</dt><dd><b>Q</b> <img class="formulaInl" alt="$\equiv$" src="form_11.png"/> {def?(key,this) =&gt; res = iterator(key) else res = nullptr}</dd></dl>
 <dl class="section complexity">
 <dt>Complejidad Temporal</dt>
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>( <img class="formulaInl" alt="$\log$" src="form_19.png"/>(<b>size</b>(<b class="paramname">*this</b>)) <img class="formulaInl" alt="$\cdot$" src="form_13.png"/> <b>cmp</b>(<b class="paramname">*this</b>))</dd>
 </dl>
 <dl class="section attention"><dt>Atención</dt><dd>Si el objetivo es insertar un valor con clave <b class="paramname">key</b> de acuerdo a alguna condición, entonces conviene usar <a class="el" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f" title="Devuelve un iterador al primer valor con clave mayor o igual a key ">aed2::map::lower_bound</a> para la búsqueda, dado que el resultado puede ser usado como hint, mejorando la complejidad de la inserción. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l00976">976</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l01317">1317</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -148,7 +148,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html b/html/classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html
index ad3c930..78a078b 100644
--- a/html/classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html
+++ b/html/classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html
@@ -128,7 +128,7 @@ template&lt;class K , class V , class C &gt; </div>
 <p>Renombre de not(<b class="paramname">m2</b> &lt; <b class="paramname">m1</b>) </p>
 <dl class="section see"><dt>Ver también</dt><dd>aed2::operator&lt;() </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l02014">2014</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02757">2757</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -138,7 +138,7 @@ template&lt;class K , class V , class C &gt; </div>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/classes.html b/html/classes.html
index e8794c6..fb2d774 100644
--- a/html/classes.html
+++ b/html/classes.html
@@ -113,7 +113,7 @@ $(document).ready(function(){initNavTree('classes.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/files.html b/html/files.html
index 7eb3647..23d2cc8 100644
--- a/html/files.html
+++ b/html/files.html
@@ -97,7 +97,8 @@ $(document).ready(function(){initNavTree('files.html','');});
 <div class="contents">
 <div class="textblock">Lista de todos los archivos documentados y con descripciones breves:</div><div class="directory">
 <table class="directory">
-<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><a href="map_8h_source.html"><span class="icondoc"></span></a><a class="el" href="map_8h.html" target="_self">map.h</a></td><td class="desc"></td></tr>
+<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><a href="main_8cpp_source.html"><span class="icondoc"></span></a><b>main.cpp</b></td><td class="desc"></td></tr>
+<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><a href="map_8h_source.html"><span class="icondoc"></span></a><a class="el" href="map_8h.html" target="_self">map.h</a></td><td class="desc"></td></tr>
 </table>
 </div><!-- directory -->
 </div><!-- contents -->
@@ -105,7 +106,7 @@ $(document).ready(function(){initNavTree('files.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/files.js b/html/files.js
index 10902d2..debc902 100644
--- a/html/files.js
+++ b/html/files.js
@@ -1,5 +1,6 @@
 var files =
 [
+    [ "main.cpp", "main_8cpp_source.html", null ],
     [ "map.h", "map_8h.html", [
       [ "map", "classaed2_1_1map.html", "classaed2_1_1map" ],
       [ "iterator", "classaed2_1_1map_1_1iterator.html", "classaed2_1_1map_1_1iterator" ],
diff --git a/html/functions.html b/html/functions.html
index b1cf2d4..71380c8 100644
--- a/html/functions.html
+++ b/html/functions.html
@@ -101,6 +101,12 @@ $(document).ready(function(){initNavTree('functions.html','');});
 
 
 <h3><a class="anchor" id="index_a"></a>- a -</h3><ul>
+<li>addElem()
+: <a class="el" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
+<li>assignMaxOrMin()
+: <a class="el" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>at()
 : <a class="el" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
@@ -202,9 +208,21 @@ $(document).ready(function(){initNavTree('functions.html','');});
 <li>insert_or_assign()
 : <a class="el" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
+<li>insert_or_upsert()
+: <a class="el" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
+<li>insertionFix()
+: <a class="el" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
+<li>invalidHint()
+: <a class="el" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>is_header()
 : <a class="el" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">aed2::map&lt; Key, Meaning, Compare &gt;::Node</a>
 </li>
+<li>isMaxOrMin()
+: <a class="el" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>iterator()
 : <a class="el" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838">aed2::map&lt; Key, Meaning, Compare &gt;::iterator</a>
 </li>
@@ -228,6 +246,9 @@ $(document).ready(function(){initNavTree('functions.html','');});
 
 
 <h3><a class="anchor" id="index_l"></a>- l -</h3><ul>
+<li>leftrotate()
+: <a class="el" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>lower_bound()
 : <a class="el" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
@@ -335,8 +356,11 @@ $(document).ready(function(){initNavTree('functions.html','');});
 <li>reverse_iterator
 : <a class="el" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
+<li>rightrotate()
+: <a class="el" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>root()
-: <a class="el" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+: <a class="el" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
 </ul>
 
@@ -378,7 +402,7 @@ $(document).ready(function(){initNavTree('functions.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/functions_enum.html b/html/functions_enum.html
index 0f1a21a..2e52a65 100644
--- a/html/functions_enum.html
+++ b/html/functions_enum.html
@@ -101,7 +101,7 @@ $(document).ready(function(){initNavTree('functions_enum.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/functions_func.html b/html/functions_func.html
index f55c552..0584d04 100644
--- a/html/functions_func.html
+++ b/html/functions_func.html
@@ -94,6 +94,12 @@ $(document).ready(function(){initNavTree('functions_func.html','');});
 &#160;
 
 <h3><a class="anchor" id="index_a"></a>- a -</h3><ul>
+<li>addElem()
+: <a class="el" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
+<li>assignMaxOrMin()
+: <a class="el" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>at()
 : <a class="el" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
@@ -159,11 +165,23 @@ $(document).ready(function(){initNavTree('functions_func.html','');});
 <li>insert_or_assign()
 : <a class="el" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
+<li>insert_or_upsert()
+: <a class="el" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
+<li>insertionFix()
+: <a class="el" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
+<li>invalidHint()
+: <a class="el" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>is_header()
 : <a class="el" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">aed2::map&lt; Key, Meaning, Compare &gt;::Node</a>
 </li>
+<li>isMaxOrMin()
+: <a class="el" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>iterator()
-: <a class="el" href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba">aed2::map&lt; Key, Meaning, Compare &gt;::iterator</a>
+: <a class="el" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838">aed2::map&lt; Key, Meaning, Compare &gt;::iterator</a>
 </li>
 </ul>
 
@@ -176,8 +194,11 @@ $(document).ready(function(){initNavTree('functions_func.html','');});
 
 
 <h3><a class="anchor" id="index_l"></a>- l -</h3><ul>
+<li>leftrotate()
+: <a class="el" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>lower_bound()
-: <a class="el" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+: <a class="el" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
 </ul>
 
@@ -255,8 +276,11 @@ $(document).ready(function(){initNavTree('functions_func.html','');});
 <li>rend()
 : <a class="el" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
+<li>rightrotate()
+: <a class="el" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+</li>
 <li>root()
-: <a class="el" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">aed2::map&lt; Key, Meaning, Compare &gt;</a>
+: <a class="el" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">aed2::map&lt; Key, Meaning, Compare &gt;</a>
 </li>
 </ul>
 
@@ -291,7 +315,7 @@ $(document).ready(function(){initNavTree('functions_func.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/functions_type.html b/html/functions_type.html
index 52a7cca..13ef66e 100644
--- a/html/functions_type.html
+++ b/html/functions_type.html
@@ -141,7 +141,7 @@ $(document).ready(function(){initNavTree('functions_type.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/functions_vars.html b/html/functions_vars.html
index 9281616..f2bab6b 100644
--- a/html/functions_vars.html
+++ b/html/functions_vars.html
@@ -123,7 +123,7 @@ $(document).ready(function(){initNavTree('functions_vars.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/graph_legend.html b/html/graph_legend.html
index ebb2c5a..01758a4 100644
--- a/html/graph_legend.html
+++ b/html/graph_legend.html
@@ -129,7 +129,7 @@ Una flecha segmentada amarilla indica la relación entre una instancia template
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/hierarchy.html b/html/hierarchy.html
index 75de262..664b4c9 100644
--- a/html/hierarchy.html
+++ b/html/hierarchy.html
@@ -109,7 +109,7 @@ $(document).ready(function(){initNavTree('hierarchy.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/index.html b/html/index.html
index be7dba7..457d769 100644
--- a/html/index.html
+++ b/html/index.html
@@ -96,11 +96,11 @@ $(document).ready(function(){initNavTree('index.html','');});
 </div><!--header-->
 <div class="contents">
 <div class="textblock"><ul>
-<li><b>Autores:</b> Nombre y Apellido (mail), Nombre y Apellido (mail), Nombre y Apellido (mail), Nombre y Apellido (mail)</li>
+<li><b>Autores:</b> Oliver Gibson (<a href="#" onclick="location.href='mai'+'lto:'+'gib'+'so'+'n31'+'@g'+'mai'+'l.'+'com'; return false;">gibso<span style="display: none;">.nosp@m.</span>n31@<span style="display: none;">.nosp@m.</span>gmail<span style="display: none;">.nosp@m.</span>.com</a>), Catalina Juarros (<a href="#" onclick="location.href='mai'+'lto:'+'cat'+'al'+'ina'+'ju'+'arr'+'os'+'@gm'+'ai'+'l.c'+'om'; return false;">catal<span style="display: none;">.nosp@m.</span>inaj<span style="display: none;">.nosp@m.</span>uarro<span style="display: none;">.nosp@m.</span>s@gm<span style="display: none;">.nosp@m.</span>ail.c<span style="display: none;">.nosp@m.</span>om</a>), Miguel Nehmad Alché (<a href="#" onclick="location.href='mai'+'lto:'+'mik'+'ea'+'lch'+'e@'+'gma'+'il'+'.co'+'m'; return false;">mikea<span style="display: none;">.nosp@m.</span>lche<span style="display: none;">.nosp@m.</span>@gmai<span style="display: none;">.nosp@m.</span>l.co<span style="display: none;">.nosp@m.</span>m</a>), Jessica Singer (<a href="#" onclick="location.href='mai'+'lto:'+'sin'+'ge'+'r.j'+'ee'+'ss@'+'gm'+'ail'+'.c'+'om'; return false;">singe<span style="display: none;">.nosp@m.</span>r.je<span style="display: none;">.nosp@m.</span>ess@g<span style="display: none;">.nosp@m.</span>mail<span style="display: none;">.nosp@m.</span>.com</a>)</li>
 <li><b>Materia:</b> Algoritmos y Estructuras de Datos II</li>
 </ul>
 <p>El presente documento describe la implementación de un módulo diccionario dentro del marco de Algoritmos y Estructuras de Datos II. Este módulo corresponde al TP2 del primer cuatrimestre del 2017 y su objetivo es servir de referencia para los docentes y de base para el enunciado del TP.</p>
-<p>El trabajo práctico consiste en la implementación de un diccionario sobre árboles red-black, cuya descripción se puede encontrar en <b>[CormenLeisersonRivestStein2009]</b>. La interfaz solicitada corresponde (vagamente) a la provista por C++03, a fin de poder comparar fácilmente los resultados obtenidos con los esperados.</p>
+<p>El trabajo práctico consiste en la implementación de un diccionario sobre árboles red-black, cuya descripción se puede encontrar en <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a>. La interfaz solicitada corresponde (vagamente) a la provista por C++03, a fin de poder comparar fácilmente los resultados obtenidos con los esperados.</p>
 <dl class="section user"><dt>Índice</dt><dd></dd></dl>
 <ul>
 <li><a class="el" href="Enunciado.html">Enunciado</a></li>
@@ -117,7 +117,7 @@ $(document).ready(function(){initNavTree('index.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/index.js b/html/index.js
index d4c7ea5..31e1f72 100644
--- a/html/index.js
+++ b/html/index.js
@@ -17,7 +17,7 @@ var index =
     [ "Aspectos de aliasing y uso de punteros", "Aliasing.html", [
       [ "Resumen", "Aliasing.html#sec-Resumen", null ],
       [ "Álgebra vs. computadora", "Aliasing.html#sec-puntero", [
-        [ "Variables y punteros inválidos y el problema de la memoria finita", "Aliasing.html#sec-invalido", null ]
+        [ "Variables y punteros inválidos y el problema de la", "Aliasing.html#sec-invalido", null ]
       ] ],
       [ "Los aspectos de aliasing", "Aliasing.html#sec-aliasing", null ],
       [ "Especificación de los iteradores y el alias", "Aliasing.html#sec-iteradores", null ]
diff --git a/html/map_8h.html b/html/map_8h.html
index 172fe74..3917e9c 100644
--- a/html/map_8h.html
+++ b/html/map_8h.html
@@ -98,11 +98,11 @@ $(document).ready(function(){initNavTree('map_8h.html','');});
 <div class="title">Referencia del Archivo map.h</div>  </div>
 </div><!--header-->
 <div class="contents">
-<div class="textblock"><code>#include &lt;functional&gt;</code><br />
+<div class="textblock"><code>#include &lt;algorithm&gt;</code><br />
+<code>#include &lt;cassert&gt;</code><br />
+<code>#include &lt;functional&gt;</code><br />
 <code>#include &lt;iterator&gt;</code><br />
 <code>#include &lt;utility&gt;</code><br />
-<code>#include &lt;cassert&gt;</code><br />
-<code>#include &lt;algorithm&gt;</code><br />
 </div>
 <p><a href="map_8h_source.html">Ir al código fuente de este archivo.</a></p>
 <table class="memberdecls">
@@ -133,10 +133,10 @@ Namespaces</h2></td></tr>
 <a name="details" id="details"></a><h2 class="groupheader">Descripción detallada</h2>
 <div class="textblock"><p>Módulo C++ que implementa un diccionario ordenado siguiendo el estilo y la terminología de la biblioteca estándar.</p>
 <p>Autores:</p><ul>
-<li>Nombre y Apellido (mail)</li>
-<li>Nombre y Apellido (mail)</li>
-<li>Nombre y Apellido (mail)</li>
-<li>Nombre y Apellido (mail)</li>
+<li>Oliver Gibson (<a href="#" onclick="location.href='mai'+'lto:'+'gib'+'so'+'n31'+'@g'+'mai'+'l.'+'com'; return false;">gibso<span style="display: none;">.nosp@m.</span>n31@<span style="display: none;">.nosp@m.</span>gmail<span style="display: none;">.nosp@m.</span>.com</a>)</li>
+<li>Catalina Juarros (<a href="#" onclick="location.href='mai'+'lto:'+'cat'+'al'+'ina'+'ju'+'arr'+'os'+'@gm'+'ai'+'l.c'+'om'; return false;">catal<span style="display: none;">.nosp@m.</span>inaj<span style="display: none;">.nosp@m.</span>uarro<span style="display: none;">.nosp@m.</span>s@gm<span style="display: none;">.nosp@m.</span>ail.c<span style="display: none;">.nosp@m.</span>om</a>)</li>
+<li>Miguel Nehmad Alché (<a href="#" onclick="location.href='mai'+'lto:'+'mik'+'ea'+'lch'+'e@'+'gma'+'il'+'.co'+'m'; return false;">mikea<span style="display: none;">.nosp@m.</span>lche<span style="display: none;">.nosp@m.</span>@gmai<span style="display: none;">.nosp@m.</span>l.co<span style="display: none;">.nosp@m.</span>m</a>)</li>
+<li>Jessica Singer (<a href="#" onclick="location.href='mai'+'lto:'+'sin'+'ge'+'r.j'+'ee'+'ss@'+'gm'+'ail'+'.c'+'om'; return false;">singe<span style="display: none;">.nosp@m.</span>r.je<span style="display: none;">.nosp@m.</span>ess@g<span style="display: none;">.nosp@m.</span>mail<span style="display: none;">.nosp@m.</span>.com</a>)</li>
 </ul>
 <p>Algoritmos y Estructuras de Datos II &ndash; FCEN &ndash; UBA. </p>
 
@@ -147,7 +147,7 @@ Namespaces</h2></td></tr>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="map_8h.html">map.h</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/map_8h_source.html b/html/map_8h_source.html
index d441002..fcc68d8 100644
--- a/html/map_8h_source.html
+++ b/html/map_8h_source.html
@@ -95,114 +95,124 @@ $(document).ready(function(){initNavTree('map_8h_source.html','');});
 <div class="title">map.h</div>  </div>
 </div><!--header-->
 <div class="contents">
-<a href="map_8h.html">Ir a la documentación de este archivo.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="preprocessor">#ifndef MAP_H_</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="preprocessor">#define MAP_H_</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="preprocessor">#include &lt;iterator&gt;</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">//Aca se puede incluir cualquier cosa que consideren que necesitan para debug</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">//#include &lt;iostream&gt;</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">//#include &lt;iomanip&gt;</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno"><a class="line" href="namespaceaed2.html">  599</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaed2.html">aed2</a>{</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="keyword">template</span>&lt;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;  <span class="keyword">class </span>Key,</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;  <span class="keyword">class </span>Meaning,</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;  <span class="keyword">class </span>Compare = std::less&lt;Key&gt;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;&gt;</div><div class="line"><a name="l00674"></a><span class="lineno"><a class="line" href="classaed2_1_1map.html">  674</a></span>&#160;<span class="keyword">class </span><a class="code" href="classaed2_1_1map.html">map</a> {</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="comment">//forward declarations (innecesario, pero ayuda al analizador semantico de Eclipse)</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keyword">class </span><a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <span class="keyword">class </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="comment">//forward declarations</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">  686</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">key_type</a> = Key;</div><div class="line"><a name="l00690"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">  690</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">mapped_type</a> = Meaning;</div><div class="line"><a name="l00694"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">  694</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> = std::pair&lt;const Key, Meaning&gt;;</div><div class="line"><a name="l00698"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">  698</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">key_compare</a> = Compare;</div><div class="line"><a name="l00702"></a><span class="lineno"><a class="line" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">  702</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">reference</a> = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp;;</div><div class="line"><a name="l00706"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">  706</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">const_reference</a> = <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp;;</div><div class="line"><a name="l00710"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">  710</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">pointer</a> = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>*;</div><div class="line"><a name="l00714"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">  714</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">const_pointer</a> = <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>*;</div><div class="line"><a name="l00718"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400">  718</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400">size_type</a> = std::size_t;</div><div class="line"><a name="l00722"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d">  722</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d">difference_type</a> = std::ptrdiff_t;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00734"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">  734</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> = std::reverse_iterator&lt;iterator&gt;;</div><div class="line"><a name="l00745"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">  745</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> = std::reverse_iterator&lt;const_iterator&gt;;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00765"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">  765</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">map</a>(Compare c = Compare()) {</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    }</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">  784</a></span>&#160;    <a class="code" href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">map</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map</a>&amp; other) {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    }</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> iterator&gt;</div><div class="line"><a name="l00832"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">  832</a></span>&#160;    <a class="code" href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">map</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> first, <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> last, Compare c = Compare()) : <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(c) {</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <span class="keyword">auto</span> it = <a class="code" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">end</a>();</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;        <span class="keywordflow">while</span>(first != last) {</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;            <a class="code" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a>(*first, it);</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;            ++first;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;        }</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    }</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00855"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">  855</a></span>&#160;    <a class="code" href="classaed2_1_1map.html">map</a>&amp; <a class="code" href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">operator=</a>(<a class="code" href="classaed2_1_1map.html">map</a> other) {</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    }</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div><div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6">  880</a></span>&#160;    <a class="code" href="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6">~map</a>() {</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    }</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00907"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">  907</a></span>&#160;    <span class="keyword">const</span> Meaning&amp; <a class="code" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">at</a>(<span class="keyword">const</span> Key&amp; key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    }</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00912"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1">  912</a></span>&#160;    Meaning&amp; <a class="code" href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1">at</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    }</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">  950</a></span>&#160;    Meaning&amp; <a class="code" href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">operator[]</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    }</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno"><a class="line" href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">  976</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">find</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    }</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc">  981</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc">find</a>(<span class="keyword">const</span> Key&amp; key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    }</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f"> 1003</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">lower_bound</a>(<span class="keyword">const</span> Key&amp; key)<span class="keyword"> const </span>{</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    }</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01008"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3"> 1008</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">lower_bound</a>(<span class="keyword">const</span> Key&amp; key)  {</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    }</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"><a class="line" href="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee"> 1027</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee">empty</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;    }</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div><div class="line"><a name="l01041"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021"> 1041</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    }</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854"> 1077</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    }</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;</div><div class="line"><a name="l01082"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8"> 1082</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8">insert</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    }</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;</div><div class="line"><a name="l01115"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475"> 1115</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">insert_or_assign</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;    }</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;</div><div class="line"><a name="l01120"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765"> 1120</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">insert_or_assign</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    }</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;</div><div class="line"><a name="l01141"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe"> 1141</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">erase</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> pos) {</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    }</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;</div><div class="line"><a name="l01157"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334"> 1157</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334">erase</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;    }</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;</div><div class="line"><a name="l01172"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca"> 1172</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca">clear</a>() {</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;    }</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;</div><div class="line"><a name="l01199"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a"> 1199</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map.html">map</a>&amp; other) {</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;        <span class="keyword">using</span> std::swap;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;        <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>, other.<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>);</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;        <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>, other.<a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>);</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;        <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>, other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>);</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;        <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0], other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]);</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;        <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1], other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() != <span class="keyword">nullptr</span>) <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>()-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = &amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;        <span class="keywordflow">if</span>(other.<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() != <span class="keyword">nullptr</span>) other.<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>()-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = &amp;other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;        <span class="comment">//nota: cuando el arbol es vacio, los child de header apuntan a header.  Notar que quedan apuntando mal despues del swap</span></div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>) <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = &amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;        <span class="keywordflow">if</span>(other.<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>) other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = &amp;other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    }</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;</div><div class="line"><a name="l01232"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb"> 1232</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>() {</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;    }</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c"> 1237</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c">begin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    }</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;</div><div class="line"><a name="l01242"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a"> 1242</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a">cbegin</a>() {</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    }</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;</div><div class="line"><a name="l01258"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983"> 1258</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">end</a>() {</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    }</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;</div><div class="line"><a name="l01263"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179"> 1263</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179">end</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    }</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;</div><div class="line"><a name="l01268"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912"> 1268</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912">cend</a>() {</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    }</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;</div><div class="line"><a name="l01284"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d"> 1284</a></span>&#160;    <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> <a class="code" href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d">rbegin</a>() {</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    }</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;</div><div class="line"><a name="l01289"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586"> 1289</a></span>&#160;    <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586">rbegin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    }</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;</div><div class="line"><a name="l01294"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448"> 1294</a></span>&#160;    <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448">crbegin</a>() {</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;    }</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;</div><div class="line"><a name="l01310"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f"> 1310</a></span>&#160;    <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> <a class="code" href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f">rend</a>() {</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;    }</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;</div><div class="line"><a name="l01315"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d"> 1315</a></span>&#160;    <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">rend</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    }</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;</div><div class="line"><a name="l01320"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1"> 1320</a></span>&#160;    <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1">crend</a>() {</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;        <span class="comment">//completar</span></div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;    }</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;</div><div class="line"><a name="l01354"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator.html"> 1354</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> {</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;        <span class="keyword">using</span> Node = <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1Node.html">map::Node</a>;</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;        <span class="keyword">using</span> InnerNode = <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">map::InnerNode</a>;</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;</div><div class="line"><a name="l01360"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b"> 1360</a></span>&#160;        <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b">iterator_category</a> = std::bidirectional_iterator_tag;</div><div class="line"><a name="l01362"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html#a4e1d954ef5c6a64bbcd881854f039a16"> 1362</a></span>&#160;        <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html#a4e1d954ef5c6a64bbcd881854f039a16">value_type</a> = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">map::value_type</a>;</div><div class="line"><a name="l01364"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af"> 1364</a></span>&#160;        <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af">reference</a> = <a class="code" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">map::reference</a>;</div><div class="line"><a name="l01366"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5"> 1366</a></span>&#160;        <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5">pointer</a> = <a class="code" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">map::pointer</a>;</div><div class="line"><a name="l01368"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html#a803083681db1f62aed5138194abc1f06"> 1368</a></span>&#160;        <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html#a803083681db1f62aed5138194abc1f06">difference_type</a> = std::ptrdiff_t;</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;</div><div class="line"><a name="l01396"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba"> 1396</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba">iterator</a>() {}</div><div class="line"><a name="l01409"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe"> 1409</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af">reference</a> <a class="code" href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe">operator*</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;        }</div><div class="line"><a name="l01427"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60"> 1427</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5">pointer</a> <a class="code" href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60">operator-&gt;</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;        }</div><div class="line"><a name="l01445"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5"> 1445</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5">operator++</a>() {</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;        }</div><div class="line"><a name="l01463"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974"> 1463</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">operator++</a>(<span class="keywordtype">int</span>) {</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;        }</div><div class="line"><a name="l01481"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a"> 1481</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a">operator--</a>() {</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;        }</div><div class="line"><a name="l01499"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225"> 1499</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225">operator--</a>(<span class="keywordtype">int</span>) {</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;        }</div><div class="line"><a name="l01519"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5"> 1519</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5">operator==</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> other)<span class="keyword"> const </span>{</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;        }</div><div class="line"><a name="l01523"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51"> 1523</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51">operator!=</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> other)<span class="keyword"> const </span>{</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;            <span class="comment">//completar</span></div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;        }</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l01548"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838"> 1548</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838">iterator</a>(Node* pos) : <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>(pos) {}</div><div class="line"><a name="l01559"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e.html#a7fe2cdc033cd899dc9fd1da08ac3b39e"> 1559</a></span>&#160;        <span class="keyword">operator</span> Node*() <span class="keyword">const</span> {<span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>;}</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;</div><div class="line"><a name="l01585"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93"> 1585</a></span>&#160;        Node* <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map.html">map</a>;</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;    };</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;</div><div class="line"><a name="l01596"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator.html"> 1596</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> {</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;        <span class="keyword">using</span> Node = <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1Node.html">map::Node</a>;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;        <span class="keyword">using</span> InnerNode = <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">map::InnerNode</a>;</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;        <span class="keyword">using</span> iterator_category = std::bidirectional_iterator_tag;</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;        <span class="keyword">using</span> value_type = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">map::value_type</a>;</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;        <span class="keyword">using</span> reference = <a class="code" href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">map::const_reference</a>;</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;        <span class="keyword">using</span> pointer = <a class="code" href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">map::const_pointer</a>;</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;        <span class="keyword">using</span> difference_type = std::ptrdiff_t;</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;</div><div class="line"><a name="l01607"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html#a8add3e4cabbdaf313b0e085064491555"> 1607</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html#a8add3e4cabbdaf313b0e085064491555">const_iterator</a>() {}</div><div class="line"><a name="l01625"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html#ab7924d90cbf6d19bec62514d10b62fb3"> 1625</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html#ab7924d90cbf6d19bec62514d10b62fb3">const_iterator</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> it) {</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;        }</div><div class="line"><a name="l01629"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html#a3e8bf3ace171a4156dbf681fac671db9"> 1629</a></span>&#160;        reference <a class="code" href="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html#a3e8bf3ace171a4156dbf681fac671db9">operator*</a>()<span class="keyword"> const  </span>{</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;        }</div><div class="line"><a name="l01633"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html#a5cb0d5307b937d0bcda7d65379ce5208"> 1633</a></span>&#160;        pointer <a class="code" href="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html#a5cb0d5307b937d0bcda7d65379ce5208">operator-&gt;</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;        }</div><div class="line"><a name="l01637"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271"> 1637</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271">operator++</a>()  {</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;        }</div><div class="line"><a name="l01641"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e"> 1641</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">operator++</a>(<span class="keywordtype">int</span>)  {</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;        }</div><div class="line"><a name="l01645"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90"> 1645</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90">operator--</a>()  {</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;        }</div><div class="line"><a name="l01649"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html#ad5ae1cb1d000ac1f528ff32f9af3e228"> 1649</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html#ad5ae1cb1d000ac1f528ff32f9af3e228">operator--</a>(<span class="keywordtype">int</span>)  {</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;        }</div><div class="line"><a name="l01653"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html#af837632a6c4a88ec13c4c96153538494"> 1653</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html#af837632a6c4a88ec13c4c96153538494">operator==</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> other)<span class="keyword"> const  </span>{</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;        }</div><div class="line"><a name="l01657"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html#a40b9e921ad9c25aded17f394b9534510"> 1657</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html#a40b9e921ad9c25aded17f394b9534510">operator!=</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> other)<span class="keyword"> const  </span>{</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;          <span class="comment">//completar</span></div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;        }</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;</div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l01663"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html#a195d395708167dca23f9ce49f7c604f3"> 1663</a></span>&#160;        <a class="code" href="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html#a195d395708167dca23f9ce49f7c604f3">const_iterator</a>(Node* pos) : <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>(pos) {}</div><div class="line"><a name="l01665"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3.html#a637c0f083a23ec4a262d47baeecafcf3"> 1665</a></span>&#160;        <span class="keyword">operator</span> Node*() <span class="keyword">const</span> {<span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>;}</div><div class="line"><a name="l01667"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277"> 1667</a></span>&#160;        Node* <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map.html">map</a>;</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;    };</div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>;</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>;</div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;</div><div class="line"><a name="l01684"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b"> 1684</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a> {Red, Black, Header};</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;</div><div class="line"><a name="l01702"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node.html"> 1702</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structaed2_1_1map_1_1Node.html">Node</a> {</div><div class="line"><a name="l01704"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82"> 1704</a></span>&#160;        <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* child[2]{<span class="keyword">nullptr</span>,<span class="keyword">nullptr</span>};</div><div class="line"><a name="l01706"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90"> 1706</a></span>&#160;        <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* parent{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l01708"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47"> 1708</a></span>&#160;        <a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a> color{Color::Red};</div><div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;</div><div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;</div><div class="line"><a name="l01722"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html#a9c1a600491066ce7eb669b1cb76d56c6"> 1722</a></span>&#160;        <a class="code" href="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html#a9c1a600491066ce7eb669b1cb76d56c6">Node</a>() : color(<a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a>::Header) {</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;            child[0] = child[1] = <span class="keyword">this</span>;</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;        }</div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;</div><div class="line"><a name="l01736"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html#a62b5a42e88e219d53af8237a9ebedb6e"> 1736</a></span>&#160;        <a class="code" href="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html#a62b5a42e88e219d53af8237a9ebedb6e">Node</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* p, <a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a> c = Color::Red) : parent(p), color(c) {}</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;        </div><div class="line"><a name="l01753"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html#a4f3cb2cc4302fe96432e624ced147540"> 1753</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html#a4f3cb2cc4302fe96432e624ced147540">~Node</a>() {}</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;</div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;</div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;</div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;</div><div class="line"><a name="l01778"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca"> 1778</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">is_header</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;            <span class="keywordflow">return</span> color == Color::Header;</div><div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;        }</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;</div><div class="line"><a name="l01794"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb"> 1794</a></span>&#160;        <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; <a class="code" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">value</a>() {</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;            assert(not is_header());</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;_value;</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;        }</div><div class="line"><a name="l01799"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html#a747a33f40ad748d750372fe73aea0b32"> 1799</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; <a class="code" href="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html#a747a33f40ad748d750372fe73aea0b32">value</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;            assert(not is_header());</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;_value;</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;        }</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;</div><div class="line"><a name="l01816"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb"> 1816</a></span>&#160;        <span class="keyword">const</span> Key&amp; <a class="code" href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb">key</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;            assert(not is_header());</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;            <span class="keywordflow">return</span> value().first;</div><div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;        }</div><div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;</div><div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;</div><div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div><div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;</div><div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;        <span class="keywordtype">void</span> print(<span class="keywordtype">int</span> tab = 0)<span class="keyword"> const </span>{</div><div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;            std::cout &lt;&lt; std::string(tab, <span class="charliteral">&#39; &#39;</span>) &lt;&lt; value().first &lt;&lt; <span class="stringliteral">&quot;-&gt;&quot;</span> &lt;&lt; value().second &lt;&lt; <span class="stringliteral">&quot;   (&quot;</span> &lt;&lt; (color == Color::Red ? <span class="stringliteral">&quot;Red)&quot;</span> : <span class="stringliteral">&quot;Black)&quot;</span>) &lt;&lt; std::endl;</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;            <span class="keywordflow">if</span>(child[0]) child[0]-&gt;print(tab + 2);</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;            <span class="keywordflow">if</span>(child[1]) child[1]-&gt;print(tab + 2);</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;        }</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;    };</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;</div><div class="line"><a name="l01855"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1InnerNode.html"> 1855</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a> : <span class="keyword">public</span> <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a> {</div><div class="line"><a name="l01857"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e"> 1857</a></span>&#160;        <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> <a class="code" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a>;</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;    };</div><div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;</div><div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;</div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;</div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;</div><div class="line"><a name="l01888"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a"> 1888</a></span>&#160;    Compare <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>;</div><div class="line"><a name="l01890"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4"> 1890</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>{0};</div><div class="line"><a name="l01892"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce"> 1892</a></span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a> <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;</div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;</div><div class="line"><a name="l01904"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2"> 1904</a></span>&#160;    <span class="keyword">inline</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>* <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() { <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(header.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>); }</div><div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;</div><div class="line"><a name="l01907"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7"> 1907</a></span>&#160;    <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>* <a class="code" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">root</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(header.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>); }</div><div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;</div><div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;</div><div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;</div><div class="line"><a name="l01920"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624"> 1920</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624">eq</a>(<span class="keyword">const</span> Key&amp; k1, <span class="keyword">const</span> Key&amp; k2)<span class="keyword"> const </span>{</div><div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(k1, k2) == <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(k2, k1);</div><div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;    }</div><div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;};</div><div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;</div><div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;</div><div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l01953"></a><span class="lineno"><a class="line" href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933"> 1953</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933">operator==</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;    <span class="keywordflow">return</span> m1.<a class="code" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>() == m2.<a class="code" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>() and std::equal(m1.<a class="code" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>(), m1.<a class="code" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">end</a>(), m2.<a class="code" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>());</div><div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;}</div><div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;</div><div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l01964"></a><span class="lineno"><a class="line" href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09"> 1964</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;    <span class="keywordflow">return</span> not(m1 == m2);</div><div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;}</div><div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l01992"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html#a8ff07f6a24c290ea7e8f63ec7ab24f8d"> 1992</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;(const map&lt;K, V, C&gt;&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;    <span class="comment">//completar.  Vale usar std::lexicographical_compare</span></div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;}</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;</div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02003"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63"> 2003</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63">operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;    <span class="keywordflow">return</span> m2 &lt; m1;</div><div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;}</div><div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;</div><div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02014"></a><span class="lineno"><a class="line" href="classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html#afe374b37f17263d0cad3ee19a590d208"> 2014</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(const map&lt;K, V, C&gt;&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;    <span class="keywordflow">return</span> not(m2 &lt; m1);</div><div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;}</div><div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;</div><div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02025"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159"> 2025</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159">operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;    <span class="keywordflow">return</span> !(m1 &lt; m2);</div><div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;}</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;</div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;</div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;</div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02049"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72"> 2049</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72">swap</a>(<a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;    m1.<a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(m2);</div><div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;}</div><div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;}</div><div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;</div><div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MAP_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d_html_a4273e8812e7105a618df58a2c8b72b7d"><div class="ttname"><a href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">aed2::map::key_type</a></div><div class="ttdeci">Key key_type</div><div class="ttdoc">Renombre para poder acceder al tipo de las claves. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00686">map.h:686</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1InnerNode_html"><div class="ttname"><a href="structaed2_1_1map_1_1InnerNode.html">aed2::map::InnerNode</a></div><div class="ttdoc">Estructura (privada) de un nodo no cabecera del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01855">map.h:1855</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_html_a76023e6a56cb625513e1b5ea028bf983"><div class="ttname"><a href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">aed2::map::end</a></div><div class="ttdeci">iterator end()</div><div class="ttdoc">Devuelve un iterador apuntando a la posición pasando-el-ultimo del diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01258">map.h:1258</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400_html_a8cf1c570f605e9c0ad6feb8ce12c9400"><div class="ttname"><a href="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400">aed2::map::size_type</a></div><div class="ttdeci">std::size_t size_type</div><div class="ttdoc">Renombre para poder acceder al tipo usado para describir tamaños. Compatible con estándar C++...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00718">map.h:718</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_html_ab6a5f9e471b311755e4a56834086cb90"><div class="ttname"><a href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">aed2::map::Node::parent</a></div><div class="ttdeci">Node * parent</div><div class="ttdoc">Puntero al padre: garantiza insercion con puntero en O(1) amortizado e iteracion en O(1) memoria...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01706">map.h:1706</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_html_a58a95705d54b3dda7f775ce5a22225cb"><div class="ttname"><a href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">aed2::map::begin</a></div><div class="ttdeci">iterator begin()</div><div class="ttdoc">Devuelve un iterador al primer valor del diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01232">map.h:1232</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257_html_a7a77950a3d8e637bfa7cf5dcd904f257"><div class="ttname"><a href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">aed2::map::map</a></div><div class="ttdeci">map(const map &amp;other)</div><div class="ttdoc">Constructor por copia. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00784">map.h:784</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f_html_a277f03b4f4b6b98879e4e4921081801f"><div class="ttname"><a href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f">aed2::map::rend</a></div><div class="ttdeci">reverse_iterator rend()</div><div class="ttdoc">Devuelve un iterador apuntando a la posición pasando-el-ultimo del diccionario, en un recorrido al re...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01310">map.h:1310</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_html_ab96ad892caa28f193481a578f4956a2a"><div class="ttname"><a href="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a">aed2::map::cbegin</a></div><div class="ttdeci">const_iterator cbegin()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01242">map.h:1242</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63_html_a2000cd874b72034ce7fe730c811b6c63"><div class="ttname"><a href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63">aed2::map::operator&gt;</a></div><div class="ttdeci">bool operator&gt;(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Renombre de m2 &lt; m1 </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02003">map.h:2003</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_html_a07b3dd65557c59ee085e5f211269c6b3"><div class="ttname"><a href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">aed2::map::lower_bound</a></div><div class="ttdeci">iterator lower_bound(const Key &amp;key)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01008">map.h:1008</a></div></div>
-<div class="ttc" id="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_html_afd0fc1a8234888e61e0e615de7e245b8"><div class="ttname"><a href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">aed2::map::find</a></div><div class="ttdeci">iterator find(const Key &amp;key)</div><div class="ttdoc">Devuelve un iterador a la posicion del valor con clave key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00976">map.h:976</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf_html_a64da1d965b13eb28cdb3837bc17a18cf"><div class="ttname"><a href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">aed2::map::map</a></div><div class="ttdeci">map(Compare c=Compare())</div><div class="ttdoc">Crea un diccionario vacio. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00765">map.h:765</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_html_ad052c1ef8477a1613c292202226053a5"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5">aed2::map::iterator::operator==</a></div><div class="ttdeci">bool operator==(iterator other) const </div><div class="ttdoc">Operador de igualdad. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01519">map.h:1519</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_html_a836c7a166d63f507c4f79085ae953c51"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51">aed2::map::iterator::operator!=</a></div><div class="ttdeci">bool operator!=(iterator other) const </div><div class="ttdoc">idem !|operator== </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01523">map.h:1523</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_html"><div class="ttname"><a href="classaed2_1_1map_1_1iterator.html">aed2::map::iterator</a></div><div class="ttdoc">Parte del módulo que implementa los iteradores que permiten la modificación de los significados...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01354">map.h:1354</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3_html_a195d395708167dca23f9ce49f7c604f3"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html#a195d395708167dca23f9ce49f7c604f3">aed2::map::const_iterator::const_iterator</a></div><div class="ttdeci">const_iterator(Node *pos)</div><div class="ttdoc">Ver aed2::map::iterator::iterator(Node*) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01663">map.h:1663</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e_html_a62b5a42e88e219d53af8237a9ebedb6e"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html#a62b5a42e88e219d53af8237a9ebedb6e">aed2::map::Node::Node</a></div><div class="ttdeci">Node(Node *p, Color c=Color::Red)</div><div class="ttdoc">Constructor para nodos del arbol red-black, sin enlaces. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01736">map.h:1736</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_html_a7394e98a23b86bc008ad73326b273fd5"><div class="ttname"><a href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">aed2::map::pointer</a></div><div class="ttdeci">value_type * pointer</div><div class="ttdoc">Renombre para poder acceder al tipo de los punteros de los valores guardados. Compatible con estándar...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00710">map.h:710</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_html_a92d93f905c8ad73fba18fdc7e8915cce"><div class="ttname"><a href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">aed2::map::header</a></div><div class="ttdeci">Node header</div><div class="ttdoc">Cabeceera del arbol; ver Implementación del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01892">map.h:1892</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_html_a7c44de7f0508186e135ddbcfe782fec5"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5">aed2::map::iterator::operator++</a></div><div class="ttdeci">iterator &amp; operator++()</div><div class="ttdoc">Avanza el iterador a la siguiente posición. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01445">map.h:1445</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_html_a1f847ad4fd46883ac60d764967172179"><div class="ttname"><a href="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179">aed2::map::end</a></div><div class="ttdeci">const_iterator end() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01263">map.h:1263</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72_html_a119cb2938bbc11c25ebd4fb824782a72"><div class="ttname"><a href="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72">aed2::map::swap</a></div><div class="ttdeci">void swap(map&lt; K, V, C &gt; &amp;m1, map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Implementa la función swap para cumplir con el concepto swappable. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02049">map.h:2049</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_html_a6ad62765a2b2e00247b9e35a7542b448"><div class="ttname"><a href="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448">aed2::map::crbegin</a></div><div class="ttdeci">const_reverse_iterator crbegin()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01294">map.h:1294</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510_html_a40b9e921ad9c25aded17f394b9534510"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html#a40b9e921ad9c25aded17f394b9534510">aed2::map::const_iterator::operator!=</a></div><div class="ttdeci">bool operator!=(const_iterator other) const </div><div class="ttdoc">Ver aed2::map::iterator::operator!=() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01657">map.h:1657</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208_html_a5cb0d5307b937d0bcda7d65379ce5208"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html#a5cb0d5307b937d0bcda7d65379ce5208">aed2::map::const_iterator::operator-&gt;</a></div><div class="ttdeci">pointer operator-&gt;() const </div><div class="ttdoc">Ver aed2::map::iterator::operator-&gt;() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01633">map.h:1633</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_html_a7bb91e94cbc875f1a011b142ef877912"><div class="ttname"><a href="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912">aed2::map::cend</a></div><div class="ttdeci">const_iterator cend()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01268">map.h:1268</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_html_a43ddb71cc91e5c6021a7a1f243d6cc4a"><div class="ttname"><a href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">aed2::map::swap</a></div><div class="ttdeci">void swap(map &amp;other)</div><div class="ttdoc">Intercambia el contenido de *this y other </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01199">map.h:1199</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_html_a803083681db1f62aed5138194abc1f06"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html#a803083681db1f62aed5138194abc1f06">aed2::map::iterator::difference_type</a></div><div class="ttdeci">std::ptrdiff_t difference_type</div><div class="ttdoc">Resultado de la diferencia entre dos punteros. Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01368">map.h:1368</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_html_a07ab50eda249a57858a34037d4c4c7b2"><div class="ttname"><a href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">aed2::map::root</a></div><div class="ttdeci">InnerNode * root()</div><div class="ttdoc">Devuelve un puntero al nodo raíz. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01904">map.h:1904</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_html_a8e6a592062260177fd73b2f9897b1dd5"><div class="ttname"><a href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">aed2::map::reverse_iterator</a></div><div class="ttdeci">std::reverse_iterator&lt; iterator &gt; reverse_iterator</div><div class="ttdoc">Iterador para recorrer un diccionario en orden inverso. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00734">map.h:734</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90_html_ae12d6608eeca05957fa3de3f50287c90"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90">aed2::map::const_iterator::operator--</a></div><div class="ttdeci">const_iterator &amp; operator--()</div><div class="ttdoc">Ver aed2::map::iterator::operator--() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01645">map.h:1645</a></div></div>
-<div class="ttc" id="namespaceaed2_html"><div class="ttname"><a href="namespaceaed2.html">aed2</a></div><div class="ttdoc">Namespace para las clases de AED2. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00599">map.h:599</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624_html_ab45cb28bb215cd229383d88b96b3f624"><div class="ttname"><a href="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624">aed2::map::eq</a></div><div class="ttdeci">bool eq(const Key &amp;k1, const Key &amp;k2) const </div><div class="ttdoc">Retorna true si las claves son iguales con respecto a this-&gt;lt. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01920">map.h:1920</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_html_af4ada8e79dabb4849fc87de63d3970fb"><div class="ttname"><a href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">aed2::map::Node::value</a></div><div class="ttdeci">value_type &amp; value()</div><div class="ttdoc">Devuelve el valor asociado a un nodo no cabecera. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01794">map.h:1794</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_html_a7d65c374c73c443a46d8fc224aff9e82"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">aed2::map::Node::child</a></div><div class="ttdeci">Node * child[2]</div><div class="ttdoc">Punteros a los hijos izquierdo (child[0]) y derecho (child[1]) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01704">map.h:1704</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_html_a9128a806713bcc999ebd8a97ab77e765"><div class="ttname"><a href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">aed2::map::insert_or_assign</a></div><div class="ttdeci">iterator insert_or_assign(const value_type &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01120">map.h:1120</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_html_adf8633ef71bb6c1fc01c0abe8728fd93"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">aed2::map::iterator::n</a></div><div class="ttdeci">Node * n</div><div class="ttdoc">Puntero al nodo actual. Ver Estructura de Representación. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01585">map.h:1585</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_html_a227de3b56a6ff2e6bb6de2d08277ca60"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60">aed2::map::iterator::operator-&gt;</a></div><div class="ttdeci">pointer operator-&gt;() const </div><div class="ttdoc">Retorna la dirección del valor apuntado por *this </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01427">map.h:1427</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_html_ad8e796bf9c9c558e5ce6b61e116253fe"><div class="ttname"><a href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">aed2::map::erase</a></div><div class="ttdeci">iterator erase(const_iterator pos)</div><div class="ttdoc">Elimina el valor apuntado por pos </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01141">map.h:1141</a></div></div>
-<div class="ttc" id="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40_html_aa3e34bf624f3009884a71b18f4ddae40"><div class="ttname"><a href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">aed2::map::mapped_type</a></div><div class="ttdeci">Meaning mapped_type</div><div class="ttdoc">Renombre para poder acceder al tipo de los significados. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00690">map.h:690</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_html_a1366fc3e227a49777cb748fc6d4e022b"><div class="ttname"><a href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">aed2::map::const_pointer</a></div><div class="ttdeci">const value_type * const_pointer</div><div class="ttdoc">Renombre para poder acceder al tipo de los punteros de los valores constantes guardados. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00714">map.h:714</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159_html_a093a6d1a055339c5fc6297a1d47a9159"><div class="ttname"><a href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159">aed2::map::operator&gt;=</a></div><div class="ttdeci">bool operator&gt;=(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Renombre de not(m1 &lt; m2) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02025">map.h:2025</a></div></div>
-<div class="ttc" id="classaed2_1_1map_abfc51b39670220e79037ac067006e933_html_abfc51b39670220e79037ac067006e933"><div class="ttname"><a href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933">aed2::map::operator==</a></div><div class="ttdeci">bool operator==(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Operador de igualdad entre dos diccionarios. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01953">map.h:1953</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca_html_a2bfa5165825979bf2431db55bc6bc9ca"><div class="ttname"><a href="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca">aed2::map::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">Vacia el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01172">map.h:1172</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_html_a40933b2efe1cb479de9195ea947244d1"><div class="ttname"><a href="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1">aed2::map::crend</a></div><div class="ttdeci">const_reverse_iterator crend()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01320">map.h:1320</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_html_a89cf44cf0661a97f5dd0985160dcc0e7"><div class="ttname"><a href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">aed2::map::root</a></div><div class="ttdeci">const InnerNode * root() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01907">map.h:1907</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801_html_a96f23896164ab47bee48c26b803f9801"><div class="ttname"><a href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">aed2::map::operator[]</a></div><div class="ttdeci">Meaning &amp; operator[](const Key &amp;key)</div><div class="ttdoc">Devuelve el significado asociado a key, asegurando su existencia. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00950">map.h:950</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3_html_ab7924d90cbf6d19bec62514d10b62fb3"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html#ab7924d90cbf6d19bec62514d10b62fb3">aed2::map::const_iterator::const_iterator</a></div><div class="ttdeci">const_iterator(iterator it)</div><div class="ttdoc">Constructor desde un iterador modificable. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01625">map.h:1625</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_html_a5451f8da0b7ad3582fab1decad5d09cb"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb">aed2::map::Node::key</a></div><div class="ttdeci">const Key &amp; key() const </div><div class="ttdoc">Devuelve la clave del valor de un nodo no cabecera. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01816">map.h:1816</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6_html_ab22c9a85c2dadbc286cd30e97069a8e6"><div class="ttname"><a href="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6">aed2::map::~map</a></div><div class="ttdeci">~map()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00880">map.h:880</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_html_ab0ea21abcb32b6d5a72cf341b9029838"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838">aed2::map::iterator::iterator</a></div><div class="ttdeci">iterator(Node *pos)</div><div class="ttdoc">Construye un iterador que apunta al valor del Nodo pos </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01548">map.h:1548</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_html_a48e75896997d516fe69bc18f889222fe"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe">aed2::map::iterator::operator*</a></div><div class="ttdeci">reference operator*() const </div><div class="ttdoc">Retorna el valor apuntado por *this </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01409">map.h:1409</a></div></div>
-<div class="ttc" id="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_html_af4f147533b3c0207ab036c86ce13ec0d"><div class="ttname"><a href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">aed2::map::reference</a></div><div class="ttdeci">value_type &amp; reference</div><div class="ttdoc">Renombre para poder acceder al tipo de referencia de los valores guardados. Compatible con estándar C...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00702">map.h:702</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271_html_adaada1d489552555135d2ea89c67c271"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271">aed2::map::const_iterator::operator++</a></div><div class="ttdeci">const_iterator &amp; operator++()</div><div class="ttdoc">Ver aed2::map::iterator::operator++() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01637">map.h:1637</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_html_a52ea7bdbf1dc6b252aec76633564bdf5"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5">aed2::map::iterator::pointer</a></div><div class="ttdeci">map::pointer pointer</div><div class="ttdoc">Tipo del puntero (resultado de operator-&gt;). Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01366">map.h:1366</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_html_a747a33f40ad748d750372fe73aea0b32"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html#a747a33f40ad748d750372fe73aea0b32">aed2::map::Node::value</a></div><div class="ttdeci">const value_type &amp; value() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01799">map.h:1799</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_html_a6d62a415a4b9d320b30cada4ebcf9f5b"><div class="ttname"><a href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">aed2::map::Color</a></div><div class="ttdeci">Color</div><div class="ttdoc">Colores de los nodos en un árbol red-black. Ver Implementación del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01684">map.h:1684</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_html_ac19788914a3110897e44c53f1318f6af"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af">aed2::map::iterator::reference</a></div><div class="ttdeci">map::reference reference</div><div class="ttdoc">Tipo de la referencia (resultado de operator*). Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01364">map.h:1364</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494_html_af837632a6c4a88ec13c4c96153538494"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html#af837632a6c4a88ec13c4c96153538494">aed2::map::const_iterator::operator==</a></div><div class="ttdeci">bool operator==(const_iterator other) const </div><div class="ttdoc">Ver aed2::map::iterator::operator==() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01653">map.h:1653</a></div></div>
-<div class="ttc" id="classaed2_1_1map_html"><div class="ttname"><a href="classaed2_1_1map.html">aed2::map</a></div><div class="ttdoc">Modulo que implementa un diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00674">map.h:674</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228_html_ad5ae1cb1d000ac1f528ff32f9af3e228"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html#ad5ae1cb1d000ac1f528ff32f9af3e228">aed2::map::const_iterator::operator--</a></div><div class="ttdeci">const_iterator operator--(int)</div><div class="ttdoc">Ver aed2::map::iterator::operator--(int) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01649">map.h:1649</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523_html_a3efa081d3379ab76f33a5ef9fe697523"><div class="ttname"><a href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">aed2::map::key_compare</a></div><div class="ttdeci">Compare key_compare</div><div class="ttdoc">Renombre para poder acceder al tipo del comparador. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00698">map.h:698</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555_html_a8add3e4cabbdaf313b0e085064491555"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html#a8add3e4cabbdaf313b0e085064491555">aed2::map::const_iterator::const_iterator</a></div><div class="ttdeci">const_iterator()</div><div class="ttdoc">Ver aed2::map::iterator::iterator() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01607">map.h:1607</a></div></div>
-<div class="ttc" id="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_html_aafce6e53c53c460897613747fec89f9d"><div class="ttname"><a href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">aed2::map::rend</a></div><div class="ttdeci">const_reverse_iterator rend() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01315">map.h:1315</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f_html_a3399d36fdd5a880b494f3a5795d3f18f"><div class="ttname"><a href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">aed2::map::lower_bound</a></div><div class="ttdeci">const_iterator lower_bound(const Key &amp;key) const </div><div class="ttdoc">Devuelve un iterador al primer valor con clave mayor o igual a key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01003">map.h:1003</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_html_af4fe5565eb478cfccd254b2ef230b974"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">aed2::map::iterator::operator++</a></div><div class="ttdeci">iterator operator++(int)</div><div class="ttdoc">Avanza el iterador a la siguiente posición. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01463">map.h:1463</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_html_a53fd8a50986fec67601dd77c44c1657e"><div class="ttname"><a href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">aed2::map::InnerNode::_value</a></div><div class="ttdeci">value_type _value</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01857">map.h:1857</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_html_ae7f70f71545d2a9de17b65edaaec748a"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a">aed2::map::iterator::operator--</a></div><div class="ttdeci">iterator &amp; operator--()</div><div class="ttdoc">Retrocede el iterador a la posición anterior. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01481">map.h:1481</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e_html_a2fbc216b2f11694bb567ea850bcfdb2e"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">aed2::map::const_iterator::operator++</a></div><div class="ttdeci">const_iterator operator++(int)</div><div class="ttdoc">Ver aed2::map::iterator::operator++(int) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01641">map.h:1641</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_html_a277080d3db76f19df9319ecba16475a9"><div class="ttname"><a href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">aed2::map::const_reference</a></div><div class="ttdeci">const value_type &amp; const_reference</div><div class="ttdoc">Renombre para poder acceder al tipo de referencia constante de los valores guardados. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00706">map.h:706</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a719db98e0ff9a837610f76be33264680_html_a719db98e0ff9a837610f76be33264680"><div class="ttname"><a href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">aed2::map::value_type</a></div><div class="ttdeci">std::pair&lt; const Key, Meaning &gt; value_type</div><div class="ttdoc">Renombre para poder acceder al tipo de las valores almacenados. Compatible con estándar C++...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00694">map.h:694</a></div></div>
-<div class="ttc" id="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_html_aed66a216549d13078a3ea6978ea0b768"><div class="ttname"><a href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">aed2::map::const_reverse_iterator</a></div><div class="ttdeci">std::reverse_iterator&lt; const_iterator &gt; const_reverse_iterator</div><div class="ttdoc">Iterador para recorrer un diccionario constante en orden inverso. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00745">map.h:745</a></div></div>
-<div class="ttc" id="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_html_aa68b6888ae3e256203d4ef273c293586"><div class="ttname"><a href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586">aed2::map::rbegin</a></div><div class="ttdeci">const_reverse_iterator rbegin() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01289">map.h:1289</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9_html_a3e8bf3ace171a4156dbf681fac671db9"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html#a3e8bf3ace171a4156dbf681fac671db9">aed2::map::const_iterator::operator*</a></div><div class="ttdeci">reference operator*() const </div><div class="ttdoc">Ver aed2::map::iterator::operator*() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01629">map.h:1629</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_html_a6941cde9a79c27f054b5c97a587a1854"><div class="ttname"><a href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">aed2::map::insert</a></div><div class="ttdeci">iterator insert(const_iterator hint, const value_type &amp;value)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01077">map.h:1077</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b_html_a709df3d8aef6fd1eeb839616b554ff0b"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b">aed2::map::iterator::iterator_category</a></div><div class="ttdeci">std::bidirectional_iterator_tag iterator_category</div><div class="ttdoc">Categoria del iterador: bidireccional. Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01360">map.h:1360</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540_html_a4f3cb2cc4302fe96432e624ced147540"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html#a4f3cb2cc4302fe96432e624ced147540">aed2::map::Node::~Node</a></div><div class="ttdeci">virtual ~Node()</div><div class="ttdoc">Destructor de Node. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01753">map.h:1753</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_html_a0e5be36fae0693e4665bd2a615e7550a"><div class="ttname"><a href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">aed2::map::lt</a></div><div class="ttdeci">Compare lt</div><div class="ttdoc">Orden total para comparar claves. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01888">map.h:1888</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_html_a2ef6723c183916276b0afc4a4c721475"><div class="ttname"><a href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">aed2::map::insert_or_assign</a></div><div class="ttdeci">iterator insert_or_assign(const_iterator hint, const value_type &amp;value)</div><div class="ttdoc">Inserta o redefine value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01115">map.h:1115</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6_html_a9c1a600491066ce7eb669b1cb76d56c6"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html#a9c1a600491066ce7eb669b1cb76d56c6">aed2::map::Node::Node</a></div><div class="ttdeci">Node()</div><div class="ttdoc">Constructor para crear el nodo header. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01722">map.h:1722</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_html_a89f2613f926ac13293eafe65889d6021"><div class="ttname"><a href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">aed2::map::size</a></div><div class="ttdeci">size_t size() const </div><div class="ttdoc">Devuelve la cantidad de valores en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01041">map.h:1041</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_html_a44236c4f16cdc20a10759862b198bde4"><div class="ttname"><a href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">aed2::map::count</a></div><div class="ttdeci">size_t count</div><div class="ttdoc">Cantidad de elementos en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01890">map.h:1890</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb_html_a5d336f3248572beb56be383dcc95cfeb"><div class="ttname"><a href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">aed2::map::map</a></div><div class="ttdeci">map(iterator first, iterator last, Compare c=Compare())</div><div class="ttdoc">Crea un diccionario con los elementos del rango [first, last) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00832">map.h:832</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1const__iterator_html"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator.html">aed2::map::const_iterator</a></div><div class="ttdoc">Parte del módulo que implementa los iteradores que no permiten la modificación de los significados...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01596">map.h:1596</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16_html_a4e1d954ef5c6a64bbcd881854f039a16"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html#a4e1d954ef5c6a64bbcd881854f039a16">aed2::map::iterator::value_type</a></div><div class="ttdeci">map::value_type value_type</div><div class="ttdoc">Tipo de los valores recorridos. Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01362">map.h:1362</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334_html_a2ffadb42cd5f0bc7b3752ff159b75334"><div class="ttname"><a href="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334">aed2::map::erase</a></div><div class="ttdeci">void erase(const Key &amp;key)</div><div class="ttdoc">Elimina el valor cuya clave es key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01157">map.h:1157</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_html_acdd790eb54216601a2e0591776004dba"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba">aed2::map::iterator::iterator</a></div><div class="ttdeci">iterator()</div><div class="ttdoc">Crea un iterador nulo. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01396">map.h:1396</a></div></div>
-<div class="ttc" id="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee_html_af5320ca0a7df4d16015441d5d055a7ee"><div class="ttname"><a href="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee">aed2::map::empty</a></div><div class="ttdeci">bool empty() const </div><div class="ttdoc">Indica si el diccionario esta vacío. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01027">map.h:1027</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_html_ab8f3e41b1a0d7b74645836f8d2e1acfc"><div class="ttname"><a href="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc">aed2::map::find</a></div><div class="ttdeci">const_iterator find(const Key &amp;key) const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00981">map.h:981</a></div></div>
-<div class="ttc" id="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09_html_abce0fa35c5b25fd67111c2e704616f09"><div class="ttname"><a href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09">aed2::map::operator!=</a></div><div class="ttdeci">bool operator!=(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Renombre de not(m1 == m2) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01964">map.h:1964</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_html_a1d10432d305bcb5f1af6ab7b75c27c1c"><div class="ttname"><a href="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c">aed2::map::begin</a></div><div class="ttdeci">const_iterator begin() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01237">map.h:1237</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d_html_a2f55b88809000fcbfce1c6cfef1ba74d"><div class="ttname"><a href="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d">aed2::map::difference_type</a></div><div class="ttdeci">std::ptrdiff_t difference_type</div><div class="ttdoc">Renombre para poder acceder al tipo usado para describir diferencias entre punteros. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00722">map.h:722</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_html_a6b21c09f59a83b6ee45432dcfa61f4a1"><div class="ttname"><a href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1">aed2::map::at</a></div><div class="ttdeci">Meaning &amp; at(const Key &amp;key)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00912">map.h:912</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_html_a0b0a11f906da2926f9eb342fcee79fd7"><div class="ttname"><a href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">aed2::map::at</a></div><div class="ttdeci">const Meaning &amp; at(const Key &amp;key) const </div><div class="ttdoc">Devuelve el significado asociado a key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00907">map.h:907</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_html"><div class="ttname"><a href="structaed2_1_1map_1_1Node.html">aed2::map::Node</a></div><div class="ttdoc">Estructura (privada) de un nodo del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01702">map.h:1702</a></div></div>
-<div class="ttc" id="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_html_add45e9ddbb8eeda99326cdb9ac9dd225"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225">aed2::map::iterator::operator--</a></div><div class="ttdeci">iterator operator--(int)</div><div class="ttdoc">Retrocede el iterador a la posición anterior. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01499">map.h:1499</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d_html_ac412d3902112122c1bffe2d4283a4e9d"><div class="ttname"><a href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d">aed2::map::rbegin</a></div><div class="ttdeci">reverse_iterator rbegin()</div><div class="ttdoc">Devuelve un iterador al primer valor del diccionario, en un recorrido al revés. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01284">map.h:1284</a></div></div>
-<div class="ttc" id="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_html_a60aacba06b1579630b3c8e996cf248c8"><div class="ttname"><a href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8">aed2::map::insert</a></div><div class="ttdeci">iterator insert(const value_type &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01082">map.h:1082</a></div></div>
-<div class="ttc" id="classaed2_1_1map_ac606d334809066929522964d45e76317_html_ac606d334809066929522964d45e76317"><div class="ttname"><a href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">aed2::map::operator=</a></div><div class="ttdeci">map &amp; operator=(map other)</div><div class="ttdoc">Operador de asignación. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00855">map.h:855</a></div></div>
-<div class="ttc" id="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_html_ae6cc4598a60dbab7120ffae58ebbadca"><div class="ttname"><a href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">aed2::map::Node::is_header</a></div><div class="ttdeci">bool is_header() const </div><div class="ttdoc">Devuelve true si el nodo actual es el header de la estructura. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01778">map.h:1778</a></div></div>
+<a href="map_8h.html">Ir a la documentación de este archivo.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="preprocessor">#ifndef MAP_H_</span></div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="preprocessor">#define MAP_H_</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;<span class="preprocessor">#include &lt;iterator&gt;</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="comment">// Aca se puede incluir cualquier cosa que consideren que necesitan para debug</span></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="comment">//#include &lt;iostream&gt;</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="comment">//#include &lt;iomanip&gt;</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00849"></a><span class="lineno"><a class="line" href="namespaceaed2.html">  849</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaed2.html">aed2</a> {</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Key, <span class="keyword">class</span> Meaning, <span class="keyword">class</span> Compare = std::less&lt;Key&gt; &gt;</div><div class="line"><a name="l00939"></a><span class="lineno"><a class="line" href="classaed2_1_1map.html">  939</a></span>&#160;<span class="keyword">class </span><a class="code" href="classaed2_1_1map.html">map</a> {</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;  <span class="comment">// forward declarations (innecesario, pero ayuda al analizador semantico de</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;  <span class="comment">// Eclipse)</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;  <span class="keyword">class </span><a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;  <span class="keyword">class </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  <span class="comment">// forward declarations</span></div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>;</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">  954</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">key_type</a> = Key;</div><div class="line"><a name="l00959"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">  959</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">mapped_type</a> = Meaning;</div><div class="line"><a name="l00964"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">  964</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> = std::pair&lt;const Key, Meaning&gt;;</div><div class="line"><a name="l00969"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">  969</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">key_compare</a> = Compare;</div><div class="line"><a name="l00974"></a><span class="lineno"><a class="line" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">  974</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">reference</a> = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp;;</div><div class="line"><a name="l00979"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">  979</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">const_reference</a> = <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp;;</div><div class="line"><a name="l00984"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">  984</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">pointer</a> = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>*;</div><div class="line"><a name="l00989"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">  989</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">const_pointer</a> = <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>*;</div><div class="line"><a name="l00994"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400">  994</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400">size_type</a> = std::size_t;</div><div class="line"><a name="l00999"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d">  999</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d">difference_type</a> = std::ptrdiff_t;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5"> 1016</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> = std::reverse_iterator&lt;iterator&gt;;</div><div class="line"><a name="l01032"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768"> 1032</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> = std::reverse_iterator&lt;const_iterator&gt;;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf"> 1053</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">map</a>(Compare c = Compare()) {</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <span class="comment">// header = Node();</span></div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;    <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a> = c;</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;  }</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01074"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257"> 1074</a></span>&#160;  <a class="code" href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">map</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map</a>&amp; other) { *<span class="keyword">this</span> = other; }</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> iterator&gt;</div><div class="line"><a name="l01133"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb"> 1133</a></span>&#160;  <a class="code" href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">map</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> first, <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> last, Compare c = Compare()) : <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(c) {</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    <span class="keyword">auto</span> it = <a class="code" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">end</a>();</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    <span class="keywordflow">while</span> (first != last) {</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;      <a class="code" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a>(*first, it);</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;      ++first;</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    }</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;  }</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;</div><div class="line"><a name="l01157"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317"> 1157</a></span>&#160;  <a class="code" href="classaed2_1_1map.html">map</a>&amp; <a class="code" href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">operator=</a>(<a class="code" href="classaed2_1_1map.html">map</a> other) {</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(other);</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;  }</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div><div class="line"><a name="l01189"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6"> 1189</a></span>&#160;  <a class="code" href="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6">~map</a>() {</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    <span class="comment">// completar</span></div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;  }</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;</div><div class="line"><a name="l01218"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7"> 1218</a></span>&#160;  <span class="keyword">const</span> Meaning&amp; <a class="code" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">at</a>(<span class="keyword">const</span> Key&amp; key)<span class="keyword"> const </span>{</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> it = <a class="code" href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">find</a>(key);</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    <span class="keywordflow">if</span> (it.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(it.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>)-&gt;_value.first;</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    }</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    <span class="comment">// const InnerNode* actual = root();</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    <span class="comment">// while (actual-&gt;_value.first != key) {</span></div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    <span class="comment">//   if (lt(key, actual-&gt;_value.first)) {</span></div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    <span class="comment">//     actual = static_cast&lt;InnerNode*&gt;(actual-&gt;child[0]);</span></div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;    <span class="comment">//   } else {</span></div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;    <span class="comment">//     actual = static_cast&lt;InnerNode*&gt;(actual-&gt;child[1]);</span></div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;    <span class="comment">//   }</span></div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;    <span class="comment">// }</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;    <span class="comment">// return actual-&gt;_value.second;</span></div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;  }</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;</div><div class="line"><a name="l01235"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1"> 1235</a></span>&#160;  Meaning&amp; <a class="code" href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1">at</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> it = <a class="code" href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">find</a>(key);</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    <span class="keywordflow">if</span> (it.<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(it.<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>)-&gt;_value.first;</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    }</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    <span class="comment">// InnerNode* actual = root();</span></div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    <span class="comment">// while (actual-&gt;_value.first != key) {</span></div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    <span class="comment">//   if (lt(key, actual-&gt;_value.first)) {</span></div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    <span class="comment">//     actual = static_cast&lt;InnerNode*&gt;(actual-&gt;child[0]);</span></div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    <span class="comment">//   } else {</span></div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    <span class="comment">//     actual = static_cast&lt;InnerNode*&gt;(actual-&gt;child[1]);</span></div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    <span class="comment">//   }</span></div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    <span class="comment">// }</span></div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;    <span class="comment">// return actual-&gt;_value.second;</span></div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;  }</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;</div><div class="line"><a name="l01290"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801"> 1290</a></span>&#160;  Meaning&amp; <a class="code" href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">operator[]</a>(<span class="keyword">const</span> Key&amp; key) { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">at</a>(key); }</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;</div><div class="line"><a name="l01317"></a><span class="lineno"><a class="line" href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8"> 1317</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">find</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;      <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>* now = <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>();</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;      <span class="keywordflow">while</span> (now != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;        <span class="keywordflow">if</span> (now-&gt;<a class="code" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a>.first == key) {</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;          <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>(now);</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(key, now-&gt;<a class="code" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a>.first)) {</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;          now = <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]);</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;          now = <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;        }</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;      }</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;    }</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;  }</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;</div><div class="line"><a name="l01336"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc"> 1336</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc">find</a>(<span class="keyword">const</span> Key&amp; key)<span class="keyword"> const </span>{</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;      <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>* now = <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>();</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;      <span class="keywordflow">while</span> (now != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;        <span class="keywordflow">if</span> (now-&gt;<a class="code" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a>.first == key) {</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;          <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(now);</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(key, now-&gt;<a class="code" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a>.first)) {</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;          now = <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]);</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;          now = <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;        }</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;      }</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    }</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;  }</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;</div><div class="line"><a name="l01376"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f"> 1376</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">lower_bound</a>(<span class="keyword">const</span> Key&amp; key)<span class="keyword"> const </span>{</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    <span class="comment">// completar</span></div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;  }</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;</div><div class="line"><a name="l01381"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3"> 1381</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">lower_bound</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;    <span class="comment">// completar</span></div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;  }</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;</div><div class="line"><a name="l01400"></a><span class="lineno"><a class="line" href="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee"> 1400</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee">empty</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a> == 0; }</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;</div><div class="line"><a name="l01412"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021"> 1412</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>; }</div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;</div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;  <span class="comment">// esta funcion es para generalizar agregar un elemento yendo por derecha y</span></div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;  <span class="comment">// por izquierda</span></div><div class="line"><a name="l01456"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c"> 1456</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">addElem</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>*&amp; now, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value, <span class="keywordtype">int</span> dir) {</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;    <span class="keywordflow">if</span> (now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir] != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;      now = now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir];  <span class="comment">// si no es null, sigo bajando</span></div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;      now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir] = <span class="keyword">new</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(now, value);</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;      <span class="comment">// static_cast&lt;InnerNode*&gt;(now-&gt;child[side])-&gt;_value = value;//le asigno</span></div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;      <span class="comment">// el valor al nuevo nodo</span></div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;      <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir], value);</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;    }</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;  }</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;</div><div class="line"><a name="l01469"></a><span class="lineno"><a class="line" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3"> 1469</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* newNode, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* aux;</div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;    <span class="keywordflow">if</span> (static_cast&lt;InnerNode*&gt;(this-&gt;<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>())-&gt;value() == value) {</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;      <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(this-&gt;<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>())-&gt;color = Color::Black;</div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;      <span class="keywordflow">return</span>;</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;    }</div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;    <span class="keywordflow">while</span> (!(newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">is_header</a>()) &amp;&amp;</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;           (newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> == Color::Red)) {</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;      <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* grandPa = newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;      <span class="keywordflow">if</span> (grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] == newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>) {</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        <span class="keywordflow">if</span> (grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;          aux = grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1];</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;          <span class="keywordflow">if</span> (aux-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> == Color::Red) {</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;            newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;            aux-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;            grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Red;</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;            newNode = grandPa;</div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;          }</div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;          <span class="keywordflow">if</span> (newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] == newNode) {</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;            newNode = newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;            <a class="code" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">leftrotate</a>(newNode);</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;          }</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;          newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;          grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Red;</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;          <a class="code" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">rightrotate</a>(grandPa);</div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;        }</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;        <span class="keywordflow">if</span> (grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;          aux = grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0];</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;          <span class="keywordflow">if</span> (aux-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> == Color::Red) {</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;            newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;            aux-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;            grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Red;</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;            newNode = grandPa;</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;          }</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;          <span class="keywordflow">if</span> (newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] == newNode) {</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;            newNode = newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;            <a class="code" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">rightrotate</a>(newNode);</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;          }</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;          newNode-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;          grandPa-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Red;</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;          <a class="code" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">leftrotate</a>(grandPa);</div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;        }</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;      }</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;      <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>()-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">color</a> = Color::Black;</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;    }</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;  }</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;</div><div class="line"><a name="l01519"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e"> 1519</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">leftrotate</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* p) {</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;    <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;      <span class="keywordflow">return</span>;</div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;      <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* y = p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1];</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;      <span class="keywordflow">if</span> (y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;        p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0];</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;        y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = p;</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;        p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;      }</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;      <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> != <span class="keyword">nullptr</span>) y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;      <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">is_header</a>()) {</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;        this-&gt;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = y;</div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;        <span class="comment">// header.parent = y;</span></div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;        y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = &amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;        <span class="keywordflow">if</span> (p == p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0])</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;          p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = y;</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;          p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = y;</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;      }</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;      y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = p;</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;      p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = y;</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;    }</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;  }</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;</div><div class="line"><a name="l01548"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f"> 1548</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">rightrotate</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* p) {</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;    <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;      <span class="keywordflow">return</span>;</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;      <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* y = p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0];</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;      <span class="keywordflow">if</span> (y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;        p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1];</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;        y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = p;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;        p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;      }</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;      <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> != <span class="keyword">nullptr</span>) y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;      <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">is_header</a>()) {</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;        this-&gt;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = y;</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;        <span class="comment">//  header.parent = y;</span></div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;        y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = &amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;        <span class="keywordflow">if</span> (p == p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0])</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;          p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = y;</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;          p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = y;</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;      }</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;      y-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = p;</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;      p-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = y;</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;    }</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;  }</div><div class="line"><a name="l01576"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0"> 1576</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">invalidHint</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;    <span class="keywordflow">return</span> (hint == <span class="keyword">nullptr</span> || <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>((*hint).first, value.first) ||</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;            <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(value.first,</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;               prevInorder(static_cast&lt;InnerNode*&gt;(hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>))-&gt;<a class="code" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">value</a>().first));</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;  }</div><div class="line"><a name="l01581"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854"> 1581</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;    <span class="comment">/*Tengo que insertar un elemento, para esto, distingo tres casos:</span></div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;<span class="comment">    * 1. el elemento a insertar es la raiz. Este es el caso mas facil, solo</span></div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;<span class="comment">    * tengo que</span></div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;<span class="comment">    * ponerlo en relacion incestuosa con el header y ponerle el valor</span></div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;<span class="comment">    * correspondiente.</span></div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;<span class="comment">    * Ademas, tengo que setear los hijos de header como raiz. La raiz siempre es</span></div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;<span class="comment">    * negra, y en este caso</span></div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;<span class="comment">    * no tengo que llamar a insertionFix.</span></div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;<span class="comment">    * 2. El elemento a insertar es menor que el hijo izquierdo de header, o es</span></div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;<span class="comment">    * mayor</span></div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;<span class="comment">    * al hijo derecho de header. Este caso tambien es muy simple, ya que lo voy</span></div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;<span class="comment">    * a insertar a la izquierda</span></div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;<span class="comment">    * del hijo izquierdo de header o a la derecha del hijo derecho segun</span></div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;<span class="comment">    * corresponda, y actualizar header.</span></div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;<span class="comment">    * Notar que esto tambien me beneficia porque al insertar cualquier nodo no</span></div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;<span class="comment">    * me voy a tener que fijar</span></div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;<span class="comment">    * si hay que actualizar el maximo o no. Sí va a ser necesario cuando se haga</span></div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;<span class="comment">    * un delete.</span></div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;<span class="comment">    * 3. El elemento a insertar no cae en ninguno de los casos anteriores. En</span></div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;<span class="comment">    * este caso, es donde tengo que considerar</span></div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;<span class="comment">    * el hint pasado por parametro. El hint es correcto sii es mayor al</span></div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;<span class="comment">    * elemento, y prevInorder de hint es menor</span></div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;<span class="comment">    * al elemento.</span></div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;<span class="comment">    * Si el hint es correcto, se puede probar que o el hint o su prevInorder van</span></div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;<span class="comment">    * a ser nils del lado que me sirve</span></div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;<span class="comment">    * i.e. el hint no tiene hijo izq o el prevInorder no tiene hijo derecho.</span></div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;<span class="comment">    * Si ninguno de los dos fuera nil en esos lados, existiria un elemento mayor</span></div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="comment">    * al prevInorder. Si este elemento</span></div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;<span class="comment">    * no fuera el hint, entonces afirmo este elemento sería menor al hint. Si</span></div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;<span class="comment">    * fuera mayor, y el hint no estuviera</span></div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;<span class="comment">    * en un subarbol de dicho elemento, tendria un absurdo por el invariante de</span></div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;<span class="comment">    * abb. Si el hint esta en el</span></div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;<span class="comment">    * subarbol del hijo derecho a prevInorder, para que su prevInorder siga</span></div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;<span class="comment">    * siendo ese, deberia ser el leftmost de</span></div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;<span class="comment">    * ese subarbol con lo cual su hijo izquierdo seria nil.</span></div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;<span class="comment">    * A la vez, que sea nil me asegura que lo puedo insertar de ese lado (habria</span></div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;<span class="comment">    * que convencerse)</span></div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;<span class="comment">    * Por lo que maravillosamente solo tengo que hacer dos comparaciones boludas</span></div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;<span class="comment">    * y asignarlo donde corresponda.</span></div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;<span class="comment">    * A continuacion obvio hay que llamar al insertionFIx.</span></div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;<span class="comment">    * En caso de que el hint no sea correcto, hayq ue llamar a insertar casi tla</span></div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;<span class="comment">    * cual de los algoritmos del Cormen.</span></div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;<span class="comment">    * */</span></div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;    <span class="keywordflow">if</span> ((<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> == <span class="keyword">nullptr</span>) || <a class="code" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">isMaxOrMin</a>(value) ||</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;        <a class="code" href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">invalidHint</a>(hint, value)) {</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;      <a class="code" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a>(value);</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;      <span class="keywordflow">if</span> (hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] == <span class="keyword">nullptr</span>) {  <span class="comment">// lo asigno a la izquierda del hint</span></div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;        hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] =</div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;            <span class="keyword">new</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(static_cast&lt;InnerNode*&gt;(hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>), value);</div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;        <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0], value);</div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;        <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* previo = prevInorder(static_cast&lt;InnerNode*&gt;(hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>));</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;        previo-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = <span class="keyword">new</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(previo, value);</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;        <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(previo-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1], value);</div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;      }</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;      <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>++;</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;    }</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;  }</div><div class="line"><a name="l01641"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c"> 1641</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">isMaxOrMin</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">value</a>().first, value.first) ||</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;           <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(value.first, <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">value</a>().first);</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;  }</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;</div><div class="line"><a name="l01646"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2"> 1646</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">assignMaxOrMin</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">value</a>().first, value.first)) {</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;      <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = <span class="keyword">new</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1], value);</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;      <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1];</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;      <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1], value);</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;      <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = <span class="keyword">new</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0], value);</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;      <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0];</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;      <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0], value);</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;    }</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;  }</div><div class="line"><a name="l01659"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8"> 1659</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8">insert</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) { <a class="code" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">insert_or_upsert</a>(value, 0); }</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;</div><div class="line"><a name="l01661"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee"> 1661</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">insert_or_upsert</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value, <span class="keywordtype">bool</span> upsert) {</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* now = this-&gt;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;    <span class="keywordtype">bool</span> inserted = <span class="keyword">false</span>;</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;      <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = <span class="keyword">new</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(&amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>, value);</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;      <a class="code" href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">insertionFix</a>(<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>(), value);</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;      <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;      inserted = <span class="keyword">true</span>;  <span class="comment">// notar q el count++ lo hago aca, no se si es lo mejor.</span></div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">isMaxOrMin</a>(value)) {</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;      <a class="code" href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">assignMaxOrMin</a>(value);</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;      inserted = <span class="keyword">true</span>;</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;      <span class="keywordflow">while</span> (now != <span class="keyword">nullptr</span> &amp;&amp; !inserted) {</div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb">key</a>(), value.first)) {</div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;          inserted = <a class="code" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">addElem</a>(now, value, 1);</div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;          <span class="keywordflow">if</span> ((now-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb">key</a>() == value.first) &amp;&amp; upsert) {</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;            <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(now)-&gt;_value.second = value.second;</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;            inserted = <span class="keyword">true</span>;</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;            <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>--;  <span class="comment">// para que no me lo cuente dos veces, igual no es copado</span></div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;                      <span class="comment">// hacer esto habria q cambiarlo</span></div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;          } <span class="keywordflow">else</span></div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;            inserted = <a class="code" href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">addElem</a>(now, value, 0);</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;        }</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;      }</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;    }</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;    <span class="keywordflow">if</span> (inserted) <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>++;</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;  }</div><div class="line"><a name="l01729"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475"> 1729</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">insert_or_assign</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> hint, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;    <span class="keywordflow">if</span> (*hint == value) {</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;      <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(hint.<a class="code" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">n</a>)-&gt;_value.second = value.second;</div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;    } <span class="keywordflow">else</span></div><div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;      <a class="code" href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">insert</a>(hint, value);</div><div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;  }</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;</div><div class="line"><a name="l01737"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765"> 1737</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">insert_or_assign</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value) {</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;    <a class="code" href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">insert_or_upsert</a>(value, 1);</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;  }</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;</div><div class="line"><a name="l01759"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe"> 1759</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">erase</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> pos) {</div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;    <span class="comment">// completar :(</span></div><div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;  }</div><div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;</div><div class="line"><a name="l01776"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334"> 1776</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334">erase</a>(<span class="keyword">const</span> Key&amp; key) {</div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;    <span class="comment">// completar</span></div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;  }</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;</div><div class="line"><a name="l01792"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca"> 1792</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca">clear</a>() {</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;    <span class="keywordflow">while</span> ((<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>) != {nullptr, nullptr}) {</div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] != <span class="keyword">nullptr</span>) <a class="code" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">erase</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]);</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] != <span class="keyword">nullptr</span>) <a class="code" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">erase</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;    }</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;    <a class="code" href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">erase</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>);</div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;  }</div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;</div><div class="line"><a name="l01830"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a"> 1830</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map.html">map</a>&amp; other) {</div><div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;    <span class="keyword">using</span> std::swap;</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;    <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>, other.<a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>);</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;    <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>, other.<a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>);</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;    <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>, other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>);</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;    <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0], other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]);</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;    <a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1], other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() != <span class="keyword">nullptr</span>) <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>()-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = &amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;    <span class="keywordflow">if</span> (other.<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() != <span class="keyword">nullptr</span>) other.<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>()-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> = &amp;other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;    <span class="comment">// nota: cuando el arbol es vacio, los child de header apuntan a header.</span></div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;    <span class="comment">// Notar que quedan apuntando mal despues del swap</span></div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>) <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = &amp;<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;    <span class="keywordflow">if</span> (other.<a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;      other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0] = other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1] = &amp;other.<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;  }</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;</div><div class="line"><a name="l01865"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb"> 1865</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]); }</div><div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;</div><div class="line"><a name="l01868"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c"> 1868</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c">begin</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]); }</div><div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;</div><div class="line"><a name="l01871"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a"> 1871</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a">cbegin</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[0]); }</div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;</div><div class="line"><a name="l01886"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983"> 1886</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">end</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>(); }</div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;</div><div class="line"><a name="l01889"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179"> 1889</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179">end</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(); }</div><div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;</div><div class="line"><a name="l01892"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912"> 1892</a></span>&#160;  <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912">cend</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>(); }</div><div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;</div><div class="line"><a name="l01907"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d"> 1907</a></span>&#160;  <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> <a class="code" href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d">rbegin</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]); }</div><div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;</div><div class="line"><a name="l01910"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586"> 1910</a></span>&#160;  <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586">rbegin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;  }</div><div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;</div><div class="line"><a name="l01915"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448"> 1915</a></span>&#160;  <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448">crbegin</a>() {</div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a>(<a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>.<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[1]);</div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;  }</div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;</div><div class="line"><a name="l01933"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f"> 1933</a></span>&#160;  <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a> <a class="code" href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f">rend</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">reverse_iterator</a>(); }</div><div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;</div><div class="line"><a name="l01936"></a><span class="lineno"><a class="line" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d"> 1936</a></span>&#160;  <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">rend</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a>(); }</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;</div><div class="line"><a name="l01939"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1"> 1939</a></span>&#160;  <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a> <a class="code" href="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1">crend</a>() { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">const_reverse_iterator</a>(); }</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;</div><div class="line"><a name="l01985"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator.html"> 1985</a></span>&#160;  <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> {</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;    <span class="keyword">using</span> Node = <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1Node.html">map::Node</a>;</div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;    <span class="keyword">using</span> InnerNode = <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">map::InnerNode</a>;</div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;   <span class="keyword">public</span>:</div><div class="line"><a name="l01992"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b"> 1992</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b">iterator_category</a> = std::bidirectional_iterator_tag;</div><div class="line"><a name="l01994"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html#a4e1d954ef5c6a64bbcd881854f039a16"> 1994</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html#a4e1d954ef5c6a64bbcd881854f039a16">value_type</a> = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">map::value_type</a>;</div><div class="line"><a name="l01997"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af"> 1997</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af">reference</a> = <a class="code" href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">map::reference</a>;</div><div class="line"><a name="l02000"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5"> 2000</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5">pointer</a> = <a class="code" href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">map::pointer</a>;</div><div class="line"><a name="l02003"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html#a803083681db1f62aed5138194abc1f06"> 2003</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html#a803083681db1f62aed5138194abc1f06">difference_type</a> = std::ptrdiff_t;</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;</div><div class="line"><a name="l02035"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba"> 2035</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba">iterator</a>() {}</div><div class="line"><a name="l02048"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe"> 2048</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af">reference</a> <a class="code" href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>-&gt;value(); }</div><div class="line"><a name="l02066"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60"> 2066</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5">pointer</a> <a class="code" href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60">operator-&gt;</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;(<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>-&gt;value()); }</div><div class="line"><a name="l02083"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5"> 2083</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5">operator++</a>() {</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;      this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a> = nextInorder(this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>);</div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;    }</div><div class="line"><a name="l02112"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974"> 2112</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">operator++</a>(<span class="keywordtype">int</span>) {</div><div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;      <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> it = *<span class="keyword">this</span>;</div><div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;      (*this)++;</div><div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;      <span class="keywordflow">return</span> it;</div><div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;    }</div><div class="line"><a name="l02133"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a"> 2133</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a">operator--</a>() {</div><div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;      this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a> = prevInorder(this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>);</div><div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;    }</div><div class="line"><a name="l02153"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225"> 2153</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> <a class="code" href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225">operator--</a>(<span class="keywordtype">int</span>) {</div><div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;      <a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> it = *<span class="keyword">this</span>;</div><div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;      (*this)--;</div><div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;      <span class="keywordflow">return</span> it;</div><div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;    }</div><div class="line"><a name="l02176"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5"> 2176</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5">operator==</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> other)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> ((*this).n == other.<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>); }</div><div class="line"><a name="l02178"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51"> 2178</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51">operator!=</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> other)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !(<span class="keyword">this</span> == other); }</div><div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;</div><div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;   <span class="keyword">private</span>:</div><div class="line"><a name="l02206"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838"> 2206</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838">iterator</a>(Node* pos) : <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>(pos) {}</div><div class="line"><a name="l02219"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e.html#a7fe2cdc033cd899dc9fd1da08ac3b39e"> 2219</a></span>&#160;    <span class="keyword">operator</span> Node*() <span class="keyword">const</span> { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>; }</div><div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;</div><div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;</div><div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;</div><div class="line"><a name="l02248"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93"> 2248</a></span>&#160;    Node* <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map.html">map</a>;</div><div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;  };</div><div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;</div><div class="line"><a name="l02262"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator.html"> 2262</a></span>&#160;  <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> {</div><div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;    <span class="keyword">using</span> Node = <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1Node.html">map::Node</a>;</div><div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;    <span class="keyword">using</span> InnerNode = <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">map::InnerNode</a>;</div><div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;</div><div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;   <span class="keyword">public</span>:</div><div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;    <span class="keyword">using</span> iterator_category = std::bidirectional_iterator_tag;</div><div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;    <span class="keyword">using</span> value_type = <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">map::value_type</a>;</div><div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;    <span class="keyword">using</span> reference = <a class="code" href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">map::const_reference</a>;</div><div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;    <span class="keyword">using</span> pointer = <a class="code" href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">map::const_pointer</a>;</div><div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;    <span class="keyword">using</span> difference_type = std::ptrdiff_t;</div><div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;</div><div class="line"><a name="l02274"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html#a8add3e4cabbdaf313b0e085064491555"> 2274</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html#a8add3e4cabbdaf313b0e085064491555">const_iterator</a>() {}</div><div class="line"><a name="l02294"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html#ab7924d90cbf6d19bec62514d10b62fb3"> 2294</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html#ab7924d90cbf6d19bec62514d10b62fb3">const_iterator</a>(<a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a> it) { this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a> = it.<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>; }</div><div class="line"><a name="l02296"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html#a3e8bf3ace171a4156dbf681fac671db9"> 2296</a></span>&#160;    reference <a class="code" href="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html#a3e8bf3ace171a4156dbf681fac671db9">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>-&gt;value(); }</div><div class="line"><a name="l02298"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html#a5cb0d5307b937d0bcda7d65379ce5208"> 2298</a></span>&#160;    pointer <a class="code" href="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html#a5cb0d5307b937d0bcda7d65379ce5208">operator-&gt;</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;      <span class="keywordflow">return</span> &amp;((<span class="keyword">static_cast&lt;</span>InnerNode*<span class="keyword">&gt;</span>(<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>))-&gt;_value);</div><div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160;    }</div><div class="line"><a name="l02302"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271"> 2302</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271">operator++</a>() {</div><div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;      this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a> = nextInorder(this-&gt;<a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>);</div><div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;    }</div><div class="line"><a name="l02307"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e"> 2307</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">operator++</a>(<span class="keywordtype">int</span>) {</div><div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;      <span class="comment">// completar</span></div><div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;    }</div><div class="line"><a name="l02311"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90"> 2311</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>&amp; <a class="code" href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90">operator--</a>() {</div><div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;      <span class="comment">// completar</span></div><div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;    }</div><div class="line"><a name="l02315"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html#ad5ae1cb1d000ac1f528ff32f9af3e228"> 2315</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> <a class="code" href="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html#ad5ae1cb1d000ac1f528ff32f9af3e228">operator--</a>(<span class="keywordtype">int</span>) {</div><div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160;      <span class="comment">// completar</span></div><div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;    }</div><div class="line"><a name="l02319"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html#af837632a6c4a88ec13c4c96153538494"> 2319</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html#af837632a6c4a88ec13c4c96153538494">operator==</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> other)<span class="keyword"> const </span>{</div><div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;      <span class="comment">// completar</span></div><div class="line"><a name="l02321"></a><span class="lineno"> 2321</span>&#160;    }</div><div class="line"><a name="l02323"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html#a40b9e921ad9c25aded17f394b9534510"> 2323</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html#a40b9e921ad9c25aded17f394b9534510">operator!=</a>(<a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a> other)<span class="keyword"> const </span>{</div><div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;      <span class="comment">// completar</span></div><div class="line"><a name="l02325"></a><span class="lineno"> 2325</span>&#160;    }</div><div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;</div><div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;   <span class="keyword">private</span>:</div><div class="line"><a name="l02329"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html#a195d395708167dca23f9ce49f7c604f3"> 2329</a></span>&#160;    <a class="code" href="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html#a195d395708167dca23f9ce49f7c604f3">const_iterator</a>(Node* pos) : <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>(pos) {}</div><div class="line"><a name="l02331"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3.html#a637c0f083a23ec4a262d47baeecafcf3"> 2331</a></span>&#160;    <span class="keyword">operator</span> Node*() <span class="keyword">const</span> { <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>; }</div><div class="line"><a name="l02333"></a><span class="lineno"><a class="line" href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277"> 2333</a></span>&#160;    Node* <a class="code" href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">n</a>{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map.html">map</a>;</div><div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;  };</div><div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;</div><div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1iterator.html">iterator</a>;</div><div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classaed2_1_1map_1_1const__iterator.html">const_iterator</a>;</div><div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;</div><div class="line"><a name="l02352"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b"> 2352</a></span>&#160;  <span class="keyword">enum class</span> <a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a> { Red, Black, Header };</div><div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;</div><div class="line"><a name="l02380"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node.html"> 2380</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structaed2_1_1map_1_1Node.html">Node</a> {</div><div class="line"><a name="l02382"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82"> 2382</a></span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* child[2]{<span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>};</div><div class="line"><a name="l02385"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90"> 2385</a></span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* parent{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l02387"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47"> 2387</a></span>&#160;    <a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a> color{Color::Red};</div><div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;</div><div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;</div><div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160;</div><div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;</div><div class="line"><a name="l02401"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html#a9c1a600491066ce7eb669b1cb76d56c6"> 2401</a></span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html#a9c1a600491066ce7eb669b1cb76d56c6">Node</a>() : color(<a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a>::Header) { child[0] = child[1] = <span class="keyword">this</span>; }</div><div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;</div><div class="line"><a name="l02413"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html#a62b5a42e88e219d53af8237a9ebedb6e"> 2413</a></span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html#a62b5a42e88e219d53af8237a9ebedb6e">Node</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* p, <a class="code" href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">Color</a> c = Color::Red) : parent(p), color(c) {}</div><div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;</div><div class="line"><a name="l02436"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html#a4f3cb2cc4302fe96432e624ced147540"> 2436</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html#a4f3cb2cc4302fe96432e624ced147540">~Node</a>() {}</div><div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;</div><div class="line"><a name="l02439"></a><span class="lineno"> 2439</span>&#160;</div><div class="line"><a name="l02440"></a><span class="lineno"> 2440</span>&#160;</div><div class="line"><a name="l02442"></a><span class="lineno"> 2442</span>&#160;</div><div class="line"><a name="l02468"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca"> 2468</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">is_header</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> color == Color::Header; }</div><div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;</div><div class="line"><a name="l02484"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb"> 2484</a></span>&#160;    <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; <a class="code" href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">value</a>() {</div><div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;      assert(not is_header());</div><div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;_value;</div><div class="line"><a name="l02487"></a><span class="lineno"> 2487</span>&#160;    }</div><div class="line"><a name="l02489"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html#a747a33f40ad748d750372fe73aea0b32"> 2489</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; <a class="code" href="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html#a747a33f40ad748d750372fe73aea0b32">value</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l02490"></a><span class="lineno"> 2490</span>&#160;      assert(not is_header());</div><div class="line"><a name="l02491"></a><span class="lineno"> 2491</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;_value;</div><div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160;    }</div><div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;</div><div class="line"><a name="l02508"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb"> 2508</a></span>&#160;    <span class="keyword">const</span> Key&amp; <a class="code" href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb">key</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;      assert(not is_header());</div><div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;      <span class="keywordflow">return</span> value().first;</div><div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;    }</div><div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;</div><div class="line"><a name="l02514"></a><span class="lineno"> 2514</span>&#160;</div><div class="line"><a name="l02515"></a><span class="lineno"> 2515</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div><div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;</div><div class="line"><a name="l02523"></a><span class="lineno"> 2523</span>&#160;    <span class="keywordtype">void</span> print(<span class="keywordtype">int</span> tab = 0)<span class="keyword"> const </span>{</div><div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;      std::cout &lt;&lt; std::string(tab, <span class="charliteral">&#39; &#39;</span>) &lt;&lt; value().first &lt;&lt; <span class="stringliteral">&quot;-&gt;&quot;</span></div><div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;                &lt;&lt; value().second &lt;&lt; <span class="stringliteral">&quot;   (&quot;</span></div><div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;                &lt;&lt; (color == Color::Red ? <span class="stringliteral">&quot;Red)&quot;</span> : <span class="stringliteral">&quot;Black)&quot;</span>) &lt;&lt; std::endl;</div><div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160;      <span class="keywordflow">if</span> (child[0]) child[0]-&gt;print(tab + 2);</div><div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;      <span class="keywordflow">if</span> (child[1]) child[1]-&gt;print(tab + 2);</div><div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;    }</div><div class="line"><a name="l02530"></a><span class="lineno"> 2530</span>&#160;</div><div class="line"><a name="l02531"></a><span class="lineno"> 2531</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;  };</div><div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;</div><div class="line"><a name="l02559"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1InnerNode.html"> 2559</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a> : <span class="keyword">public</span> <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a> {</div><div class="line"><a name="l02561"></a><span class="lineno"><a class="line" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e"> 2561</a></span>&#160;    <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a> <a class="code" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a>;</div><div class="line"><a name="l02562"></a><span class="lineno"> 2562</span>&#160;    <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* myparent, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&amp; value)</div><div class="line"><a name="l02563"></a><span class="lineno"> 2563</span>&#160;        : <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>(myparent), _value(value) {</div><div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;      <span class="comment">// parent = myparent;</span></div><div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;    }</div><div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;  };</div><div class="line"><a name="l02567"></a><span class="lineno"> 2567</span>&#160;</div><div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;</div><div class="line"><a name="l02592"></a><span class="lineno"> 2592</span>&#160;</div><div class="line"><a name="l02594"></a><span class="lineno"> 2594</span>&#160;</div><div class="line"><a name="l02599"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a"> 2599</a></span>&#160;  Compare <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>;</div><div class="line"><a name="l02601"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4"> 2601</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">count</a>{0};</div><div class="line"><a name="l02603"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce"> 2603</a></span>&#160;  <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a> <a class="code" href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">header</a>;</div><div class="line"><a name="l02605"></a><span class="lineno"> 2605</span>&#160;  <span class="keywordtype">bool</span> hasChild(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* node, <span class="keywordtype">int</span> dir) { <span class="keywordflow">return</span> node-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir] != <span class="keyword">nullptr</span>; }</div><div class="line"><a name="l02606"></a><span class="lineno"> 2606</span>&#160;  <span class="keywordtype">bool</span> hasChild(<span class="keyword">const</span> <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* node, <span class="keywordtype">int</span> dir) {</div><div class="line"><a name="l02607"></a><span class="lineno"> 2607</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir] != <span class="keyword">nullptr</span>;</div><div class="line"><a name="l02608"></a><span class="lineno"> 2608</span>&#160;  }</div><div class="line"><a name="l02609"></a><span class="lineno"> 2609</span>&#160;  <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* nextInorder(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* node, <span class="keywordtype">int</span> dir = 1) {</div><div class="line"><a name="l02610"></a><span class="lineno"> 2610</span>&#160;    <span class="keywordflow">if</span> (hasChild(node, dir)) <span class="keywordflow">return</span> getDMost(node-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir], 1 - dir);</div><div class="line"><a name="l02611"></a><span class="lineno"> 2611</span>&#160;    <span class="keywordflow">if</span> (isChild(node, 1 - dir)) <span class="keywordflow">return</span> node-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l02612"></a><span class="lineno"> 2612</span>&#160;    <span class="keywordflow">while</span> (isChild(node, dir)) node = node-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>;</div><div class="line"><a name="l02613"></a><span class="lineno"> 2613</span>&#160;    <span class="keywordflow">return</span> node;</div><div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;  }</div><div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;</div><div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160;  <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* prevInorder(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* node) { <span class="keywordflow">return</span> nextInorder(node, 0); }</div><div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;</div><div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;  <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* getDMost(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* node, <span class="keywordtype">int</span> dir) {</div><div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;    <a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* aux = node;</div><div class="line"><a name="l02620"></a><span class="lineno"> 2620</span>&#160;    <span class="keywordflow">while</span> (aux != <span class="keyword">nullptr</span> &amp;&amp; hasChild(node, dir)) {</div><div class="line"><a name="l02621"></a><span class="lineno"> 2621</span>&#160;      aux = aux-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir];</div><div class="line"><a name="l02622"></a><span class="lineno"> 2622</span>&#160;    }</div><div class="line"><a name="l02623"></a><span class="lineno"> 2623</span>&#160;    <span class="keywordflow">return</span> aux;</div><div class="line"><a name="l02624"></a><span class="lineno"> 2624</span>&#160;  }</div><div class="line"><a name="l02625"></a><span class="lineno"> 2625</span>&#160;</div><div class="line"><a name="l02626"></a><span class="lineno"> 2626</span>&#160;  <span class="keywordtype">bool</span> isChild(<a class="code" href="structaed2_1_1map_1_1Node.html">Node</a>* node, <span class="keywordtype">int</span> dir) { <span class="keywordflow">return</span> node-&gt;<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>-&gt;<a class="code" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a>[dir] == node; }</div><div class="line"><a name="l02627"></a><span class="lineno"> 2627</span>&#160;</div><div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;</div><div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;</div><div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;</div><div class="line"><a name="l02637"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2"> 2637</a></span>&#160;  <span class="keyword">inline</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>* <a class="code" href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">root</a>() { <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(header.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>); }</div><div class="line"><a name="l02638"></a><span class="lineno"> 2638</span>&#160;</div><div class="line"><a name="l02640"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7"> 2640</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>* <a class="code" href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">root</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l02641"></a><span class="lineno"> 2641</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a>*<span class="keyword">&gt;</span>(header.<a class="code" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a>);</div><div class="line"><a name="l02642"></a><span class="lineno"> 2642</span>&#160;  }</div><div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160;</div><div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;</div><div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;</div><div class="line"><a name="l02656"></a><span class="lineno"><a class="line" href="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624"> 2656</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624">eq</a>(<span class="keyword">const</span> Key&amp; k1, <span class="keyword">const</span> Key&amp; k2)<span class="keyword"> const </span>{</div><div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(k1, k2) == <a class="code" href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">lt</a>(k2, k1);</div><div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160;  }</div><div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;};</div><div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;</div><div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;</div><div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;</div><div class="line"><a name="l02665"></a><span class="lineno"> 2665</span>&#160;</div><div class="line"><a name="l02691"></a><span class="lineno"> 2691</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02692"></a><span class="lineno"><a class="line" href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933"> 2692</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933">operator==</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160;  <span class="keywordflow">return</span> m1.<a class="code" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>() == m2.<a class="code" href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">size</a>() and</div><div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;         std::equal(m1.<a class="code" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>(), m1.<a class="code" href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">end</a>(), m2.<a class="code" href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">begin</a>());</div><div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;}</div><div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;</div><div class="line"><a name="l02703"></a><span class="lineno"> 2703</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02704"></a><span class="lineno"><a class="line" href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09"> 2704</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;  <span class="keywordflow">return</span> not(m1 == m2);</div><div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;}</div><div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;</div><div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02735"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html#a8ff07f6a24c290ea7e8f63ec7ab24f8d"> 2735</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;(const map&lt;K, V, C&gt;&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;  <span class="comment">// completar.  Vale usar std::lexicographical_compare</span></div><div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;}</div><div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;</div><div class="line"><a name="l02745"></a><span class="lineno"> 2745</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02746"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63"> 2746</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63">operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02747"></a><span class="lineno"> 2747</span>&#160;  <span class="keywordflow">return</span> m2 &lt; m1;</div><div class="line"><a name="l02748"></a><span class="lineno"> 2748</span>&#160;}</div><div class="line"><a name="l02749"></a><span class="lineno"> 2749</span>&#160;</div><div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02757"></a><span class="lineno"><a class="line" href="classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html#afe374b37f17263d0cad3ee19a590d208"> 2757</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(const map&lt;K, V, C&gt;&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;  <span class="keywordflow">return</span> not(m2 &lt; m1);</div><div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;}</div><div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160;</div><div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02768"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159"> 2768</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159">operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02769"></a><span class="lineno"> 2769</span>&#160;  <span class="keywordflow">return</span> !(m1 &lt; m2);</div><div class="line"><a name="l02770"></a><span class="lineno"> 2770</span>&#160;}</div><div class="line"><a name="l02772"></a><span class="lineno"> 2772</span>&#160;</div><div class="line"><a name="l02774"></a><span class="lineno"> 2774</span>&#160;</div><div class="line"><a name="l02775"></a><span class="lineno"> 2775</span>&#160;</div><div class="line"><a name="l02791"></a><span class="lineno"> 2791</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> V, <span class="keyword">class</span> C&gt;</div><div class="line"><a name="l02792"></a><span class="lineno"><a class="line" href="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72"> 2792</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72">swap</a>(<a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m1, <a class="code" href="classaed2_1_1map.html">map&lt;K, V, C&gt;</a>&amp; m2) {</div><div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;  m1.<a class="code" href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">swap</a>(m2);</div><div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;}</div><div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160;}</div><div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;</div><div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MAP_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d_html_a4273e8812e7105a618df58a2c8b72b7d"><div class="ttname"><a href="classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d">aed2::map::key_type</a></div><div class="ttdeci">Key key_type</div><div class="ttdoc">Renombre para poder acceder al tipo de las claves. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00954">map.h:954</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1InnerNode_html"><div class="ttname"><a href="structaed2_1_1map_1_1InnerNode.html">aed2::map::InnerNode</a></div><div class="ttdoc">Estructura (privada) de un nodo no cabecera del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02559">map.h:2559</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_html_a76023e6a56cb625513e1b5ea028bf983"><div class="ttname"><a href="classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983">aed2::map::end</a></div><div class="ttdeci">iterator end()</div><div class="ttdoc">Devuelve un iterador apuntando a la posición pasando-el-ultimo del diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01886">map.h:1886</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400_html_a8cf1c570f605e9c0ad6feb8ce12c9400"><div class="ttname"><a href="classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400">aed2::map::size_type</a></div><div class="ttdeci">std::size_t size_type</div><div class="ttdoc">Renombre para poder acceder al tipo usado para describir tamaños. Compatible con estándar C++...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00994">map.h:994</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_html_ab6a5f9e471b311755e4a56834086cb90"><div class="ttname"><a href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">aed2::map::Node::parent</a></div><div class="ttdeci">Node * parent</div><div class="ttdoc">Puntero al padre: garantiza insercion con puntero en O(1) amortizado e iteracion en O(1) memoria...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02385">map.h:2385</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_html_a58a95705d54b3dda7f775ce5a22225cb"><div class="ttname"><a href="classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb">aed2::map::begin</a></div><div class="ttdeci">iterator begin()</div><div class="ttdoc">Devuelve un iterador al primer valor del diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01865">map.h:1865</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257_html_a7a77950a3d8e637bfa7cf5dcd904f257"><div class="ttname"><a href="classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257">aed2::map::map</a></div><div class="ttdeci">map(const map &amp;other)</div><div class="ttdoc">Constructor por copia. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01074">map.h:1074</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f_html_a277f03b4f4b6b98879e4e4921081801f"><div class="ttname"><a href="classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f">aed2::map::rend</a></div><div class="ttdeci">reverse_iterator rend()</div><div class="ttdoc">Devuelve un iterador apuntando a la posición pasando-el-ultimo del diccionario, en un recorrido al re...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01933">map.h:1933</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_html_ab96ad892caa28f193481a578f4956a2a"><div class="ttname"><a href="classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a">aed2::map::cbegin</a></div><div class="ttdeci">const_iterator cbegin()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01871">map.h:1871</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63_html_a2000cd874b72034ce7fe730c811b6c63"><div class="ttname"><a href="classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63">aed2::map::operator&gt;</a></div><div class="ttdeci">bool operator&gt;(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Renombre de m2 &lt; m1 </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02746">map.h:2746</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_html_a07b3dd65557c59ee085e5f211269c6b3"><div class="ttname"><a href="classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3">aed2::map::lower_bound</a></div><div class="ttdeci">iterator lower_bound(const Key &amp;key)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01381">map.h:1381</a></div></div>
+<div class="ttc" id="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_html_afd0fc1a8234888e61e0e615de7e245b8"><div class="ttname"><a href="classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8">aed2::map::find</a></div><div class="ttdeci">iterator find(const Key &amp;key)</div><div class="ttdoc">Devuelve un iterador a la posicion del valor con clave key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01317">map.h:1317</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf_html_a64da1d965b13eb28cdb3837bc17a18cf"><div class="ttname"><a href="classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf">aed2::map::map</a></div><div class="ttdeci">map(Compare c=Compare())</div><div class="ttdoc">Crea un diccionario vacio. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01053">map.h:1053</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_html_ad052c1ef8477a1613c292202226053a5"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5.html#ad052c1ef8477a1613c292202226053a5">aed2::map::iterator::operator==</a></div><div class="ttdeci">bool operator==(iterator other) const </div><div class="ttdoc">Operador de igualdad. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02176">map.h:2176</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_html_a836c7a166d63f507c4f79085ae953c51"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51.html#a836c7a166d63f507c4f79085ae953c51">aed2::map::iterator::operator!=</a></div><div class="ttdeci">bool operator!=(iterator other) const </div><div class="ttdoc">idem !|operator== </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02178">map.h:2178</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_html"><div class="ttname"><a href="classaed2_1_1map_1_1iterator.html">aed2::map::iterator</a></div><div class="ttdoc">Parte del módulo que implementa los iteradores que permiten la modificación de los significados...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01985">map.h:1985</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3_html_a195d395708167dca23f9ce49f7c604f3"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3.html#a195d395708167dca23f9ce49f7c604f3">aed2::map::const_iterator::const_iterator</a></div><div class="ttdeci">const_iterator(Node *pos)</div><div class="ttdoc">Ver aed2::map::iterator::iterator(Node*) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02329">map.h:2329</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e_html_a62b5a42e88e219d53af8237a9ebedb6e"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html#a62b5a42e88e219d53af8237a9ebedb6e">aed2::map::Node::Node</a></div><div class="ttdeci">Node(Node *p, Color c=Color::Red)</div><div class="ttdoc">Constructor para nodos del arbol red-black, sin enlaces. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02413">map.h:2413</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_html_a7394e98a23b86bc008ad73326b273fd5"><div class="ttname"><a href="classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5">aed2::map::pointer</a></div><div class="ttdeci">value_type * pointer</div><div class="ttdoc">Renombre para poder acceder al tipo de los punteros de los valores guardados. Compatible con estándar...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00984">map.h:984</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_html_a92d93f905c8ad73fba18fdc7e8915cce"><div class="ttname"><a href="classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce">aed2::map::header</a></div><div class="ttdeci">Node header</div><div class="ttdoc">Cabeceera del arbol; ver Implementación del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02603">map.h:2603</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_html_a7c44de7f0508186e135ddbcfe782fec5"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5.html#a7c44de7f0508186e135ddbcfe782fec5">aed2::map::iterator::operator++</a></div><div class="ttdeci">iterator &amp; operator++()</div><div class="ttdoc">Avanza el iterador a la siguiente posición. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02083">map.h:2083</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_html_a1f847ad4fd46883ac60d764967172179"><div class="ttname"><a href="classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179">aed2::map::end</a></div><div class="ttdeci">const_iterator end() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01889">map.h:1889</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72_html_a119cb2938bbc11c25ebd4fb824782a72"><div class="ttname"><a href="classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72">aed2::map::swap</a></div><div class="ttdeci">void swap(map&lt; K, V, C &gt; &amp;m1, map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Implementa la función swap para cumplir con el concepto swappable. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02792">map.h:2792</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_html_a6ad62765a2b2e00247b9e35a7542b448"><div class="ttname"><a href="classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448">aed2::map::crbegin</a></div><div class="ttdeci">const_reverse_iterator crbegin()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01915">map.h:1915</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510_html_a40b9e921ad9c25aded17f394b9534510"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510.html#a40b9e921ad9c25aded17f394b9534510">aed2::map::const_iterator::operator!=</a></div><div class="ttdeci">bool operator!=(const_iterator other) const </div><div class="ttdoc">Ver aed2::map::iterator::operator!=() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02323">map.h:2323</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208_html_a5cb0d5307b937d0bcda7d65379ce5208"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208.html#a5cb0d5307b937d0bcda7d65379ce5208">aed2::map::const_iterator::operator-&gt;</a></div><div class="ttdeci">pointer operator-&gt;() const </div><div class="ttdoc">Ver aed2::map::iterator::operator-&gt;() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02298">map.h:2298</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_html_a7bb91e94cbc875f1a011b142ef877912"><div class="ttname"><a href="classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912">aed2::map::cend</a></div><div class="ttdeci">const_iterator cend()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01892">map.h:1892</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_html_a43ddb71cc91e5c6021a7a1f243d6cc4a"><div class="ttname"><a href="classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a">aed2::map::swap</a></div><div class="ttdeci">void swap(map &amp;other)</div><div class="ttdoc">Intercambia el contenido de *this y other </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01830">map.h:1830</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_html_a803083681db1f62aed5138194abc1f06"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06.html#a803083681db1f62aed5138194abc1f06">aed2::map::iterator::difference_type</a></div><div class="ttdeci">std::ptrdiff_t difference_type</div><div class="ttdoc">Resultado de la diferencia entre dos punteros. Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02003">map.h:2003</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_html_a07ab50eda249a57858a34037d4c4c7b2"><div class="ttname"><a href="classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2">aed2::map::root</a></div><div class="ttdeci">InnerNode * root()</div><div class="ttdoc">Devuelve un puntero al nodo raíz. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02637">map.h:2637</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_html_a8e6a592062260177fd73b2f9897b1dd5"><div class="ttname"><a href="classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5">aed2::map::reverse_iterator</a></div><div class="ttdeci">std::reverse_iterator&lt; iterator &gt; reverse_iterator</div><div class="ttdoc">Iterador para recorrer un diccionario en orden inverso. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01016">map.h:1016</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90_html_ae12d6608eeca05957fa3de3f50287c90"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90.html#ae12d6608eeca05957fa3de3f50287c90">aed2::map::const_iterator::operator--</a></div><div class="ttdeci">const_iterator &amp; operator--()</div><div class="ttdoc">Ver aed2::map::iterator::operator--() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02311">map.h:2311</a></div></div>
+<div class="ttc" id="namespaceaed2_html"><div class="ttname"><a href="namespaceaed2.html">aed2</a></div><div class="ttdoc">Namespace para las clases de AED2. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00849">map.h:849</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624_html_ab45cb28bb215cd229383d88b96b3f624"><div class="ttname"><a href="classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624">aed2::map::eq</a></div><div class="ttdeci">bool eq(const Key &amp;k1, const Key &amp;k2) const </div><div class="ttdoc">Retorna true si las claves son iguales con respecto a this-&gt;lt. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02656">map.h:2656</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_html_af4ada8e79dabb4849fc87de63d3970fb"><div class="ttname"><a href="structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html#af4ada8e79dabb4849fc87de63d3970fb">aed2::map::Node::value</a></div><div class="ttdeci">value_type &amp; value()</div><div class="ttdoc">Devuelve el valor asociado a un nodo no cabecera. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02484">map.h:2484</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_html_a7d65c374c73c443a46d8fc224aff9e82"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">aed2::map::Node::child</a></div><div class="ttdeci">Node * child[2]</div><div class="ttdoc">Punteros a los hijos izquierdo (child[0]) y derecho (child[1]) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02382">map.h:2382</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_html_a9128a806713bcc999ebd8a97ab77e765"><div class="ttname"><a href="classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765">aed2::map::insert_or_assign</a></div><div class="ttdeci">iterator insert_or_assign(const value_type &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01737">map.h:1737</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_html_adf8633ef71bb6c1fc01c0abe8728fd93"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93">aed2::map::iterator::n</a></div><div class="ttdeci">Node * n</div><div class="ttdoc">Puntero al nodo actual. Ver Estructura de Representación. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02248">map.h:2248</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_html_a227de3b56a6ff2e6bb6de2d08277ca60"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60.html#a227de3b56a6ff2e6bb6de2d08277ca60">aed2::map::iterator::operator-&gt;</a></div><div class="ttdeci">pointer operator-&gt;() const </div><div class="ttdoc">Retorna la dirección del valor apuntado por *this </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02066">map.h:2066</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_html_a7403745a296985d64b8666c18953b2c0"><div class="ttname"><a href="classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0">aed2::map::invalidHint</a></div><div class="ttdeci">bool invalidHint(const_iterator hint, const value_type &amp;value)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01576">map.h:1576</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_html_ad8e796bf9c9c558e5ce6b61e116253fe"><div class="ttname"><a href="classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe">aed2::map::erase</a></div><div class="ttdeci">iterator erase(const_iterator pos)</div><div class="ttdoc">Elimina el valor apuntado por pos </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01759">map.h:1759</a></div></div>
+<div class="ttc" id="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40_html_aa3e34bf624f3009884a71b18f4ddae40"><div class="ttname"><a href="classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40">aed2::map::mapped_type</a></div><div class="ttdeci">Meaning mapped_type</div><div class="ttdoc">Renombre para poder acceder al tipo de los significados. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00959">map.h:959</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_html_a1366fc3e227a49777cb748fc6d4e022b"><div class="ttname"><a href="classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b">aed2::map::const_pointer</a></div><div class="ttdeci">const value_type * const_pointer</div><div class="ttdoc">Renombre para poder acceder al tipo de los punteros de los valores constantes guardados. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00989">map.h:989</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159_html_a093a6d1a055339c5fc6297a1d47a9159"><div class="ttname"><a href="classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159">aed2::map::operator&gt;=</a></div><div class="ttdeci">bool operator&gt;=(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Renombre de not(m1 &lt; m2) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02768">map.h:2768</a></div></div>
+<div class="ttc" id="classaed2_1_1map_abfc51b39670220e79037ac067006e933_html_abfc51b39670220e79037ac067006e933"><div class="ttname"><a href="classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933">aed2::map::operator==</a></div><div class="ttdeci">bool operator==(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Operador de igualdad entre dos diccionarios. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02692">map.h:2692</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca_html_a2bfa5165825979bf2431db55bc6bc9ca"><div class="ttname"><a href="classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca">aed2::map::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">Vacia el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01792">map.h:1792</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_html_a921e123f9c7f94610cf9fee3ab55d277"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277.html#a921e123f9c7f94610cf9fee3ab55d277">aed2::map::const_iterator::n</a></div><div class="ttdeci">Node * n</div><div class="ttdoc">Ver aed2::map::iterator::n. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02333">map.h:2333</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_html_a40933b2efe1cb479de9195ea947244d1"><div class="ttname"><a href="classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1">aed2::map::crend</a></div><div class="ttdeci">const_reverse_iterator crend()</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01939">map.h:1939</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_html_a89cf44cf0661a97f5dd0985160dcc0e7"><div class="ttname"><a href="classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7">aed2::map::root</a></div><div class="ttdeci">const InnerNode * root() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02640">map.h:2640</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801_html_a96f23896164ab47bee48c26b803f9801"><div class="ttname"><a href="classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801">aed2::map::operator[]</a></div><div class="ttdeci">Meaning &amp; operator[](const Key &amp;key)</div><div class="ttdoc">Devuelve el significado asociado a key, asegurando su existencia. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01290">map.h:1290</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3_html_ab7924d90cbf6d19bec62514d10b62fb3"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3.html#ab7924d90cbf6d19bec62514d10b62fb3">aed2::map::const_iterator::const_iterator</a></div><div class="ttdeci">const_iterator(iterator it)</div><div class="ttdoc">Constructor desde un iterador modificable. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02294">map.h:2294</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_html_a5451f8da0b7ad3582fab1decad5d09cb"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html#a5451f8da0b7ad3582fab1decad5d09cb">aed2::map::Node::key</a></div><div class="ttdeci">const Key &amp; key() const </div><div class="ttdoc">Devuelve la clave del valor de un nodo no cabecera. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02508">map.h:2508</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6_html_ab22c9a85c2dadbc286cd30e97069a8e6"><div class="ttname"><a href="classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6">aed2::map::~map</a></div><div class="ttdeci">~map()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01189">map.h:1189</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_html_ab0ea21abcb32b6d5a72cf341b9029838"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838">aed2::map::iterator::iterator</a></div><div class="ttdeci">iterator(Node *pos)</div><div class="ttdoc">Construye un iterador que apunta al valor del Nodo pos </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02206">map.h:2206</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_html_a816d69fa4dfe18a984dc3628fee14e2f"><div class="ttname"><a href="classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f">aed2::map::rightrotate</a></div><div class="ttdeci">void rightrotate(Node *p)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01548">map.h:1548</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_html_a48e75896997d516fe69bc18f889222fe"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe.html#a48e75896997d516fe69bc18f889222fe">aed2::map::iterator::operator*</a></div><div class="ttdeci">reference operator*() const </div><div class="ttdoc">Retorna el valor apuntado por *this </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02048">map.h:2048</a></div></div>
+<div class="ttc" id="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_html_af4f147533b3c0207ab036c86ce13ec0d"><div class="ttname"><a href="classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d">aed2::map::reference</a></div><div class="ttdeci">value_type &amp; reference</div><div class="ttdoc">Renombre para poder acceder al tipo de referencia de los valores guardados. Compatible con estándar C...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00974">map.h:974</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271_html_adaada1d489552555135d2ea89c67c271"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271.html#adaada1d489552555135d2ea89c67c271">aed2::map::const_iterator::operator++</a></div><div class="ttdeci">const_iterator &amp; operator++()</div><div class="ttdoc">Ver aed2::map::iterator::operator++() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02302">map.h:2302</a></div></div>
+<div class="ttc" id="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_html_abe3f47a745e17a6327943b813ff6bfb3"><div class="ttname"><a href="classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3">aed2::map::insertionFix</a></div><div class="ttdeci">void insertionFix(Node *newNode, const value_type &amp;value)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01469">map.h:1469</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_html_a52ea7bdbf1dc6b252aec76633564bdf5"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5.html#a52ea7bdbf1dc6b252aec76633564bdf5">aed2::map::iterator::pointer</a></div><div class="ttdeci">map::pointer pointer</div><div class="ttdoc">Tipo del puntero (resultado de operator-&gt;). Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02000">map.h:2000</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_html_a747a33f40ad748d750372fe73aea0b32"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html#a747a33f40ad748d750372fe73aea0b32">aed2::map::Node::value</a></div><div class="ttdeci">const value_type &amp; value() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02489">map.h:2489</a></div></div>
+<div class="ttc" id="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_html_aef47582a93a069c4ec95da8c595e4fee"><div class="ttname"><a href="classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee">aed2::map::insert_or_upsert</a></div><div class="ttdeci">iterator insert_or_upsert(const value_type &amp;value, bool upsert)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01661">map.h:1661</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_html_a6d62a415a4b9d320b30cada4ebcf9f5b"><div class="ttname"><a href="classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b">aed2::map::Color</a></div><div class="ttdeci">Color</div><div class="ttdoc">Colores de los nodos en un árbol red-black. Ver Implementación del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02352">map.h:2352</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_html_ac19788914a3110897e44c53f1318f6af"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af">aed2::map::iterator::reference</a></div><div class="ttdeci">map::reference reference</div><div class="ttdoc">Tipo de la referencia (resultado de operator*). Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01997">map.h:1997</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494_html_af837632a6c4a88ec13c4c96153538494"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494.html#af837632a6c4a88ec13c4c96153538494">aed2::map::const_iterator::operator==</a></div><div class="ttdeci">bool operator==(const_iterator other) const </div><div class="ttdoc">Ver aed2::map::iterator::operator==() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02319">map.h:2319</a></div></div>
+<div class="ttc" id="classaed2_1_1map_html"><div class="ttname"><a href="classaed2_1_1map.html">aed2::map</a></div><div class="ttdoc">Modulo que implementa un diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00939">map.h:939</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228_html_ad5ae1cb1d000ac1f528ff32f9af3e228"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228.html#ad5ae1cb1d000ac1f528ff32f9af3e228">aed2::map::const_iterator::operator--</a></div><div class="ttdeci">const_iterator operator--(int)</div><div class="ttdoc">Ver aed2::map::iterator::operator--(int) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02315">map.h:2315</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523_html_a3efa081d3379ab76f33a5ef9fe697523"><div class="ttname"><a href="classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523">aed2::map::key_compare</a></div><div class="ttdeci">Compare key_compare</div><div class="ttdoc">Renombre para poder acceder al tipo del comparador. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00969">map.h:969</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555_html_a8add3e4cabbdaf313b0e085064491555"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555.html#a8add3e4cabbdaf313b0e085064491555">aed2::map::const_iterator::const_iterator</a></div><div class="ttdeci">const_iterator()</div><div class="ttdoc">Ver aed2::map::iterator::iterator() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02274">map.h:2274</a></div></div>
+<div class="ttc" id="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_html_aafce6e53c53c460897613747fec89f9d"><div class="ttname"><a href="classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d">aed2::map::rend</a></div><div class="ttdeci">const_reverse_iterator rend() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01936">map.h:1936</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f_html_a3399d36fdd5a880b494f3a5795d3f18f"><div class="ttname"><a href="classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f">aed2::map::lower_bound</a></div><div class="ttdeci">const_iterator lower_bound(const Key &amp;key) const </div><div class="ttdoc">Devuelve un iterador al primer valor con clave mayor o igual a key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01376">map.h:1376</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_html_a81db4ead6daafe94938d5410173bdb6c"><div class="ttname"><a href="classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c">aed2::map::isMaxOrMin</a></div><div class="ttdeci">bool isMaxOrMin(const value_type &amp;value)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01641">map.h:1641</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_html_af4fe5565eb478cfccd254b2ef230b974"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974">aed2::map::iterator::operator++</a></div><div class="ttdeci">iterator operator++(int)</div><div class="ttdoc">Busca el sucesor inorder del nodo al que apunta el iterador. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02112">map.h:2112</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_html_a53fd8a50986fec67601dd77c44c1657e"><div class="ttname"><a href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">aed2::map::InnerNode::_value</a></div><div class="ttdeci">value_type _value</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02561">map.h:2561</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_html_ae7f70f71545d2a9de17b65edaaec748a"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a">aed2::map::iterator::operator--</a></div><div class="ttdeci">iterator &amp; operator--()</div><div class="ttdoc">Retrocede el iterador a la posición anterior. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02133">map.h:2133</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_html_a709e1a06ac3c5932c1eb6d9741f37b2c"><div class="ttname"><a href="classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c">aed2::map::addElem</a></div><div class="ttdeci">bool addElem(Node *&amp;now, const value_type &amp;value, int dir)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01456">map.h:1456</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e_html_a2fbc216b2f11694bb567ea850bcfdb2e"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e.html#a2fbc216b2f11694bb567ea850bcfdb2e">aed2::map::const_iterator::operator++</a></div><div class="ttdeci">const_iterator operator++(int)</div><div class="ttdoc">Ver aed2::map::iterator::operator++(int) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02307">map.h:2307</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_html_a277080d3db76f19df9319ecba16475a9"><div class="ttname"><a href="classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9">aed2::map::const_reference</a></div><div class="ttdeci">const value_type &amp; const_reference</div><div class="ttdoc">Renombre para poder acceder al tipo de referencia constante de los valores guardados. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00979">map.h:979</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_html_a58dd9993fee8ee3eaa5716b72a3eca47"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html#a58dd9993fee8ee3eaa5716b72a3eca47">aed2::map::Node::color</a></div><div class="ttdeci">Color color</div><div class="ttdoc">Color del nodo. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02387">map.h:2387</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a719db98e0ff9a837610f76be33264680_html_a719db98e0ff9a837610f76be33264680"><div class="ttname"><a href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">aed2::map::value_type</a></div><div class="ttdeci">std::pair&lt; const Key, Meaning &gt; value_type</div><div class="ttdoc">Renombre para poder acceder al tipo de las valores almacenados. Compatible con estándar C++...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00964">map.h:964</a></div></div>
+<div class="ttc" id="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_html_aed66a216549d13078a3ea6978ea0b768"><div class="ttname"><a href="classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768">aed2::map::const_reverse_iterator</a></div><div class="ttdeci">std::reverse_iterator&lt; const_iterator &gt; const_reverse_iterator</div><div class="ttdoc">Iterador para recorrer un diccionario constante en orden inverso. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01032">map.h:1032</a></div></div>
+<div class="ttc" id="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_html_aa68b6888ae3e256203d4ef273c293586"><div class="ttname"><a href="classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586">aed2::map::rbegin</a></div><div class="ttdeci">const_reverse_iterator rbegin() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01910">map.h:1910</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9_html_a3e8bf3ace171a4156dbf681fac671db9"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9.html#a3e8bf3ace171a4156dbf681fac671db9">aed2::map::const_iterator::operator*</a></div><div class="ttdeci">reference operator*() const </div><div class="ttdoc">Ver aed2::map::iterator::operator*() </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02296">map.h:2296</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_html_a6941cde9a79c27f054b5c97a587a1854"><div class="ttname"><a href="classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854">aed2::map::insert</a></div><div class="ttdeci">iterator insert(const_iterator hint, const value_type &amp;value)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01581">map.h:1581</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b_html_a709df3d8aef6fd1eeb839616b554ff0b"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b">aed2::map::iterator::iterator_category</a></div><div class="ttdeci">std::bidirectional_iterator_tag iterator_category</div><div class="ttdoc">Categoria del iterador: bidireccional. Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01992">map.h:1992</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540_html_a4f3cb2cc4302fe96432e624ced147540"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html#a4f3cb2cc4302fe96432e624ced147540">aed2::map::Node::~Node</a></div><div class="ttdeci">virtual ~Node()</div><div class="ttdoc">Destructor de Node. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02436">map.h:2436</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_html_a0e5be36fae0693e4665bd2a615e7550a"><div class="ttname"><a href="classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a">aed2::map::lt</a></div><div class="ttdeci">Compare lt</div><div class="ttdoc">Orden total para comparar claves. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02599">map.h:2599</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_html_a2ef6723c183916276b0afc4a4c721475"><div class="ttname"><a href="classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475">aed2::map::insert_or_assign</a></div><div class="ttdeci">iterator insert_or_assign(const_iterator hint, const value_type &amp;value)</div><div class="ttdoc">Inserta o redefine value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01729">map.h:1729</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6_html_a9c1a600491066ce7eb669b1cb76d56c6"><div class="ttname"><a href="structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html#a9c1a600491066ce7eb669b1cb76d56c6">aed2::map::Node::Node</a></div><div class="ttdeci">Node()</div><div class="ttdoc">Constructor para crear el nodo header. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02401">map.h:2401</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_html_a89f2613f926ac13293eafe65889d6021"><div class="ttname"><a href="classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021">aed2::map::size</a></div><div class="ttdeci">size_t size() const </div><div class="ttdoc">Devuelve la cantidad de valores en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01412">map.h:1412</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_html_a44236c4f16cdc20a10759862b198bde4"><div class="ttname"><a href="classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4">aed2::map::count</a></div><div class="ttdeci">size_t count</div><div class="ttdoc">Cantidad de elementos en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02601">map.h:2601</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_html_a8b89040f695bb838538e41b050d8e2d2"><div class="ttname"><a href="classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2">aed2::map::assignMaxOrMin</a></div><div class="ttdeci">void assignMaxOrMin(const value_type &amp;value)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01646">map.h:1646</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb_html_a5d336f3248572beb56be383dcc95cfeb"><div class="ttname"><a href="classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb">aed2::map::map</a></div><div class="ttdeci">map(iterator first, iterator last, Compare c=Compare())</div><div class="ttdoc">Crea un diccionario con los elementos del rango [first, last) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01133">map.h:1133</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1const__iterator_html"><div class="ttname"><a href="classaed2_1_1map_1_1const__iterator.html">aed2::map::const_iterator</a></div><div class="ttdoc">Parte del módulo que implementa los iteradores que no permiten la modificación de los significados...</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02262">map.h:2262</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16_html_a4e1d954ef5c6a64bbcd881854f039a16"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16.html#a4e1d954ef5c6a64bbcd881854f039a16">aed2::map::iterator::value_type</a></div><div class="ttdeci">map::value_type value_type</div><div class="ttdoc">Tipo de los valores recorridos. Requerido por estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01994">map.h:1994</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334_html_a2ffadb42cd5f0bc7b3752ff159b75334"><div class="ttname"><a href="classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334">aed2::map::erase</a></div><div class="ttdeci">void erase(const Key &amp;key)</div><div class="ttdoc">Elimina el valor cuya clave es key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01776">map.h:1776</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_html_acdd790eb54216601a2e0591776004dba"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba">aed2::map::iterator::iterator</a></div><div class="ttdeci">iterator()</div><div class="ttdoc">Crea un iterador nulo. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02035">map.h:2035</a></div></div>
+<div class="ttc" id="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee_html_af5320ca0a7df4d16015441d5d055a7ee"><div class="ttname"><a href="classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee">aed2::map::empty</a></div><div class="ttdeci">bool empty() const </div><div class="ttdoc">Indica si el diccionario esta vacío. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01400">map.h:1400</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_html_ab8f3e41b1a0d7b74645836f8d2e1acfc"><div class="ttname"><a href="classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc">aed2::map::find</a></div><div class="ttdeci">const_iterator find(const Key &amp;key) const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01336">map.h:1336</a></div></div>
+<div class="ttc" id="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09_html_abce0fa35c5b25fd67111c2e704616f09"><div class="ttname"><a href="classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09">aed2::map::operator!=</a></div><div class="ttdeci">bool operator!=(const map&lt; K, V, C &gt; &amp;m1, const map&lt; K, V, C &gt; &amp;m2)</div><div class="ttdoc">Renombre de not(m1 == m2) </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02704">map.h:2704</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_html_a1d10432d305bcb5f1af6ab7b75c27c1c"><div class="ttname"><a href="classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c">aed2::map::begin</a></div><div class="ttdeci">const_iterator begin() const </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01868">map.h:1868</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d_html_a2f55b88809000fcbfce1c6cfef1ba74d"><div class="ttname"><a href="classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d">aed2::map::difference_type</a></div><div class="ttdeci">std::ptrdiff_t difference_type</div><div class="ttdoc">Renombre para poder acceder al tipo usado para describir diferencias entre punteros. Compatible con estándar C++. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l00999">map.h:999</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_html_ad764851f1534f2db0964c4f729056a1e"><div class="ttname"><a href="classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e">aed2::map::leftrotate</a></div><div class="ttdeci">void leftrotate(Node *p)</div><div class="ttdoc">Inserta value en el diccionario. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01519">map.h:1519</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_html_a6b21c09f59a83b6ee45432dcfa61f4a1"><div class="ttname"><a href="classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1">aed2::map::at</a></div><div class="ttdeci">Meaning &amp; at(const Key &amp;key)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01235">map.h:1235</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_html_a0b0a11f906da2926f9eb342fcee79fd7"><div class="ttname"><a href="classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7">aed2::map::at</a></div><div class="ttdeci">const Meaning &amp; at(const Key &amp;key) const </div><div class="ttdoc">Devuelve el significado asociado a key </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01218">map.h:1218</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_html"><div class="ttname"><a href="structaed2_1_1map_1_1Node.html">aed2::map::Node</a></div><div class="ttdoc">Estructura (privada) de un nodo del árbol red-black. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02380">map.h:2380</a></div></div>
+<div class="ttc" id="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_html_add45e9ddbb8eeda99326cdb9ac9dd225"><div class="ttname"><a href="classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225.html#add45e9ddbb8eeda99326cdb9ac9dd225">aed2::map::iterator::operator--</a></div><div class="ttdeci">iterator operator--(int)</div><div class="ttdoc">Retrocede el iterador a la posición anterior. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02153">map.h:2153</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d_html_ac412d3902112122c1bffe2d4283a4e9d"><div class="ttname"><a href="classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d">aed2::map::rbegin</a></div><div class="ttdeci">reverse_iterator rbegin()</div><div class="ttdoc">Devuelve un iterador al primer valor del diccionario, en un recorrido al revés. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01907">map.h:1907</a></div></div>
+<div class="ttc" id="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_html_a60aacba06b1579630b3c8e996cf248c8"><div class="ttname"><a href="classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8">aed2::map::insert</a></div><div class="ttdeci">iterator insert(const value_type &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01659">map.h:1659</a></div></div>
+<div class="ttc" id="classaed2_1_1map_ac606d334809066929522964d45e76317_html_ac606d334809066929522964d45e76317"><div class="ttname"><a href="classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317">aed2::map::operator=</a></div><div class="ttdeci">map &amp; operator=(map other)</div><div class="ttdoc">Operador de asignación. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l01157">map.h:1157</a></div></div>
+<div class="ttc" id="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_html_ae6cc4598a60dbab7120ffae58ebbadca"><div class="ttname"><a href="structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca">aed2::map::Node::is_header</a></div><div class="ttdeci">bool is_header() const </div><div class="ttdoc">Devuelve true si el nodo actual es el header de la estructura. </div><div class="ttdef"><b>Definition:</b> <a href="map_8h_source.html#l02468">map.h:2468</a></div></div>
 </div><!-- fragment --></div><!-- contents -->
 </div><!-- doc-content -->
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="map_8h.html">map.h</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/namespaceaed2.html b/html/namespaceaed2.html
index 10d9d88..750a479 100644
--- a/html/namespaceaed2.html
+++ b/html/namespaceaed2.html
@@ -116,7 +116,7 @@ Clases</h2></td></tr>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:47 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/namespaces.html b/html/namespaces.html
index 7153723..e688a27 100644
--- a/html/namespaces.html
+++ b/html/namespaces.html
@@ -105,7 +105,7 @@ $(document).ready(function(){initNavTree('namespaces.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/navtreeindex0.js b/html/navtreeindex0.js
index 1f27347..bc7276f 100644
--- a/html/navtreeindex0.js
+++ b/html/navtreeindex0.js
@@ -54,66 +54,74 @@ var NAVTREEINDEX0 =
 "classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93.html#adf8633ef71bb6c1fc01c0abe8728fd93":[3,0,0,0,2,16],
 "classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a.html#ae7f70f71545d2a9de17b65edaaec748a":[3,0,0,0,2,11],
 "classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974.html#af4fe5565eb478cfccd254b2ef230b974":[3,0,0,0,2,10],
-"classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2":[3,0,0,0,51],
+"classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2":[3,0,0,0,59],
 "classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3":[3,0,0,0,28],
-"classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159":[3,0,0,0,59],
+"classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159.html#a093a6d1a055339c5fc6297a1d47a9159":[3,0,0,0,67],
 "classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7":[3,0,0,0,22],
-"classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a":[3,0,0,0,61],
-"classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72":[3,0,0,0,60],
+"classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a":[3,0,0,0,69],
+"classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72.html#a119cb2938bbc11c25ebd4fb824782a72":[3,0,0,0,68],
 "classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b.html#a1366fc3e227a49777cb748fc6d4e022b":[3,0,0,0,11],
-"classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c":[3,0,0,0,40],
-"classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179":[3,0,0,0,43],
-"classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63":[3,0,0,0,57],
+"classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c.html#a1d10432d305bcb5f1af6ab7b75c27c1c":[3,0,0,0,48],
+"classaed2_1_1map_a1f847ad4fd46883ac60d764967172179.html#a1f847ad4fd46883ac60d764967172179":[3,0,0,0,51],
+"classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63.html#a2000cd874b72034ce7fe730c811b6c63":[3,0,0,0,65],
 "classaed2_1_1map_a277080d3db76f19df9319ecba16475a9.html#a277080d3db76f19df9319ecba16475a9":[3,0,0,0,9],
-"classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f":[3,0,0,0,48],
-"classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca":[3,0,0,0,37],
-"classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475":[3,0,0,0,33],
+"classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f":[3,0,0,0,56],
+"classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca.html#a2bfa5165825979bf2431db55bc6bc9ca":[3,0,0,0,45],
+"classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475":[3,0,0,0,41],
 "classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d.html#a2f55b88809000fcbfce1c6cfef1ba74d":[3,0,0,0,13],
-"classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334":[3,0,0,0,36],
+"classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334.html#a2ffadb42cd5f0bc7b3752ff159b75334":[3,0,0,0,44],
 "classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f":[3,0,0,0,27],
 "classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523.html#a3efa081d3379ab76f33a5ef9fe697523":[3,0,0,0,7],
-"classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1":[3,0,0,0,50],
+"classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1.html#a40933b2efe1cb479de9195ea947244d1":[3,0,0,0,58],
 "classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d.html#a4273e8812e7105a618df58a2c8b72b7d":[3,0,0,0,4],
-"classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a":[3,0,0,0,38],
-"classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4":[3,0,0,0,62],
-"classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb":[3,0,0,0,39],
+"classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a.html#a43ddb71cc91e5c6021a7a1f243d6cc4a":[3,0,0,0,46],
+"classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4.html#a44236c4f16cdc20a10759862b198bde4":[3,0,0,0,70],
+"classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb.html#a58a95705d54b3dda7f775ce5a22225cb":[3,0,0,0,47],
 "classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb.html#a5d336f3248572beb56be383dcc95cfeb":[3,0,0,0,19],
-"classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8":[3,0,0,0,32],
+"classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8":[3,0,0,0,39],
 "classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf.html#a64da1d965b13eb28cdb3837bc17a18cf":[3,0,0,0,17],
-"classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854":[3,0,0,0,31],
-"classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448":[3,0,0,0,47],
+"classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854":[3,0,0,0,36],
+"classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448.html#a6ad62765a2b2e00247b9e35a7542b448":[3,0,0,0,55],
 "classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1":[3,0,0,0,23],
 "classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b.html#a6d62a415a4b9d320b30cada4ebcf9f5b":[3,0,0,0,16],
+"classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c":[3,0,0,0,31],
 "classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680":[3,0,0,0,6],
 "classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5.html#a7394e98a23b86bc008ad73326b273fd5":[3,0,0,0,10],
-"classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983":[3,0,0,0,42],
+"classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0":[3,0,0,0,35],
+"classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983.html#a76023e6a56cb625513e1b5ea028bf983":[3,0,0,0,50],
 "classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257.html#a7a77950a3d8e637bfa7cf5dcd904f257":[3,0,0,0,18],
-"classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912":[3,0,0,0,44],
-"classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7":[3,0,0,0,52],
+"classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912.html#a7bb91e94cbc875f1a011b142ef877912":[3,0,0,0,52],
+"classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f":[3,0,0,0,34],
+"classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c":[3,0,0,0,37],
+"classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7":[3,0,0,0,60],
 "classaed2_1_1map_a89f2613f926ac13293eafe65889d6021.html#a89f2613f926ac13293eafe65889d6021":[3,0,0,0,30],
+"classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2":[3,0,0,0,38],
 "classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400.html#a8cf1c570f605e9c0ad6feb8ce12c9400":[3,0,0,0,12],
 "classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5":[3,0,0,0,14],
-"classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html#a8ff07f6a24c290ea7e8f63ec7ab24f8d":[3,0,0,0,56],
-"classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765":[3,0,0,0,34],
-"classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce":[3,0,0,0,63],
+"classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d.html#a8ff07f6a24c290ea7e8f63ec7ab24f8d":[3,0,0,0,64],
+"classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765":[3,0,0,0,42],
+"classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce.html#a92d93f905c8ad73fba18fdc7e8915cce":[3,0,0,0,71],
 "classaed2_1_1map_a96f23896164ab47bee48c26b803f9801.html#a96f23896164ab47bee48c26b803f9801":[3,0,0,0,24],
 "classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40.html#aa3e34bf624f3009884a71b18f4ddae40":[3,0,0,0,5],
-"classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586":[3,0,0,0,46],
-"classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d":[3,0,0,0,49],
+"classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586":[3,0,0,0,54],
+"classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d":[3,0,0,0,57],
 "classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6.html#ab22c9a85c2dadbc286cd30e97069a8e6":[3,0,0,0,20],
-"classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624":[3,0,0,0,53],
+"classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624.html#ab45cb28bb215cd229383d88b96b3f624":[3,0,0,0,61],
 "classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc.html#ab8f3e41b1a0d7b74645836f8d2e1acfc":[3,0,0,0,26],
-"classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a":[3,0,0,0,41],
-"classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09":[3,0,0,0,55],
-"classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933":[3,0,0,0,54],
-"classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d":[3,0,0,0,45],
+"classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a.html#ab96ad892caa28f193481a578f4956a2a":[3,0,0,0,49],
+"classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09.html#abce0fa35c5b25fd67111c2e704616f09":[3,0,0,0,63],
+"classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3":[3,0,0,0,32],
+"classaed2_1_1map_abfc51b39670220e79037ac067006e933.html#abfc51b39670220e79037ac067006e933":[3,0,0,0,62],
+"classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d":[3,0,0,0,53],
 "classaed2_1_1map_ac606d334809066929522964d45e76317.html#ac606d334809066929522964d45e76317":[3,0,0,0,21],
-"classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe":[3,0,0,0,35],
+"classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e":[3,0,0,0,33],
+"classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe.html#ad8e796bf9c9c558e5ce6b61e116253fe":[3,0,0,0,43],
 "classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768.html#aed66a216549d13078a3ea6978ea0b768":[3,0,0,0,15],
+"classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee":[3,0,0,0,40],
 "classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d":[3,0,0,0,8],
 "classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee.html#af5320ca0a7df4d16015441d5d055a7ee":[3,0,0,0,29],
 "classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8.html#afd0fc1a8234888e61e0e615de7e245b8":[3,0,0,0,25],
-"classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html#afe374b37f17263d0cad3ee19a590d208":[3,0,0,0,58],
+"classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208.html#afe374b37f17263d0cad3ee19a590d208":[3,0,0,0,66],
 "files.html":[4,0],
 "functions.html":[3,2,0],
 "functions_enum.html":[3,2,4],
@@ -123,10 +131,11 @@ var NAVTREEINDEX0 =
 "hierarchy.html":[3,1],
 "index.html":[],
 "index.html":[0],
-"map_8h.html":[4,0,0],
-"map_8h_source.html":[4,0,0],
-"namespaceaed2.html":[2,0,0],
+"main_8cpp_source.html":[4,0,0],
+"map_8h.html":[4,0,1],
+"map_8h_source.html":[4,0,1],
 "namespaceaed2.html":[3,0,0],
+"namespaceaed2.html":[2,0,0],
 "namespaces.html":[2,0],
 "pages.html":[],
 "structaed2_1_1map_1_1InnerNode.html":[3,0,0,0,1],
diff --git a/html/pages.html b/html/pages.html
index 9829acc..d4ee1db 100644
--- a/html/pages.html
+++ b/html/pages.html
@@ -105,7 +105,7 @@ $(document).ready(function(){initNavTree('pages.html','');});
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/search/all_1.js b/html/search/all_1.js
index 57ccf31..c4ca8ab 100644
--- a/html/search/all_1.js
+++ b/html/search/all_1.js
@@ -1,7 +1,9 @@
 var searchData=
 [
+  ['addelem',['addElem',['../classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c',1,'aed2::map']]],
   ['aed2',['aed2',['../namespaceaed2.html',1,'']]],
   ['aspectos_20de_20aliasing_20y_20uso_20de_20punteros',['Aspectos de aliasing y uso de punteros',['../Aliasing.html',1,'index']]],
+  ['assignmaxormin',['assignMaxOrMin',['../classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2',1,'aed2::map']]],
   ['at',['at',['../classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7',1,'aed2::map::at(const Key &amp;key) const '],['../classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1',1,'aed2::map::at(const Key &amp;key)']]],
   ['axiomas_20y_20proposiciones_20auxiliares',['Axiomas y proposiciones auxiliares',['../axiomas.html',1,'index']]]
 ];
diff --git a/html/search/all_8.js b/html/search/all_8.js
index fd4139c..6d29e47 100644
--- a/html/search/all_8.js
+++ b/html/search/all_8.js
@@ -4,8 +4,12 @@ var searchData=
   ['innernode',['InnerNode',['../structaed2_1_1map_1_1InnerNode.html',1,'aed2::map']]],
   ['insert',['insert',['../classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854',1,'aed2::map::insert(const_iterator hint, const value_type &amp;value)'],['../classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8',1,'aed2::map::insert(const value_type &amp;value)']]],
   ['insert_5for_5fassign',['insert_or_assign',['../classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475',1,'aed2::map::insert_or_assign(const_iterator hint, const value_type &amp;value)'],['../classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765',1,'aed2::map::insert_or_assign(const value_type &amp;value)']]],
+  ['insert_5for_5fupsert',['insert_or_upsert',['../classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee',1,'aed2::map']]],
+  ['insertionfix',['insertionFix',['../classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3',1,'aed2::map']]],
+  ['invalidhint',['invalidHint',['../classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0',1,'aed2::map']]],
   ['is_5fheader',['is_header',['../structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca',1,'aed2::map::Node']]],
-  ['iterator',['iterator',['../classaed2_1_1map_1_1iterator.html',1,'aed2::map']]],
+  ['ismaxormin',['isMaxOrMin',['../classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c',1,'aed2::map']]],
   ['iterator',['iterator',['../classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba',1,'aed2::map::iterator::iterator()'],['../classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838',1,'aed2::map::iterator::iterator(Node *pos)']]],
+  ['iterator',['iterator',['../classaed2_1_1map_1_1iterator.html',1,'aed2::map']]],
   ['iterator_5fcategory',['iterator_category',['../classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b.html#a709df3d8aef6fd1eeb839616b554ff0b',1,'aed2::map::iterator']]]
 ];
diff --git a/html/search/all_a.js b/html/search/all_a.js
index eea31ae..e6c81fc 100644
--- a/html/search/all_a.js
+++ b/html/search/all_a.js
@@ -1,5 +1,6 @@
 var searchData=
 [
+  ['leftrotate',['leftrotate',['../classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e',1,'aed2::map']]],
   ['lower_5fbound',['lower_bound',['../classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f',1,'aed2::map::lower_bound(const Key &amp;key) const '],['../classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3',1,'aed2::map::lower_bound(const Key &amp;key)']]],
   ['lt',['lt',['../classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a.html#a0e5be36fae0693e4665bd2a615e7550a',1,'aed2::map']]]
 ];
diff --git a/html/search/all_f.js b/html/search/all_f.js
index d822496..d4a82ae 100644
--- a/html/search/all_f.js
+++ b/html/search/all_f.js
@@ -5,5 +5,6 @@ var searchData=
   ['reference',['reference',['../classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d.html#af4f147533b3c0207ab036c86ce13ec0d',1,'aed2::map::reference()'],['../classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af.html#ac19788914a3110897e44c53f1318f6af',1,'aed2::map::iterator::reference()']]],
   ['rend',['rend',['../classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f',1,'aed2::map::rend()'],['../classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d',1,'aed2::map::rend() const ']]],
   ['reverse_5fiterator',['reverse_iterator',['../classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5.html#a8e6a592062260177fd73b2f9897b1dd5',1,'aed2::map']]],
+  ['rightrotate',['rightrotate',['../classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f',1,'aed2::map']]],
   ['root',['root',['../classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2',1,'aed2::map::root()'],['../classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7',1,'aed2::map::root() const ']]]
 ];
diff --git a/html/search/functions_0.js b/html/search/functions_0.js
index fc5b67c..9436ff9 100644
--- a/html/search/functions_0.js
+++ b/html/search/functions_0.js
@@ -1,4 +1,6 @@
 var searchData=
 [
+  ['addelem',['addElem',['../classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c.html#a709e1a06ac3c5932c1eb6d9741f37b2c',1,'aed2::map']]],
+  ['assignmaxormin',['assignMaxOrMin',['../classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2.html#a8b89040f695bb838538e41b050d8e2d2',1,'aed2::map']]],
   ['at',['at',['../classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7.html#a0b0a11f906da2926f9eb342fcee79fd7',1,'aed2::map::at(const Key &amp;key) const '],['../classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1.html#a6b21c09f59a83b6ee45432dcfa61f4a1',1,'aed2::map::at(const Key &amp;key)']]]
 ];
diff --git a/html/search/functions_5.js b/html/search/functions_5.js
index 9aaaee5..b17de0b 100644
--- a/html/search/functions_5.js
+++ b/html/search/functions_5.js
@@ -2,6 +2,10 @@ var searchData=
 [
   ['insert',['insert',['../classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854.html#a6941cde9a79c27f054b5c97a587a1854',1,'aed2::map::insert(const_iterator hint, const value_type &amp;value)'],['../classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8.html#a60aacba06b1579630b3c8e996cf248c8',1,'aed2::map::insert(const value_type &amp;value)']]],
   ['insert_5for_5fassign',['insert_or_assign',['../classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475.html#a2ef6723c183916276b0afc4a4c721475',1,'aed2::map::insert_or_assign(const_iterator hint, const value_type &amp;value)'],['../classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765.html#a9128a806713bcc999ebd8a97ab77e765',1,'aed2::map::insert_or_assign(const value_type &amp;value)']]],
+  ['insert_5for_5fupsert',['insert_or_upsert',['../classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee.html#aef47582a93a069c4ec95da8c595e4fee',1,'aed2::map']]],
+  ['insertionfix',['insertionFix',['../classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3.html#abe3f47a745e17a6327943b813ff6bfb3',1,'aed2::map']]],
+  ['invalidhint',['invalidHint',['../classaed2_1_1map_a7403745a296985d64b8666c18953b2c0.html#a7403745a296985d64b8666c18953b2c0',1,'aed2::map']]],
   ['is_5fheader',['is_header',['../structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html#ae6cc4598a60dbab7120ffae58ebbadca',1,'aed2::map::Node']]],
+  ['ismaxormin',['isMaxOrMin',['../classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c.html#a81db4ead6daafe94938d5410173bdb6c',1,'aed2::map']]],
   ['iterator',['iterator',['../classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba.html#acdd790eb54216601a2e0591776004dba',1,'aed2::map::iterator::iterator()'],['../classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838.html#ab0ea21abcb32b6d5a72cf341b9029838',1,'aed2::map::iterator::iterator(Node *pos)']]]
 ];
diff --git a/html/search/functions_7.js b/html/search/functions_7.js
index 17f0507..c3124fc 100644
--- a/html/search/functions_7.js
+++ b/html/search/functions_7.js
@@ -1,4 +1,5 @@
 var searchData=
 [
+  ['leftrotate',['leftrotate',['../classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e.html#ad764851f1534f2db0964c4f729056a1e',1,'aed2::map']]],
   ['lower_5fbound',['lower_bound',['../classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f.html#a3399d36fdd5a880b494f3a5795d3f18f',1,'aed2::map::lower_bound(const Key &amp;key) const '],['../classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3.html#a07b3dd65557c59ee085e5f211269c6b3',1,'aed2::map::lower_bound(const Key &amp;key)']]]
 ];
diff --git a/html/search/functions_b.js b/html/search/functions_b.js
index 75910d3..0bf6a76 100644
--- a/html/search/functions_b.js
+++ b/html/search/functions_b.js
@@ -2,5 +2,6 @@ var searchData=
 [
   ['rbegin',['rbegin',['../classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d.html#ac412d3902112122c1bffe2d4283a4e9d',1,'aed2::map::rbegin()'],['../classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586.html#aa68b6888ae3e256203d4ef273c293586',1,'aed2::map::rbegin() const ']]],
   ['rend',['rend',['../classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f.html#a277f03b4f4b6b98879e4e4921081801f',1,'aed2::map::rend()'],['../classaed2_1_1map_aafce6e53c53c460897613747fec89f9d.html#aafce6e53c53c460897613747fec89f9d',1,'aed2::map::rend() const ']]],
+  ['rightrotate',['rightrotate',['../classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f.html#a816d69fa4dfe18a984dc3628fee14e2f',1,'aed2::map']]],
   ['root',['root',['../classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2.html#a07ab50eda249a57858a34037d4c4c7b2',1,'aed2::map::root()'],['../classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7.html#a89cf44cf0661a97f5dd0985160dcc0e7',1,'aed2::map::root() const ']]]
 ];
diff --git a/html/structaed2_1_1map_1_1InnerNode-members.html b/html/structaed2_1_1map_1_1InnerNode-members.html
index 37dd52a..da5d698 100644
--- a/html/structaed2_1_1map_1_1InnerNode-members.html
+++ b/html/structaed2_1_1map_1_1InnerNode-members.html
@@ -114,7 +114,7 @@ $(document).ready(function(){initNavTree('structaed2_1_1map_1_1InnerNode.html','
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1InnerNode.html b/html/structaed2_1_1map_1_1InnerNode.html
index 873ddc2..8c8360d 100644
--- a/html/structaed2_1_1map_1_1InnerNode.html
+++ b/html/structaed2_1_1map_1_1InnerNode.html
@@ -107,7 +107,7 @@ Atributos públicos</h2></td></tr>
 <tr class="memitem:a53fd8a50986fec67601dd77c44c1657e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaed2_1_1map_a719db98e0ff9a837610f76be33264680.html#a719db98e0ff9a837610f76be33264680">value_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html#a53fd8a50986fec67601dd77c44c1657e">_value</a></td></tr>
 <tr class="separator:a53fd8a50986fec67601dd77c44c1657e"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="inherit_header pub_attribs_structaed2_1_1map_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_structaed2_1_1map_1_1Node')"><img src="closed.png" alt="-"/>&#160;Atributos públicos heredados desde <a class="el" href="structaed2_1_1map_1_1Node.html">aed2::map&lt; Key, Meaning, Compare &gt;::Node</a></td></tr>
-<tr class="memitem:a7d65c374c73c443a46d8fc224aff9e82 inherit pub_attribs_structaed2_1_1map_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a> [2] {nullptr,nullptr}</td></tr>
+<tr class="memitem:a7d65c374c73c443a46d8fc224aff9e82 inherit pub_attribs_structaed2_1_1map_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a> [2] {nullptr, nullptr}</td></tr>
 <tr class="memdesc:a7d65c374c73c443a46d8fc224aff9e82 inherit pub_attribs_structaed2_1_1map_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Punteros a los hijos izquierdo (child[0]) y derecho (child[1])  <a href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">Más...</a><br /></td></tr>
 <tr class="separator:a7d65c374c73c443a46d8fc224aff9e82 inherit pub_attribs_structaed2_1_1map_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:ab6a5f9e471b311755e4a56834086cb90 inherit pub_attribs_structaed2_1_1map_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> {nullptr}</td></tr>
@@ -146,11 +146,11 @@ Otros miembros heredados</h2></td></tr>
 struct aed2::map&lt; Key, Meaning, Compare &gt;::InnerNode</h3>
 
 <p>Estructura (privada) de un nodo no cabecera del árbol red-black. </p>
-<p>Tal como sugiere Cormen et al. <b>[CormenLeisersonRivestStein2009]</b>, como se implementa en GCC, y cómo explicamos en <a class="el" href="Implementacion.html">Implementación del árbol red-black</a>, el árbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como centinelas. La estructura <span class="paramname"><a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">InnerNode</a></span> hereda de la estructura <a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">aed2::map::Node</a>, agregando el valor, para representar a los nodos no cabecera.</p>
+<p>Tal como sugiere Cormen et al. <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a>, como se implementa en GCC, y cómo explicamos en <a class="el" href="Implementacion.html">Implementación del árbol red-black</a>, el árbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como centinelas. La estructura <span class="paramname"><a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">InnerNode</a></span> hereda de la estructura <a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">aed2::map::Node</a>, agregando el valor, para representar a los nodos no cabecera.</p>
 <p>Además de definir los campos de la estructura de un nodo, esta clase podría implementar una especie de submodulo que incluya funciones para manipular el árbol red-black. Se sugiere incluir en esta estructura aquellas funciones que, si bien no requieren conocer el resto de la estructura red-black, explotan el conocimiento de que el árbol red-black tiene un unico nodo sentinela que sirve de cabecera.</p>
 <dl class="section remark"><dt>Comentarios</dt><dd>Como <span class="paramname"><a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">InnerNode</a></span> es una estructura privada, no tiene ventajas imporantes implementarla en forma modular. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01855">1855</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02559">2559</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 </div><hr/>La documentación para esta estructura fue generada a partir del siguiente fichero:<ul>
 <li><a class="el" href="map_8h_source.html">map.h</a></li>
 </ul>
@@ -160,7 +160,7 @@ struct aed2::map&lt; Key, Meaning, Compare &gt;::InnerNode</h3>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html b/html/structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html
index e6fc7ad..0b147bd 100644
--- a/html/structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html
+++ b/html/structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e.html
@@ -104,7 +104,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Valor del nodo </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01857">1857</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02561">2561</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -114,7 +114,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1InnerNode.html">InnerNode</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node-members.html b/html/structaed2_1_1map_1_1Node-members.html
index 25d1048..11a5b89 100644
--- a/html/structaed2_1_1map_1_1Node-members.html
+++ b/html/structaed2_1_1map_1_1Node-members.html
@@ -113,7 +113,7 @@ $(document).ready(function(){initNavTree('structaed2_1_1map_1_1Node.html','');})
 <!-- start footer part -->
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node.html b/html/structaed2_1_1map_1_1Node.html
index 02434a8..8e3f234 100644
--- a/html/structaed2_1_1map_1_1Node.html
+++ b/html/structaed2_1_1map_1_1Node.html
@@ -130,7 +130,7 @@ Métodos públicos</h2></td></tr>
 </table><table class="memberdecls">
 <tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
 Atributos públicos</h2></td></tr>
-<tr class="memitem:a7d65c374c73c443a46d8fc224aff9e82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a> [2] {nullptr,nullptr}</td></tr>
+<tr class="memitem:a7d65c374c73c443a46d8fc224aff9e82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">child</a> [2] {nullptr, nullptr}</td></tr>
 <tr class="memdesc:a7d65c374c73c443a46d8fc224aff9e82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Punteros a los hijos izquierdo (child[0]) y derecho (child[1])  <a href="structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html#a7d65c374c73c443a46d8fc224aff9e82">Más...</a><br /></td></tr>
 <tr class="separator:a7d65c374c73c443a46d8fc224aff9e82"><td class="memSeparator" colspan="2">&#160;</td></tr>
 <tr class="memitem:ab6a5f9e471b311755e4a56834086cb90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html#ab6a5f9e471b311755e4a56834086cb90">parent</a> {nullptr}</td></tr>
@@ -145,11 +145,11 @@ Atributos públicos</h2></td></tr>
 struct aed2::map&lt; Key, Meaning, Compare &gt;::Node</h3>
 
 <p>Estructura (privada) de un nodo del árbol red-black. </p>
-<p>Tal como sugiere Cormen et al. <b>[CormenLeisersonRivestStein2009]</b>, como se implementa en gcc, y cómo explicamos en <a class="el" href="Implementacion.html">Implementación del árbol red-black</a>, el arbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como sentinelas. La estructura <span class="paramname"><a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a></span> es la base para representar a ambos tipos de nodos, ya que omite los valores. La clase <a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">aed2::map::InnerNode</a>, que hereda de <span class="paramname"><a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a></span>, extiende la representación incluyendo el valor.</p>
+<p>Tal como sugiere Cormen et al. <a class="el" href="citelist.html#CITEREF_CormenLeisersonRivestStein2009">[1]</a>, como se implementa en gcc, y cómo explicamos en <a class="el" href="Implementacion.html">Implementación del árbol red-black</a>, el arbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como sentinelas. La estructura <span class="paramname"><a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a></span> es la base para representar a ambos tipos de nodos, ya que omite los valores. La clase <a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">aed2::map::InnerNode</a>, que hereda de <span class="paramname"><a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a></span>, extiende la representación incluyendo el valor.</p>
 <p>Además de definir los campos de la estructura de un nodo, esta clase podría usarse para implementar una especie de submodulo que incluya funciones para manipular el arbol red-black. Las funciones incluidas en esta estructura deberían ser aquellas que, si bien no requieren conocer el resto de la estructura red-black, explotan el conocimiento de que el árbol red-black tiene un único nodo sentinela que sirve de cabecera. (Ver ejemplos)</p>
 <dl class="section remark"><dt>Comentarios</dt><dd>Como <span class="paramname"><a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a></span> es una estructura privada, no tiene ventajas imporantes implementarla en forma modular. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01702">1702</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02380">2380</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 </div><hr/>La documentación para esta estructura fue generada a partir del siguiente fichero:<ul>
 <li><a class="el" href="map_8h_source.html">map.h</a></li>
 </ul>
@@ -159,7 +159,7 @@ struct aed2::map&lt; Key, Meaning, Compare &gt;::Node</h3>
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html b/html/structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html
index 17aac13..12c137c 100644
--- a/html/structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html
+++ b/html/structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540.html
@@ -118,7 +118,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <p>Como <a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a> funciona de clase base, el destructor es virtual, asi se puede invocar delete de un Node* que apunta a un <a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">InnerNode</a>, destruyendo el valor contenido en el <a class="el" href="structaed2_1_1map_1_1InnerNode.html" title="Estructura (privada) de un nodo no cabecera del árbol red-black. ">InnerNode</a>.</p>
 <dl class="section remark"><dt>Comentarios</dt><dd>En rigor, nunca deberíamos invocar new <a class="el" href="structaed2_1_1map_1_1Node.html" title="Estructura (privada) de un nodo del árbol red-black. ">Node</a>, asi que no tiene sentido hacer delete de un Node*. Podemos evitar esta invocación poniendo el destructor como protegido y no virtual. De esa forma, nos obliga a tener un InnerNode* para el delete, lo cual efectivamente llama al destructor del valor. Sin embargo, por simplicidad, vamos a permitir que el destructor sea virtual. Además, así no es necesario que hagan el <code>static_cast</code> y evitamos errores de memoria difíciles de debugguear. </dd></dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01753">1753</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02436">2436</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -128,7 +128,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html b/html/structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html
index bec8f8a..56f1f3e 100644
--- a/html/structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html
+++ b/html/structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb.html
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01816">1816</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02508">2508</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -133,7 +133,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html b/html/structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html
index a860cb4..f01ae82 100644
--- a/html/structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html
+++ b/html/structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Color del nodo. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01708">1708</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02387">2387</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html b/html/structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html
index bcdf598..4a4346c 100644
--- a/html/structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html
+++ b/html/structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e.html
@@ -139,7 +139,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01736">1736</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02413">2413</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -149,7 +149,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html b/html/structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html
index 37cbb94..52f28e8 100644
--- a/html/structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html
+++ b/html/structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32.html
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 </div><div class="memdoc">
 <p>Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01799">1799</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02489">2489</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -125,7 +125,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html b/html/structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html
index b02e359..1034256 100644
--- a/html/structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html
+++ b/html/structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82.html
@@ -98,14 +98,14 @@ $(document).ready(function(){initNavTree('structaed2_1_1map_1_1Node_a7d65c374c73
 template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; </div>
       <table class="memname">
         <tr>
-          <td class="memname"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a>* <a class="el" href="classaed2_1_1map.html">aed2::map</a>&lt; Key, Meaning, Compare &gt;::Node::child[2] {nullptr,nullptr}</td>
+          <td class="memname"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a>* <a class="el" href="classaed2_1_1map.html">aed2::map</a>&lt; Key, Meaning, Compare &gt;::Node::child[2] {nullptr, nullptr}</td>
         </tr>
       </table>
 </div><div class="memdoc">
 
 <p>Punteros a los hijos izquierdo (child[0]) y derecho (child[1]) </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01704">1704</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02382">2382</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html b/html/structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html
index ffe71ef..2b0aa28 100644
--- a/html/structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html
+++ b/html/structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6.html
@@ -121,7 +121,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01722">1722</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02401">2401</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -131,7 +131,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html b/html/structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html
index 5739b30..eb5568e 100644
--- a/html/structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html
+++ b/html/structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90.html
@@ -105,7 +105,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 
 <p>Puntero al padre: garantiza insercion con puntero en O(1) amortizado e iteracion en O(1) memoria. </p>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01706">1706</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02385">2385</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -115,7 +115,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html b/html/structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html
index 2da9d1c..2d474ab 100644
--- a/html/structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html
+++ b/html/structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca.html
@@ -122,7 +122,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01778">1778</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02468">2468</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -132,7 +132,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/html/structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html b/html/structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html
index 00b38f6..d5b3d40 100644
--- a/html/structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html
+++ b/html/structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb.html
@@ -123,7 +123,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <dd><img class="formulaInl" alt="$O$" src="form_1.png"/>(1)</dd>
 </dl>
 
-<p>Definición en la línea <a class="el" href="map_8h_source.html#l01794">1794</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
+<p>Definición en la línea <a class="el" href="map_8h_source.html#l02484">2484</a> del archivo <a class="el" href="map_8h_source.html">map.h</a>.</p>
 
 </div>
 </div>
@@ -133,7 +133,7 @@ template&lt;class Key, class Meaning, class Compare = std::less&lt;Key&gt;&gt; <
 <div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
   <ul>
     <li class="navelem"><a class="el" href="namespaceaed2.html">aed2</a></li><li class="navelem"><a class="el" href="classaed2_1_1map.html">map</a></li><li class="navelem"><a class="el" href="structaed2_1_1map_1_1Node.html">Node</a></li>
-    <li class="footer">Generado el Sábado, 20 de Mayo de 2017 16:19:48 para Trabajo práctico 2: diccionario sobre RB-tree por
+    <li class="footer">Generado el Jueves, 25 de Mayo de 2017 18:17:40 para Trabajo práctico 2: diccionario sobre RB-tree por
     <a href="http://www.doxygen.org/index.html">
     <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
   </ul>
diff --git a/latex/Aliasing.tex b/latex/Aliasing.tex
index c559f93..3186b03 100644
--- a/latex/Aliasing.tex
+++ b/latex/Aliasing.tex
@@ -84,7 +84,9 @@ En resumen, podemos observar que las variables computacionales forman, en cierto
 \item eval({\itshape v})\+: que denota el valor \char`\"{}almacenado\char`\"{} en la posición de memoria de {\itshape v}. Esta función suele ser implícita, ya que uno suele escribir {\itshape v} para referirse a su valor.
 \end{DoxyEnumerate}
 
-La existencia del operador \& sobre variables computacionales nos permite definir lo que seria el símil de la igualdad observacional de estos objetos, i.\+e., el alias. Es decir, cuándo dos variables refieren a la misma posición de memoria. En este caso, {\itshape v} y {\itshape w} tiene alias si y sólo si \&{\itshape v} $=_{\rm obs}$ \&{\itshape w}.\hypertarget{Aliasing_sec-invalido}{}\subsubsection{Variables y punteros inválidos y el problema de la memoria finita}\label{Aliasing_sec-invalido}
+La existencia del operador \& sobre variables computacionales nos permite definir lo que seria el símil de la igualdad observacional de estos objetos, i.\+e., el alias. Es decir, cuándo dos variables refieren a la misma posición de memoria. En este caso, {\itshape v} y {\itshape w} tiene alias si y sólo si \&{\itshape v} $=_{\rm obs}$ \&{\itshape w}.\hypertarget{Aliasing_sec-invalido}{}\subsubsection{Variables y punteros inválidos y el problema de la}\label{Aliasing_sec-invalido}
+memoria finita
+
 Claramente, no todas las combinaciones de bits representan información válida, cuando queremos interpretar una posición de memoria con un tipo {\itshape T}. El comportamiento de la función sombrerito sobre dichas variables está indefinido (ver restricción). Sin embargo, no podemos especificar nada de las variables {\itshape antes} de aplicar sombrerito. Por ello, simplemente asumimos que las variables de nuestro mundo computacional son {\itshape válidas}. En términos formales, suponemos que sombrerito de {\itshape x} siempre denota un valor correcto, más allá de la restricción.
 
 Análogamente, un puntero a {\itshape T}, al ser una valor computacional, puede tener un valor inválido. Esto ocurre, por ejemplo, cuando la posición de memoria a la que apunta no se puede interpretar correctamente bajo el tipo {\itshape T}. Es decir, si {\itshape x} es una variable inválida, entonces \&{\itshape x} es un puntero inválido.
diff --git a/latex/Implementacion.tex b/latex/Implementacion.tex
index 619d851..ebba1e4 100644
--- a/latex/Implementacion.tex
+++ b/latex/Implementacion.tex
@@ -1,4 +1,4 @@
-La implementación básica de un árbol red-\/black está explicada, algoritmos incluidos, en {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]}. Sin embargo, hay algunas pequeñas diferencias y algunas sutilezas a la hora de definirlos en C++ para implementar un diccionario. En esta sección discutimos estas cuestiones.
+La implementación básica de un árbol red-\/black está explicada, algoritmos incluidos, en \cite{CormenLeisersonRivestStein2009}. Sin embargo, hay algunas pequeñas diferencias y algunas sutilezas a la hora de definirlos en C++ para implementar un diccionario. En esta sección discutimos estas cuestiones.
 
 Lo primero a notar es que el árbol es un A\+BB, implementado con nodos que almacenan cada valor (par {\ttfamily (clave, significado)}) junto con los punteros a sus hijos. Asimismo, cada nodo tiene un color, que puede ser rojo o negro. Un tema particular de los A\+BB es que la iteración se puede hacer en tiempo lineal aplicando el algoritmo inorder. Este algoritmo se puede implementar de dos formas. La primera es guardando una pila con los nodos no recorridos. El inconveniente de este método es que requiere que los iteradores almacenen pilas de $O$({\itshape h}) elementos, siendo {\itshape h} la altura del árbol. El segundo método es manteniendo exclusivamente un puntero al nodo, que requiere $O$(1) espacio. Para poder aplicar este método, sin embargo, se requiere que cada nodo conozca a su padre. En resumen, la estructura de un nodo almacena los siguientes campos\+:
 \begin{DoxyItemize}
@@ -8,7 +8,7 @@ Lo primero a notar es que el árbol es un A\+BB, implementado con nodos que alma
 \item valor almacenado, y
 \item color del nodo\+: rojo o negro.
 \end{DoxyItemize}\hypertarget{Implementacion_Cabecera}{}\subsection{Nodo cabecera}\label{Implementacion_Cabecera}
-En {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]} se sugiere mantener un nodo especial, llamado centinela, que sirva para representar hojas {\itshape externas} al árbol. Es decir, suponer que el árbol consiste de nodos internos y que sus hojas son {\itshape centinelas} (i.\+e., nodos sin valor) que se usan por comodidad. En esta implementación, en lugar de nodos centinela para la hojas, vamos a usar un nodo centinela para la {\itshape cabecera}. Las razones de esta elección, y las implicancias se discuten en esta sección.
+En \cite{CormenLeisersonRivestStein2009} se sugiere mantener un nodo especial, llamado centinela, que sirva para representar hojas {\itshape externas} al árbol. Es decir, suponer que el árbol consiste de nodos internos y que sus hojas son {\itshape centinelas} (i.\+e., nodos sin valor) que se usan por comodidad. En esta implementación, en lugar de nodos centinela para la hojas, vamos a usar un nodo centinela para la {\itshape cabecera}. Las razones de esta elección, y las implicancias se discuten en esta sección.
 
 Un primer problema a resolver es cómo ubicar el primer nodo del recorrido inorder. Obviamente, alcanza con descender hacia la izquierda hasta encontrar un nodo sin hijo izquierdo. El problema de esta implementación es que toma tiempo $O$({\itshape h}). La solución obvia es mantener un puntero que apunte al primer nodo. Análogamente, podemos mantener un puntero al último nodo. Sin embargo, esta solución no es del todo satisfactoria, porque complica la implementación de los iteradores. Si un iterador {\ttfamily it} es únicamente un puntero a nodo, entonces no hay forma de que {\ttfamily it} sepa si está o no apuntando al último nodo. Esto se puede determinar una vez que se avanza {\ttfamily it}, en cuyo caso {\ttfamily it} debe apuntar a una dirección inválida, digamos {\ttfamily nullptr}. El problema de este enfoque es que no hay forma de saber, una vez parado en {\ttfamily nullptr}, a qué dirección retroceder. Hay dos soluciones posibles. La primera es almacenar, además del puntero al nodo, un puntero al diccionario para tener acceso al puntero al último. La segunda es apuntar a un nodo especial que sirva para retroceder. La ventaja de esta última solución es que los iteradores son más livianos.
 
@@ -28,7 +28,8 @@ Resumiendo, la estructura de representación propuesta es la siguiente\+:
 \textcolor{keyword}{struct }Node \{
   \textcolor{comment}{//punteros a los hijos izquierdo (child[0]) y derecho (child[1])}
   Node* child[2]\{\textcolor{keyword}{nullptr},\textcolor{keyword}{nullptr}\};
-  \textcolor{comment}{//puntero al padre: garantiza insercion con puntero en O(1) amortizado e iteracion en O(1) memoria}
+  \textcolor{comment}{//puntero al padre: garantiza insercion con puntero en O(1) amortizado e}
+iteracion en O(1) memoria
   Node* parent\{\textcolor{keyword}{nullptr}\};
   \textcolor{comment}{//color del nodo}
   Color color\{Color::Red\};
@@ -51,4 +52,4 @@ Si bien no es obvio, la inserción y remoción de cada nodo se puede hacer en ti
 \item un puntero al nodo a eliminar o al nodo anterior/siguiente al nodo a insertar es dado.
 \end{DoxyItemize}
 
-El algoritmo es exactamente el mismo que se muestra en {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]} y la razón de este costo puede consultarse, por ejemplo, en {\bfseries [Mehlhorn\+Sanders2008]}. 
\ No newline at end of file
+El algoritmo es exactamente el mismo que se muestra en \cite{CormenLeisersonRivestStein2009} y la razón de este costo puede consultarse, por ejemplo, en \cite{MehlhornSanders2008}. 
\ No newline at end of file
diff --git a/latex/Interfaz.tex b/latex/Interfaz.tex
index 4ff1943..56ef649 100644
--- a/latex/Interfaz.tex
+++ b/latex/Interfaz.tex
@@ -55,12 +55,14 @@ El módulo que implementamos viene equipado con iteradores que siguen el estánd
 
 Como vemos en la materia, los iteradores no se usan exclusivamente para recorrer la estructura, sino que también se usan como {\itshape handles} (punteros) a la misma. De esta forma, podemos acceder a los valores en $O$(1) sin exhibir la implementación. La desventaja de este esquema (que queda opacada en cuanto a sus ventajas) es que los iteradores se pueden invalidar cuando la estructura cambia. En esta implementación, salvo excepciones puntuales bien documentadas, se {\bfseries garantiza} que un iterador se invalida únicamente cuando se elimina el valor referenciado por el mismo. Ninguna otra operación puede invalidar el iterador (obviamente, la secuencia iterada sí cambia, pero no se invalida).
 
-Aprovechando esta interpretación de iteradores como handles, la interfaz de C++ tiene muchas funciones que retornan iteradores, y algunas que se aprovechan de la existencia de los iteradores para mejorar el tiempo de computo. Por ejemplo, es posible eliminar un valor en $O$(1) (amortizado) si se provee un iterador apuntando al valor a eliminar {\bfseries [Mehlhorn\+Sanders2008]}.
+Aprovechando esta interpretación de iteradores como handles, la interfaz de C++ tiene muchas funciones que retornan iteradores, y algunas que se aprovechan de la existencia de los iteradores para mejorar el tiempo de computo. Por ejemplo, es posible eliminar un valor en $O$(1) (amortizado) si se provee un iterador apuntando al valor a eliminar \cite{MehlhornSanders2008}.
 
 Con respecto a la eficiencia, vamos a {\bfseries garantizar} que los iteradores son {\itshape livianos} (i.\+e., ocupan $O$(1) memoria y son copiables en $O$(1) tiempo). En consecuencia, se pueden pasar iteradores por copia sin ningún costo. Asimismo, vamos a {\bfseries garantizar} que la creación de iteradores apuntando a la primer posición ({\ttfamily begin}) y la posición pasando-\/el-\/fin ({\ttfamily end}) toman tiempo $O$(1). Esto nos permite verificar si llegamos al fin del recorrido en $O$(1) tiempo, de la siguiente forma\+: 
 \begin{DoxyCode}
-\textcolor{keywordflow}{for}(\textcolor{keyword}{auto} it = d.begin(); it != d.end(); ++it) \{...\}   \textcolor{comment}{//cada comparacion en O(1)}
-\textcolor{keywordflow}{for}(\textcolor{keyword}{auto} it = d.rbegin(); it != d.rend(); ++it) \{...\} \textcolor{comment}{//cada comparacion en O(1)}
+\textcolor{keywordflow}{for}(\textcolor{keyword}{auto} it = d.begin(); it != d.end(); ++it) \{...\}   \textcolor{comment}{//cada comparacion en}
+O(1)
+for(auto it = d.rbegin(); it != d.rend(); ++it) \{...\} \textcolor{comment}{//cada comparacion en}
+O(1)
 \end{DoxyCode}
  Asimismo, podemos determinar si una clave existe, comparando el resultado de {\ttfamily find} con el iterador {\ttfamily d.\+end()}, usando $O$(1) tiempo para la comparación.
 
diff --git a/latex/citelist.tex b/latex/citelist.tex
index e69de29..be36498 100644
--- a/latex/citelist.tex
+++ b/latex/citelist.tex
@@ -0,0 +1,11 @@
+
+\begin{DoxyDescription}
+\item[\label{_CITEREF_CormenLeisersonRivestStein2009}%
+\mbox{[}1\mbox{]}]Thomas~H. Cormen, Charles~E. Leiserson, Ronald~L. Rivest, and Clifford Stein. {\itshape Introduction to algorithms}. M\+IT Press, Cambridge, MA, third edition, 2009.
+
+
+\item[\label{_CITEREF_MehlhornSanders2008}%
+\mbox{[}2\mbox{]}]Kurt Mehlhorn and Peter Sanders. {\itshape Algorithms and Data Structures\+: The Basic Toolbox}. Springer Publishing Company, Incorporated, 1 edition, 2008.
+
+
+\end{DoxyDescription}
\ No newline at end of file
diff --git a/latex/classaed2_1_1map.tex b/latex/classaed2_1_1map.tex
index 81796e7..a986526 100644
--- a/latex/classaed2_1_1map.tex
+++ b/latex/classaed2_1_1map.tex
@@ -91,10 +91,26 @@ size\+\_\+t \hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f26
 \begin{Indent}{\bf Inserción, borrado y modificación}\par
 \begin{DoxyCompactItemize}
 \item 
+bool \hyperlink{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}{add\+Elem} (\hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$\&now, const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value, int dir)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
+void \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertion\+Fix} (\hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$new\+Node, const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
+void \hyperlink{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}{leftrotate} (\hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$p)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
+void \hyperlink{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}{rightrotate} (\hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$p)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
+bool \hyperlink{classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_a7403745a296985d64b8666c18953b2c0}{invalid\+Hint} (\hyperlink{classaed2_1_1map_1_1const__iterator}{const\+\_\+iterator} hint, const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert} (\hyperlink{classaed2_1_1map_1_1const__iterator}{const\+\_\+iterator} hint, const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
 \begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
+bool \hyperlink{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}{is\+Max\+Or\+Min} (const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
+void \hyperlink{classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_a8b89040f695bb838538e41b050d8e2d2}{assign\+Max\+Or\+Min} (const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}{insert} (const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
 \item 
+\hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}{insert\+\_\+or\+\_\+upsert} (const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value, bool upsert)
+\begin{DoxyCompactList}\small\item\em Inserta {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{insert\+\_\+or\+\_\+assign} (\hyperlink{classaed2_1_1map_1_1const__iterator}{const\+\_\+iterator} hint, const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
 \begin{DoxyCompactList}\small\item\em Inserta o redefine {\bfseries value} en el diccionario. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}{insert\+\_\+or\+\_\+assign} (const \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\+\_\+type} \&value)
@@ -161,13 +177,13 @@ Diccionario se representa con map\+: tupla(header\+: Node, count\+: Nat). Ver \h
 \end{DoxyParagraph}
 \begin{DoxyParagraph}{Invariante de representacion}
 rep\+: map $\to$ bool~\newline
-rep(m) $\equiv$ completar 
+ rep(m) $\equiv$ true  asd 
 \end{DoxyParagraph}
 
 
 \begin{DoxyParagraph}{Función de abstracción}
 abs\+: map m $\to$ Diccionario(Key, Meaning) \{rep(n)\}~\newline
-abs(m) $\equiv$ completar 
+ abs(m) $\equiv$ if m.\+empty() then vacio else definir (m.\+root()-\/$>$value().first,m.\+root()-\/$>$value().second, Abs(m.\+erase(m.\+root()-\/$>$value().first)) ) 
 \end{DoxyParagraph}
 }\begin{DoxyCompactItemize}
 \item 
@@ -270,7 +286,7 @@ No tenemos forma en A\+E\+D2 de decir que el parámetro formal se define en tiem
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00674}{674} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00939}{939} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -284,7 +300,7 @@ Renombre para poder acceder al tipo de las claves. Compatible con estándar C++.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00686}{686} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00954}{954} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!mapped\+\_\+type@{mapped\+\_\+type}}
 \index{mapped\+\_\+type@{mapped\+\_\+type}!aed2\+::map@{aed2\+::map}}
@@ -295,7 +311,7 @@ Renombre para poder acceder al tipo de los significados. Compatible con estánda
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00690}{690} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00959}{959} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!value\+\_\+type@{value\+\_\+type}}
 \index{value\+\_\+type@{value\+\_\+type}!aed2\+::map@{aed2\+::map}}
@@ -306,7 +322,7 @@ Renombre para poder acceder al tipo de las valores almacenados. Compatible con e
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00694}{694} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00964}{964} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!key\+\_\+compare@{key\+\_\+compare}}
 \index{key\+\_\+compare@{key\+\_\+compare}!aed2\+::map@{aed2\+::map}}
@@ -317,7 +333,7 @@ Renombre para poder acceder al tipo del comparador. Compatible con estándar C++
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00698}{698} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00969}{969} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!reference@{reference}}
 \index{reference@{reference}!aed2\+::map@{aed2\+::map}}
@@ -328,7 +344,7 @@ Renombre para poder acceder al tipo de referencia de los valores guardados. Comp
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00702}{702} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00974}{974} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!const\+\_\+reference@{const\+\_\+reference}}
 \index{const\+\_\+reference@{const\+\_\+reference}!aed2\+::map@{aed2\+::map}}
@@ -339,7 +355,7 @@ Renombre para poder acceder al tipo de referencia constante de los valores guard
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00706}{706} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00979}{979} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!pointer@{pointer}}
 \index{pointer@{pointer}!aed2\+::map@{aed2\+::map}}
@@ -350,7 +366,7 @@ Renombre para poder acceder al tipo de los punteros de los valores guardados. Co
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00710}{710} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00984}{984} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!const\+\_\+pointer@{const\+\_\+pointer}}
 \index{const\+\_\+pointer@{const\+\_\+pointer}!aed2\+::map@{aed2\+::map}}
@@ -361,7 +377,7 @@ Renombre para poder acceder al tipo de los punteros de los valores constantes gu
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00714}{714} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00989}{989} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!size\+\_\+type@{size\+\_\+type}}
 \index{size\+\_\+type@{size\+\_\+type}!aed2\+::map@{aed2\+::map}}
@@ -372,7 +388,7 @@ Renombre para poder acceder al tipo usado para describir tamaños. Compatible co
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00718}{718} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00994}{994} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!difference\+\_\+type@{difference\+\_\+type}}
 \index{difference\+\_\+type@{difference\+\_\+type}!aed2\+::map@{aed2\+::map}}
@@ -383,7 +399,7 @@ Renombre para poder acceder al tipo usado para describir diferencias entre punte
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l00722}{722} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l00999}{999} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!reverse\+\_\+iterator@{reverse\+\_\+iterator}}
 \index{reverse\+\_\+iterator@{reverse\+\_\+iterator}!aed2\+::map@{aed2\+::map}}
@@ -399,7 +415,7 @@ Este tipo implementa un iterador que puede recorrer el diccionario en el orden i
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00734}{734} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01016}{1016} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!const\+\_\+reverse\+\_\+iterator@{const\+\_\+reverse\+\_\+iterator}}
 \index{const\+\_\+reverse\+\_\+iterator@{const\+\_\+reverse\+\_\+iterator}!aed2\+::map@{aed2\+::map}}
@@ -415,7 +431,7 @@ Este tipo implementa un iterador que puede recorrer el diccionario en el orden i
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00745}{745} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01032}{1032} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -430,11 +446,11 @@ Colores de los nodos en un árbol red-\/black. Ver \hyperlink{Implementacion}{Im
 Valores validos\+: \begin{DoxyItemize}
 \item Color\+::\+Red (color rojo) \item Color\+::\+Black (color negro) \item Color\+::\+Header (color azul, reservado para la cabecera)\end{DoxyItemize}
 \begin{DoxySeeAlso}{Ver también}
-Cormen et al. {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]} e \hyperlink{Implementacion}{Implementación del árbol red-\/black} 
+Cormen et al. \cite{CormenLeisersonRivestStein2009} e \hyperlink{Implementacion}{Implementación del árbol red-\/black} 
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01684}{1684} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02352}{2352} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -461,10 +477,10 @@ Crea un diccionario vacio.
 \hline
 \end{DoxyRetVals}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{true\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
-{\bfseries Q} $\equiv$ \{completar\}
+{\bfseries Q} $\equiv$ \{res  vac\textbackslash{}\textquotesingle{}io\}
 \end{DoxyPostcond}
 
 \begin{DoxyDescription}
@@ -476,7 +492,7 @@ El parámetro formal $<$ del T\+AD diccionario se establece en esta función. $<
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00765}{765} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01053}{1053} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!map@{map}}
 \index{map@{map}!aed2\+::map@{aed2\+::map}}
@@ -500,10 +516,10 @@ Constructor por copia.
 \hline
 \end{DoxyRetVals}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{true\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
-{\bfseries Q} $\equiv$ \{completar\}
+{\bfseries Q} $\equiv$ \{res  other\}
 \end{DoxyPostcond}
 
 \begin{DoxyDescription}
@@ -515,7 +531,7 @@ El parámetro formal $<$ del T\+AD diccionario se establece en esta función. $<
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00784}{784} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01074}{1074} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!map@{map}}
 \index{map@{map}!aed2\+::map@{aed2\+::map}}
@@ -586,7 +602,7 @@ El parámetro formal $<$ del T\+AD diccionario se establece en esta función. $<
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00832}{832} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01133}{1133} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!````~map@{$\sim$map}}
 \index{````~map@{$\sim$map}!aed2\+::map@{aed2\+::map}}
@@ -618,7 +634,7 @@ Como se explicita, esta función no hace nada, porque no tiene un objetivo funci
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00880}{880} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01189}{1189} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -648,10 +664,10 @@ Operador de asignación.
 completar
 \end{DoxyParagraph}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{other0 = other\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
-{\bfseries Q} $\equiv$ \{completar\}
+{\bfseries Q} $\equiv$ \{res = other0\}
 \end{DoxyPostcond}
 
 \begin{DoxyDescription}
@@ -663,7 +679,7 @@ Es importante remarcar que no se realiza ninguna comparación entre los elemento
 \end{DoxyNote}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00855}{855} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01157}{1157} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!at@{at}}
 \index{at@{at}!aed2\+::map@{aed2\+::map}}
@@ -690,10 +706,10 @@ Devuelve el significado asociado a {\bfseries key}
 completar
 \end{DoxyParagraph}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\}
+{\bfseries P} $\equiv$ \{definido?({\bfseries key},this)\}
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
-{\bfseries Q} $\equiv$ \{completar\}
+{\bfseries Q} $\equiv$ \{res  obtener({\bfseries key},this)\}
 \end{DoxyPostcond}
 
 \begin{DoxyDescription}
@@ -705,7 +721,7 @@ Esta función, que se asemeja más a la forma de programar propuesta en A\+E\+D2
 \end{DoxyRemark}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00907}{907} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01218}{1218} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!at@{at}}
 \index{at@{at}!aed2\+::map@{aed2\+::map}}
@@ -716,7 +732,7 @@ Definición en la línea \hyperlink{map_8h_source_l00907}{907} del archivo \hype
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_a6b21c09f59a83b6ee45432dcfa61f4a1}{}\label{classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_a6b21c09f59a83b6ee45432dcfa61f4a1}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l00912}{912} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01235}{1235} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!operator\mbox{[}$\,$\mbox{]}@{operator[]}}
 \index{operator\mbox{[}$\,$\mbox{]}@{operator[]}!aed2\+::map@{aed2\+::map}}
@@ -738,7 +754,8 @@ d[1] = 2;      \textcolor{comment}{//define 1 -> 2}
 d[1] = 3;      \textcolor{comment}{//redefine 1 -> 3}
 
 \hyperlink{classaed2_1_1map}{aed2::map<int, int>} m;
-\textcolor{keywordflow}{if}(m[1] == 3) \{...\} \textcolor{comment}{//posible bug: define 1 -> basura (que puede o no ser 3).}
+\textcolor{keywordflow}{if}(m[1] == 3) \{...\} \textcolor{comment}{//posible bug: define 1 -> basura (que puede o no ser}
+3).
 \end{DoxyCode}
 
 
@@ -759,10 +776,10 @@ Requiere que Meaning tenga un constructor sin parámetros con complejidad $O$({\
 completar
 \end{DoxyParagraph}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{definido?({\bfseries key},this)\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
-{\bfseries Q} $\equiv$ \{completar\}
+{\bfseries Q} $\equiv$ \{res  obtener({\bfseries key},this)\}
 \end{DoxyPostcond}
 
 \begin{DoxyDescription}
@@ -773,7 +790,7 @@ completar
 \end{DoxyItemize}
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l00950}{950} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01290}{1290} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!find@{find}}
 \index{find@{find}!aed2\+::map@{aed2\+::map}}
@@ -802,10 +819,10 @@ Retorna un iterador apuntando a la posicion del valor con clave {\bfseries key}.
 completar
 \end{DoxyParagraph}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{true\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
-{\bfseries Q} $\equiv$ \{completar\}
+{\bfseries Q} $\equiv$ \{def?(key,this) =$>$ res = iterator(key) else res = nullptr\}
 \end{DoxyPostcond}
 
 \begin{DoxyDescription}
@@ -817,7 +834,7 @@ Si el objetivo es insertar un valor con clave {\bfseries key} de acuerdo a algun
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l00976}{976} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01317}{1317} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!find@{find}}
 \index{find@{find}!aed2\+::map@{aed2\+::map}}
@@ -828,7 +845,7 @@ Definición en la línea \hyperlink{map_8h_source_l00976}{976} del archivo \hype
 ) const\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_ab8f3e41b1a0d7b74645836f8d2e1acfc}{}\label{classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_ab8f3e41b1a0d7b74645836f8d2e1acfc}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l00981}{981} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01336}{1336} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!lower\+\_\+bound@{lower\+\_\+bound}}
 \index{lower\+\_\+bound@{lower\+\_\+bound}!aed2\+::map@{aed2\+::map}}
@@ -841,7 +858,7 @@ Definición en la línea \hyperlink{map_8h_source_l00981}{981} del archivo \hype
 
 Devuelve un iterador al primer valor con clave mayor o igual a {\bfseries key} 
 
-Retorna un iterador apuntando a la primer posición cuyo valor tenga clave al menos {\bfseries key}. Si dicho valor no existe, porque {\bfseries key} es mayor a todas las claves de {\bfseries $\ast$this}, entonces el iterador retornado apunta a la posición {\itshape pasando-\/el-\/último}.
+Retorna un iterador apuntando a la primera posición cuyo valor tenga clave al menos {\bfseries key}. Si dicho valor no existe, porque {\bfseries key} es mayor a todas las claves de {\bfseries $\ast$this}, entonces el iterador retornado apunta a la posición {\itshape pasando-\/el-\/último}.
 
 
 \begin{DoxyParams}{Parámetros}
@@ -867,7 +884,7 @@ completar
 \item[Complejidad Temporal]$O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}))
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01003}{1003} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01376}{1376} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!lower\+\_\+bound@{lower\+\_\+bound}}
 \index{lower\+\_\+bound@{lower\+\_\+bound}!aed2\+::map@{aed2\+::map}}
@@ -878,7 +895,7 @@ Definición en la línea \hyperlink{map_8h_source_l01003}{1003} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_a07b3dd65557c59ee085e5f211269c6b3}{}\label{classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_a07b3dd65557c59ee085e5f211269c6b3}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01008}{1008} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01381}{1381} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!empty@{empty}}
 \index{empty@{empty}!aed2\+::map@{aed2\+::map}}
@@ -907,7 +924,7 @@ Indica si el diccionario esta vacío.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01027}{1027} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01400}{1400} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!size@{size}}
 \index{size@{size}!aed2\+::map@{aed2\+::map}}
@@ -936,7 +953,261 @@ Devuelve la cantidad de valores en el diccionario.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01041}{1041} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01412}{1412} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!add\+Elem@{add\+Elem}}
+\index{add\+Elem@{add\+Elem}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{add\+Elem(\+Node $\ast$\&now, const value\+\_\+type \&value, int dir)}{addElem(Node *&now, const value_type &value, int dir)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ bool {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::add\+Elem (
+\begin{DoxyParamCaption}
+\item[{{\bf Node} $\ast$\&}]{now, }
+\item[{const {\bf value\+\_\+type} \&}]{value, }
+\item[{int}]{dir}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}{}\label{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01456}{1456} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!insertion\+Fix@{insertion\+Fix}}
+\index{insertion\+Fix@{insertion\+Fix}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{insertion\+Fix(\+Node $\ast$new\+Node, const value\+\_\+type \&value)}{insertionFix(Node *newNode, const value_type &value)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ void {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::insertion\+Fix (
+\begin{DoxyParamCaption}
+\item[{{\bf Node} $\ast$}]{new\+Node, }
+\item[{const {\bf value\+\_\+type} \&}]{value}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{}\label{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01469}{1469} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!leftrotate@{leftrotate}}
+\index{leftrotate@{leftrotate}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{leftrotate(\+Node $\ast$p)}{leftrotate(Node *p)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ void {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::leftrotate (
+\begin{DoxyParamCaption}
+\item[{{\bf Node} $\ast$}]{p}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}{}\label{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01519}{1519} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!rightrotate@{rightrotate}}
+\index{rightrotate@{rightrotate}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{rightrotate(\+Node $\ast$p)}{rightrotate(Node *p)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ void {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::rightrotate (
+\begin{DoxyParamCaption}
+\item[{{\bf Node} $\ast$}]{p}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}{}\label{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01548}{1548} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!invalid\+Hint@{invalid\+Hint}}
+\index{invalid\+Hint@{invalid\+Hint}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{invalid\+Hint(const\+\_\+iterator hint, const value\+\_\+type \&value)}{invalidHint(const_iterator hint, const value_type &value)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ bool {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::invalid\+Hint (
+\begin{DoxyParamCaption}
+\item[{{\bf const\+\_\+iterator}}]{hint, }
+\item[{const {\bf value\+\_\+type} \&}]{value}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_a7403745a296985d64b8666c18953b2c0}{}\label{classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_a7403745a296985d64b8666c18953b2c0}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01576}{1576} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!insert@{insert}}
 \index{insert@{insert}!aed2\+::map@{aed2\+::map}}
@@ -987,7 +1258,107 @@ Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{clas
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01077}{1077} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01581}{1581} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!is\+Max\+Or\+Min@{is\+Max\+Or\+Min}}
+\index{is\+Max\+Or\+Min@{is\+Max\+Or\+Min}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{is\+Max\+Or\+Min(const value\+\_\+type \&value)}{isMaxOrMin(const value_type &value)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ bool {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::is\+Max\+Or\+Min (
+\begin{DoxyParamCaption}
+\item[{const {\bf value\+\_\+type} \&}]{value}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}{}\label{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01641}{1641} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!assign\+Max\+Or\+Min@{assign\+Max\+Or\+Min}}
+\index{assign\+Max\+Or\+Min@{assign\+Max\+Or\+Min}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{assign\+Max\+Or\+Min(const value\+\_\+type \&value)}{assignMaxOrMin(const value_type &value)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ void {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::assign\+Max\+Or\+Min (
+\begin{DoxyParamCaption}
+\item[{const {\bf value\+\_\+type} \&}]{value}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_a8b89040f695bb838538e41b050d8e2d2}{}\label{classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_a8b89040f695bb838538e41b050d8e2d2}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01646}{1646} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!insert@{insert}}
 \index{insert@{insert}!aed2\+::map@{aed2\+::map}}
@@ -998,7 +1369,58 @@ Definición en la línea \hyperlink{map_8h_source_l01077}{1077} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}{}\label{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01082}{1082} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01659}{1659} del archivo \hyperlink{map_8h_source}{map.\+h}.
+
+\index{aed2\+::map@{aed2\+::map}!insert\+\_\+or\+\_\+upsert@{insert\+\_\+or\+\_\+upsert}}
+\index{insert\+\_\+or\+\_\+upsert@{insert\+\_\+or\+\_\+upsert}!aed2\+::map@{aed2\+::map}}
+\paragraph[{\texorpdfstring{insert\+\_\+or\+\_\+upsert(const value\+\_\+type \&value, bool upsert)}{insert_or_upsert(const value_type &value, bool upsert)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ {\bf iterator} {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::insert\+\_\+or\+\_\+upsert (
+\begin{DoxyParamCaption}
+\item[{const {\bf value\+\_\+type} \&}]{value, }
+\item[{bool}]{upsert}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}{}\label{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}
+
+
+Inserta {\bfseries value} en el diccionario. 
+
+Inserta un {\bfseries nuevo} valor en el diccionario. Si {\bfseries $\ast$this} ya tiene un valor con clave {\bfseries value}.first, entonces la función no tiene efectos. El iterador de retorno apunta al elemento recien insertado (o aquel que previno la insercion).
+
+
+\begin{DoxyParams}{Parámetros}
+{\em value} & valor a insertar \\
+\hline
+{\em hint} & iterador apuntando al diccionario. Se espera que apunte al minimo valor mayor o igual a {\bfseries value}.first (i.\+e., a lower\+\_\+bound({\bfseries value}.first)). Igualmente, la función es robusta y funciona correctamente aunque esto no ocurra. \\
+\hline
+\end{DoxyParams}
+
+\begin{DoxyRetVals}{Valores devueltos}
+{\em res} & iterador apuntando al elemento insertado o que previno la inserción\\
+\hline
+\end{DoxyRetVals}
+\begin{DoxyParagraph}{Aspectos de aliasing\+:}
+completar
+\end{DoxyParagraph}
+\begin{DoxyPrecond}{Precondición}
+{\bfseries P} $\equiv$ \{completar\} 
+\end{DoxyPrecond}
+\begin{DoxyPostcond}{Postcondición}
+{\bfseries Q} $\equiv$ \{completar\}
+\end{DoxyPostcond}
+
+\begin{DoxyDescription}
+\item[Complejidad Temporal]
+\begin{DoxyItemize}
+\item Peor caso\+: $O$( $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value}))
+\item Si {\bfseries hint} apunta al primer valor con clave al menos {\bfseries value}.first (o {\bfseries this}-\/$>$\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end()} en caso de no existir)\+: $O$({\bfseries cmp}({\bfseries $\ast$this}) $+$ {\bfseries copy}({\bfseries value})) amortizado. 
+\end{DoxyItemize}
+\end{DoxyDescription}
+
+\begin{DoxyAttention}{Atención}
+Para garantizar que el nuevo elemento se inserte sí o sí, usar \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{aed2\+::map\+::insert\+\_\+or\+\_\+assign}. 
+\end{DoxyAttention}
+
+
+Definición en la línea \hyperlink{map_8h_source_l01661}{1661} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!insert\+\_\+or\+\_\+assign@{insert\+\_\+or\+\_\+assign}}
 \index{insert\+\_\+or\+\_\+assign@{insert\+\_\+or\+\_\+assign}!aed2\+::map@{aed2\+::map}}
@@ -1052,7 +1474,7 @@ Esta función es similar al operator\mbox{[}\mbox{]}, pero tiene dos ventajas y
 \end{DoxyRemark}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01115}{1115} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01729}{1729} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!insert\+\_\+or\+\_\+assign@{insert\+\_\+or\+\_\+assign}}
 \index{insert\+\_\+or\+\_\+assign@{insert\+\_\+or\+\_\+assign}!aed2\+::map@{aed2\+::map}}
@@ -1063,7 +1485,7 @@ Definición en la línea \hyperlink{map_8h_source_l01115}{1115} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}{}\label{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01120}{1120} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01737}{1737} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!erase@{erase}}
 \index{erase@{erase}!aed2\+::map@{aed2\+::map}}
@@ -1104,7 +1526,7 @@ completar.
 \end{DoxyItemize}
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01141}{1141} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01759}{1759} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!erase@{erase}}
 \index{erase@{erase}!aed2\+::map@{aed2\+::map}}
@@ -1136,7 +1558,7 @@ completar
 \item[Complejidad Temporal]$O$({\bfseries del}({\bfseries $\ast$pos}) + $\log$({\bfseries size}({\bfseries $\ast$this})) $\cdot$ {\bfseries cmp}({\bfseries $\ast$this}))
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01157}{1157} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01776}{1776} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!clear@{clear}}
 \index{clear@{clear}!aed2\+::map@{aed2\+::map}}
@@ -1163,7 +1585,7 @@ Se invalidan todos los iteradores asociados a {\bfseries $\ast$this}, con excepc
 \item[Complejidad Temporal]$O$({\bfseries del}({\bfseries $\ast$this}))
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01172}{1172} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01792}{1792} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!swap@{swap}}
 \index{swap@{swap}!aed2\+::map@{aed2\+::map}}
@@ -1205,7 +1627,7 @@ La razón por la que se \char`\"{}invalidan\char`\"{} los iteradores pasando-\/e
 \end{DoxyNote}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01199}{1199} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01830}{1830} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!begin@{begin}}
 \index{begin@{begin}!aed2\+::map@{aed2\+::map}}
@@ -1237,7 +1659,7 @@ completar
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01232}{1232} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01865}{1865} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!begin@{begin}}
 \index{begin@{begin}!aed2\+::map@{aed2\+::map}}
@@ -1248,7 +1670,7 @@ Definición en la línea \hyperlink{map_8h_source_l01232}{1232} del archivo \hyp
 ) const\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_a1d10432d305bcb5f1af6ab7b75c27c1c}{}\label{classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_a1d10432d305bcb5f1af6ab7b75c27c1c}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01237}{1237} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01868}{1868} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!cbegin@{cbegin}}
 \index{cbegin@{cbegin}!aed2\+::map@{aed2\+::map}}
@@ -1259,7 +1681,7 @@ Definición en la línea \hyperlink{map_8h_source_l01237}{1237} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_ab96ad892caa28f193481a578f4956a2a}{}\label{classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_ab96ad892caa28f193481a578f4956a2a}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01242}{1242} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01871}{1871} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!end@{end}}
 \index{end@{end}!aed2\+::map@{aed2\+::map}}
@@ -1291,7 +1713,7 @@ completar
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01258}{1258} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01886}{1886} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!end@{end}}
 \index{end@{end}!aed2\+::map@{aed2\+::map}}
@@ -1302,7 +1724,7 @@ Definición en la línea \hyperlink{map_8h_source_l01258}{1258} del archivo \hyp
 ) const\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_a1f847ad4fd46883ac60d764967172179}{}\label{classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_a1f847ad4fd46883ac60d764967172179}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01263}{1263} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01889}{1889} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!cend@{cend}}
 \index{cend@{cend}!aed2\+::map@{aed2\+::map}}
@@ -1313,7 +1735,7 @@ Definición en la línea \hyperlink{map_8h_source_l01263}{1263} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_a7bb91e94cbc875f1a011b142ef877912}{}\label{classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_a7bb91e94cbc875f1a011b142ef877912}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01268}{1268} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01892}{1892} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!rbegin@{rbegin}}
 \index{rbegin@{rbegin}!aed2\+::map@{aed2\+::map}}
@@ -1345,7 +1767,7 @@ completar
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01284}{1284} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01907}{1907} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!rbegin@{rbegin}}
 \index{rbegin@{rbegin}!aed2\+::map@{aed2\+::map}}
@@ -1356,7 +1778,7 @@ Definición en la línea \hyperlink{map_8h_source_l01284}{1284} del archivo \hyp
 ) const\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_aa68b6888ae3e256203d4ef273c293586}{}\label{classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_aa68b6888ae3e256203d4ef273c293586}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01289}{1289} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01910}{1910} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!crbegin@{crbegin}}
 \index{crbegin@{crbegin}!aed2\+::map@{aed2\+::map}}
@@ -1367,7 +1789,7 @@ Definición en la línea \hyperlink{map_8h_source_l01289}{1289} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_a6ad62765a2b2e00247b9e35a7542b448}{}\label{classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_a6ad62765a2b2e00247b9e35a7542b448}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01294}{1294} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01915}{1915} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!rend@{rend}}
 \index{rend@{rend}!aed2\+::map@{aed2\+::map}}
@@ -1399,7 +1821,7 @@ completar
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01310}{1310} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01933}{1933} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!rend@{rend}}
 \index{rend@{rend}!aed2\+::map@{aed2\+::map}}
@@ -1410,7 +1832,7 @@ Definición en la línea \hyperlink{map_8h_source_l01310}{1310} del archivo \hyp
 ) const\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_aafce6e53c53c460897613747fec89f9d}{}\label{classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_aafce6e53c53c460897613747fec89f9d}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01315}{1315} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01936}{1936} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!crend@{crend}}
 \index{crend@{crend}!aed2\+::map@{aed2\+::map}}
@@ -1421,7 +1843,7 @@ Definición en la línea \hyperlink{map_8h_source_l01315}{1315} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_a40933b2efe1cb479de9195ea947244d1}{}\label{classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_a40933b2efe1cb479de9195ea947244d1}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01320}{1320} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01939}{1939} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!root@{root}}
 \index{root@{root}!aed2\+::map@{aed2\+::map}}
@@ -1439,7 +1861,7 @@ Nodo a la raiz del arbol.
 \end{DoxyReturn}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01904}{1904} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02637}{2637} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!root@{root}}
 \index{root@{root}!aed2\+::map@{aed2\+::map}}
@@ -1450,7 +1872,7 @@ Definición en la línea \hyperlink{map_8h_source_l01904}{1904} del archivo \hyp
 ) const\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [private]}}\hypertarget{classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_a89cf44cf0661a97f5dd0985160dcc0e7}{}\label{classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_a89cf44cf0661a97f5dd0985160dcc0e7}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01907}{1907} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02640}{2640} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!eq@{eq}}
 \index{eq@{eq}!aed2\+::map@{aed2\+::map}}
@@ -1476,7 +1898,7 @@ true cuando {\bfseries k1} y {\bfseries k2} son iguales con respecto a {\bfserie
 \end{DoxyReturn}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01920}{1920} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02656}{2656} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -1518,7 +1940,7 @@ K y V tienen operator==; vamos a usar {\bfseries cmp} para describir los costos
 \hline
 \end{DoxyRetVals}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{true\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
 {\bfseries Q} $\equiv$ \{completar\}
@@ -1533,7 +1955,7 @@ Para determinar la igualdad de las claves no se utiliza el functor de comparaci
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01953}{1953} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02692}{2692} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!operator"!=@{operator"!=}}
 \index{operator"!=@{operator"!=}!aed2\+::map@{aed2\+::map}}
@@ -1552,7 +1974,7 @@ aed2\+::operator==()
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01964}{1964} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02704}{2704} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!operator$<$@{operator$<$}}
 \index{operator$<$@{operator$<$}!aed2\+::map@{aed2\+::map}}
@@ -1606,7 +2028,7 @@ Para determinar la comparación de las claves no se utiliza el functor de compar
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01992}{1992} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02735}{2735} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!operator$>$@{operator$>$}}
 \index{operator$>$@{operator$>$}!aed2\+::map@{aed2\+::map}}
@@ -1625,7 +2047,7 @@ aed2\+::operator$<$()
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l02003}{2003} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02746}{2746} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!operator$<$=@{operator$<$=}}
 \index{operator$<$=@{operator$<$=}!aed2\+::map@{aed2\+::map}}
@@ -1644,7 +2066,7 @@ aed2\+::operator$<$()
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l02014}{2014} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02757}{2757} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!operator$>$=@{operator$>$=}}
 \index{operator$>$=@{operator$>$=}!aed2\+::map@{aed2\+::map}}
@@ -1663,7 +2085,7 @@ aed2\+::operator$<$()
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l02025}{2025} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02768}{2768} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!swap@{swap}}
 \index{swap@{swap}!aed2\+::map@{aed2\+::map}}
@@ -1703,7 +2125,7 @@ Implementa la función swap para cumplir con el concepto swappable.
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l02049}{2049} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02792}{2792} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -1717,7 +2139,7 @@ Orden total para comparar claves.
 
 Definición\+: lt(x, y) == true cuando x es menor que y; si lt(x,y) == lt(y,x) == false, entonces x e y son iguales. 
 
-Definición en la línea \hyperlink{map_8h_source_l01888}{1888} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02599}{2599} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!count@{count}}
 \index{count@{count}!aed2\+::map@{aed2\+::map}}
@@ -1728,7 +2150,7 @@ Cantidad de elementos en el diccionario.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01890}{1890} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02601}{2601} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map@{aed2\+::map}!header@{header}}
 \index{header@{header}!aed2\+::map@{aed2\+::map}}
@@ -1739,7 +2161,7 @@ Cabeceera del arbol; ver \hyperlink{Implementacion}{Implementación del árbol r
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01892}{1892} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02603}{2603} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
diff --git a/latex/classaed2_1_1map_1_1const__iterator.tex b/latex/classaed2_1_1map_1_1const__iterator.tex
index e471313..07565ae 100644
--- a/latex/classaed2_1_1map_1_1const__iterator.tex
+++ b/latex/classaed2_1_1map_1_1const__iterator.tex
@@ -54,7 +54,7 @@ Parte del módulo que implementa los iteradores que no permiten la modificación
 
 Este módulo es análogo a \hyperlink{classaed2_1_1map_1_1iterator}{aed2\+::map\+::iterator}, pero no permite la modificación cuando hay aliasing. Sólo se documentan las funcionalidades nuevas. Para las restantes, ver \hyperlink{classaed2_1_1map_1_1iterator}{aed2\+::map\+::iterator}. 
 
-Definición en la línea \hyperlink{map_8h_source_l01596}{1596} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02262}{2262} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -72,7 +72,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_ac
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01607}{1607} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02274}{2274} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!const\+\_\+iterator@{const\+\_\+iterator}}
 \index{const\+\_\+iterator@{const\+\_\+iterator}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -111,7 +111,7 @@ completar
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01625}{1625} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02294}{2294} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!const\+\_\+iterator@{const\+\_\+iterator}}
 \index{const\+\_\+iterator@{const\+\_\+iterator}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -126,7 +126,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_ab
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01663}{1663} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02329}{2329} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -144,7 +144,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_a4
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01629}{1629} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02296}{2296} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator-\/$>$@{operator-\/$>$}}
 \index{operator-\/$>$@{operator-\/$>$}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -159,7 +159,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_a2
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01633}{1633} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02298}{2298} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator++@{operator++}}
 \index{operator++@{operator++}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -174,7 +174,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_a7
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01637}{1637} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02302}{2302} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator++@{operator++}}
 \index{operator++@{operator++}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -189,7 +189,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01641}{1641} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02307}{2307} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator-\/-\/@{operator-\/-\/}}
 \index{operator-\/-\/@{operator-\/-\/}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -204,7 +204,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_ae
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01645}{1645} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02311}{2311} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator-\/-\/@{operator-\/-\/}}
 \index{operator-\/-\/@{operator-\/-\/}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -219,7 +219,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_ad
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01649}{1649} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02315}{2315} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator==@{operator==}}
 \index{operator==@{operator==}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -234,7 +234,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_ad
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01653}{1653} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02319}{2319} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator"!=@{operator"!=}}
 \index{operator"!=@{operator"!=}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -249,7 +249,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_a8
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01657}{1657} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02323}{2323} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}!operator Node $\ast$@{operator Node $\ast$}}
 \index{operator Node $\ast$@{operator Node $\ast$}!aed2\+::map\+::const\+\_\+iterator@{aed2\+::map\+::const\+\_\+iterator}}
@@ -264,7 +264,7 @@ Ver aed2\+::map\+::iterator\+::operator Node$\ast$()
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01665}{1665} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02331}{2331} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -278,7 +278,7 @@ Ver \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_ad
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01667}{1667} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02333}{2333} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
diff --git a/latex/classaed2_1_1map_1_1iterator.tex b/latex/classaed2_1_1map_1_1iterator.tex
index 960407c..ebd59c3 100644
--- a/latex/classaed2_1_1map_1_1iterator.tex
+++ b/latex/classaed2_1_1map_1_1iterator.tex
@@ -34,7 +34,7 @@ using \hyperlink{classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \& \hyperlink{classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_a7c44de7f0508186e135ddbcfe782fec5}{operator++} ()
 \begin{DoxyCompactList}\small\item\em Avanza el iterador a la siguiente posición. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}{operator++} (int)
-\begin{DoxyCompactList}\small\item\em Avanza el iterador a la siguiente posición. \end{DoxyCompactList}\item 
+\begin{DoxyCompactList}\small\item\em Busca el sucesor inorder del nodo al que apunta el iterador. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \& \hyperlink{classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_ae7f70f71545d2a9de17b65edaaec748a}{operator-\/-\/} ()
 \begin{DoxyCompactList}\small\item\em Retrocede el iterador a la posición anterior. \end{DoxyCompactList}\item 
 \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_add45e9ddbb8eeda99326cdb9ac9dd225}{operator-\/-\/} (int)
@@ -109,7 +109,7 @@ En caso de usar los iteradores como punteros, se desaconseja el uso de la posici
 \end{DoxySeeAlso}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01354}{1354} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01985}{1985} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -123,7 +123,7 @@ Categoria del iterador\+: bidireccional. Requerido por estándar C++.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01360}{1360} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01992}{1992} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!value\+\_\+type@{value\+\_\+type}}
 \index{value\+\_\+type@{value\+\_\+type}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -134,7 +134,7 @@ Tipo de los valores recorridos. Requerido por estándar C++.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01362}{1362} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01994}{1994} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!reference@{reference}}
 \index{reference@{reference}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -145,7 +145,7 @@ Tipo de la referencia (resultado de operator$\ast$). Requerido por estándar C++
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01364}{1364} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l01997}{1997} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!pointer@{pointer}}
 \index{pointer@{pointer}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -156,7 +156,7 @@ Tipo del puntero (resultado de operator-\/$>$). Requerido por estándar C++.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01366}{1366} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02000}{2000} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!difference\+\_\+type@{difference\+\_\+type}}
 \index{difference\+\_\+type@{difference\+\_\+type}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -167,7 +167,7 @@ Resultado de la diferencia entre dos punteros. Requerido por estándar C++.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01368}{1368} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02003}{2003} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -213,7 +213,7 @@ El iterador {\bfseries res} no está asociado a ningún diccionario.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01396}{1396} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02035}{2035} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!iterator@{iterator}}
 \index{iterator@{iterator}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -258,7 +258,7 @@ Este constructor permite castear punteros a nodos en iteradores.
 \end{DoxyNote}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01548}{1548} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02206}{2206} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -293,7 +293,7 @@ completar
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01409}{1409} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02048}{2048} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator-\/$>$@{operator-\/$>$}}
 \index{operator-\/$>$@{operator-\/$>$}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -330,7 +330,7 @@ No hay forma de expresar, en el lenguaje de T\+A\+Ds, que un puntero apunta a la
 \end{DoxyAttention}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01427}{1427} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02066}{2066} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator++@{operator++}}
 \index{operator++@{operator++}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -366,7 +366,7 @@ completar
 \end{DoxyItemize}
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01445}{1445} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02083}{2083} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator++@{operator++}}
 \index{operator++@{operator++}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -377,10 +377,12 @@ Definición en la línea \hyperlink{map_8h_source_l01445}{1445} del archivo \hyp
 )\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}{}\label{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}
 
 
-Avanza el iterador a la siguiente posición. 
+Busca el sucesor inorder del nodo al que apunta el iterador. 
 
 
 \begin{DoxyRetVals}{Valores devueltos}
+{\em res} & puntero apuntando a la dirección del sucesor Avanza el iterador a la siguiente posición\\
+\hline
 {\em res} & iterador apuntando a la dirección anterior de {\bfseries $\ast$this}\\
 \hline
 \end{DoxyRetVals}
@@ -402,7 +404,7 @@ completar
 \end{DoxyItemize}
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01463}{1463} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02112}{2112} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator-\/-\/@{operator-\/-\/}}
 \index{operator-\/-\/@{operator-\/-\/}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -424,7 +426,7 @@ Retrocede el iterador a la posición anterior.
 completar
 \end{DoxyParagraph}
 \begin{DoxyPrecond}{Precondición}
-{\bfseries P} $\equiv$ \{completar\} 
+{\bfseries P} $\equiv$ \{Hay\+Anterior?(this)\} 
 \end{DoxyPrecond}
 \begin{DoxyPostcond}{Postcondición}
 {\bfseries Q} $\equiv$ \{completar\}
@@ -438,7 +440,7 @@ completar
 \end{DoxyItemize}
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01481}{1481} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02133}{2133} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator-\/-\/@{operator-\/-\/}}
 \index{operator-\/-\/@{operator-\/-\/}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -474,7 +476,7 @@ completar
 \end{DoxyItemize}
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01499}{1499} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02153}{2153} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator==@{operator==}}
 \index{operator==@{operator==}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -516,7 +518,7 @@ No es necesario que {\bfseries $\ast$this} y {\bfseries other} estén asociados
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01519}{1519} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02176}{2176} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator"!=@{operator"!=}}
 \index{operator"!=@{operator"!=}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -531,7 +533,7 @@ idem !$\vert$operator==
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01523}{1523} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02178}{2178} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::iterator@{aed2\+::map\+::iterator}!operator Node $\ast$@{operator Node $\ast$}}
 \index{operator Node $\ast$@{operator Node $\ast$}!aed2\+::map\+::iterator@{aed2\+::map\+::iterator}}
@@ -556,7 +558,7 @@ Esta función se brinda como ayuda para el TP
 \end{DoxyRemark}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01559}{1559} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02219}{2219} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -570,7 +572,7 @@ Puntero al nodo actual. Ver Estructura de Representación.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01585}{1585} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02248}{2248} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
diff --git a/latex/files.tex b/latex/files.tex
index 6ff786c..76a0fac 100644
--- a/latex/files.tex
+++ b/latex/files.tex
@@ -1,4 +1,5 @@
 \subsection{Lista de archivos}
 Lista de todos los archivos documentados y con descripciones breves\+:\begin{DoxyCompactList}
+\item\contentsline{section}{{\bfseries main.\+cpp} }{\pageref{main_8cpp}}{}
 \item\contentsline{section}{\hyperlink{map_8h}{map.\+h} }{\pageref{map_8h}}{}
 \end{DoxyCompactList}
diff --git a/latex/index.tex b/latex/index.tex
index b5fd378..b0d2bb5 100644
--- a/latex/index.tex
+++ b/latex/index.tex
@@ -1,12 +1,12 @@
 
 \begin{DoxyItemize}
-\item {\bfseries Autores\+:} Nombre y Apellido (mail), Nombre y Apellido (mail), Nombre y Apellido (mail), Nombre y Apellido (mail)
+\item {\bfseries Autores\+:} Oliver Gibson (\href{mailto:gibson31@gmail.com}{\tt gibson31@gmail.\+com}), Catalina Juarros (\href{mailto:catalinajuarros@gmail.com}{\tt catalinajuarros@gmail.\+com}), Miguel Nehmad Alché (\href{mailto:mikealche@gmail.com}{\tt mikealche@gmail.\+com}), Jessica Singer (\href{mailto:singer.jeess@gmail.com}{\tt singer.\+jeess@gmail.\+com})
 \item {\bfseries Materia\+:} Algoritmos y Estructuras de Datos II
 \end{DoxyItemize}
 
 El presente documento describe la implementación de un módulo diccionario dentro del marco de Algoritmos y Estructuras de Datos II. Este módulo corresponde al T\+P2 del primer cuatrimestre del 2017 y su objetivo es servir de referencia para los docentes y de base para el enunciado del TP.
 
-El trabajo práctico consiste en la implementación de un diccionario sobre árboles red-\/black, cuya descripción se puede encontrar en {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]}. La interfaz solicitada corresponde (vagamente) a la provista por C++03, a fin de poder comparar fácilmente los resultados obtenidos con los esperados.
+El trabajo práctico consiste en la implementación de un diccionario sobre árboles red-\/black, cuya descripción se puede encontrar en \cite{CormenLeisersonRivestStein2009}. La interfaz solicitada corresponde (vagamente) a la provista por C++03, a fin de poder comparar fácilmente los resultados obtenidos con los esperados.
 
 \begin{DoxyParagraph}{Índice}
 
diff --git a/latex/main_8cpp_source.tex b/latex/main_8cpp_source.tex
new file mode 100644
index 0000000..bc13c1f
--- /dev/null
+++ b/latex/main_8cpp_source.tex
@@ -0,0 +1,30 @@
+\hypertarget{main_8cpp_source}{}\subsection{main.\+cpp}
+
+\begin{DoxyCode}
+00001 \textcolor{comment}{//}
+00002 \textcolor{comment}{// Created by jscherman on 21/05/17.}
+00003 \textcolor{comment}{//}
+00004 \textcolor{preprocessor}{#include "\hyperlink{map_8h}{map.h}"}
+00005 
+00006 \textcolor{keywordtype}{int} main() \{
+00007     \hyperlink{classaed2_1_1map}{aed2::map<int, int>} *miMap = \textcolor{keyword}{new} \hyperlink{classaed2_1_1map}{aed2::map<int, int>}();
+00008     \textcolor{keyword}{const} std::pair<const int, int> par1 = std::make\_pair(3, 5);
+00009     \textcolor{keyword}{const} std::pair<const int, int> par2 = std::make\_pair(7, 5);
+00010     \textcolor{keyword}{const} std::pair<const int, int> par3 = std::make\_pair(5, 5);
+00011     \textcolor{keyword}{const} std::pair<const int, int> par4 = std::make\_pair(13, 5);
+00012     \textcolor{keyword}{const} std::pair<const int, int> par5 = std::make\_pair(10, 5);
+00013     \textcolor{keyword}{const} std::pair<const int, int> par6 = std::make\_pair(8, 5);
+00014     \textcolor{keyword}{const} std::pair<const int, int> par7 = std::make\_pair(1, 5);
+00015 
+00016     \textcolor{keyword}{const} std::pair<const int, int> par8 = std::make\_pair(10, 234);
+00017     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par1);
+00018     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par2);
+00019     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par3);
+00020     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par4);
+00021     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par5);
+00022     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par6);
+00023     miMap->\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(par7);
+00024     miMap->\hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{insert\_or\_assign}(par8);
+00025     \textcolor{keywordflow}{return} 0;
+00026 \}
+\end{DoxyCode}
diff --git a/latex/map_8h.tex b/latex/map_8h.tex
index a4a3f42..0f24ea5 100644
--- a/latex/map_8h.tex
+++ b/latex/map_8h.tex
@@ -1,10 +1,10 @@
 \hypertarget{map_8h}{}\subsection{Referencia del Archivo map.\+h}
 \label{map_8h}\index{map.\+h@{map.\+h}}
+{\ttfamily \#include $<$algorithm$>$}\\*
+{\ttfamily \#include $<$cassert$>$}\\*
 {\ttfamily \#include $<$functional$>$}\\*
 {\ttfamily \#include $<$iterator$>$}\\*
 {\ttfamily \#include $<$utility$>$}\\*
-{\ttfamily \#include $<$cassert$>$}\\*
-{\ttfamily \#include $<$algorithm$>$}\\*
 \subsubsection*{Clases}
 \begin{DoxyCompactItemize}
 \item 
@@ -30,10 +30,10 @@ Módulo C++ que implementa un diccionario ordenado siguiendo el estilo y la term
 
 Autores\+:
 \begin{DoxyItemize}
-\item Nombre y Apellido (mail)
-\item Nombre y Apellido (mail)
-\item Nombre y Apellido (mail)
-\item Nombre y Apellido (mail)
+\item Oliver Gibson (\href{mailto:gibson31@gmail.com}{\tt gibson31@gmail.\+com})
+\item Catalina Juarros (\href{mailto:catalinajuarros@gmail.com}{\tt catalinajuarros@gmail.\+com})
+\item Miguel Nehmad Alché (\href{mailto:mikealche@gmail.com}{\tt mikealche@gmail.\+com})
+\item Jessica Singer (\href{mailto:singer.jeess@gmail.com}{\tt singer.\+jeess@gmail.\+com})
 \end{DoxyItemize}
 
 Algoritmos y Estructuras de Datos II -- F\+C\+EN -- U\+BA. 
diff --git a/latex/map_8h.tex.tmp b/latex/map_8h.tex.tmp
new file mode 100644
index 0000000..4b17225
--- /dev/null
+++ b/latex/map_8h.tex.tmp
@@ -0,0 +1,37 @@
+\hypertarget{map_8h}{}\section{map.\+h File Reference}
+\label{map_8h}\index{map.\+h@{map.\+h}}
+{\ttfamily \#include $<$algorithm$>$}\\*
+{\ttfamily \#include $<$cassert$>$}\\*
+{\ttfamily \#include $<$functional$>$}\\*
+{\ttfamily \#include $<$iterator$>$}\\*
+{\ttfamily \#include $<$utility$>$}\\*
+Include dependency graph for map.\+h\+:
+% FIG 0
+\subsection*{Classes}
+\begin{DoxyCompactItemize}
+\item 
+class \hyperlink{classaed2_1_1map}{aed2\+::map$<$ Key, Meaning, Compare $>$}
+\begin{DoxyCompactList}\small\item\em Modulo que implementa un diccionario. \end{DoxyCompactList}\item 
+class \hyperlink{classaed2_1_1map_1_1iterator}{aed2\+::map$<$ Key, Meaning, Compare $>$\+::iterator}
+\begin{DoxyCompactList}\small\item\em Parte del módulo que implementa los iteradores que permiten la modificación de los significados. \end{DoxyCompactList}\item 
+class \hyperlink{classaed2_1_1map_1_1const__iterator}{aed2\+::map$<$ Key, Meaning, Compare $>$\+::const\+\_\+iterator}
+\begin{DoxyCompactList}\small\item\em Parte del módulo que implementa los iteradores que no permiten la modificación de los significados. \end{DoxyCompactList}\end{DoxyCompactItemize}
+\subsection*{Namespaces}
+\begin{DoxyCompactItemize}
+\item 
+ \hyperlink{namespaceaed2}{aed2}
+\begin{DoxyCompactList}\small\item\em Namespace para las clases de A\+E\+D2. \end{DoxyCompactList}\end{DoxyCompactItemize}
+
+
+\subsection{Detailed Description}
+Módulo C++ que implementa un diccionario ordenado siguiendo el estilo y la terminología de la biblioteca estándar.
+
+Autores\+:
+\begin{DoxyItemize}
+\item Oliver Gibson (\href{mailto:gibson31@gmail.com}{\tt gibson31@gmail.\+com})
+\item Catalina Juarros (\href{mailto:catalinajuarros@gmail.com}{\tt catalinajuarros@gmail.\+com})
+\item Miguel Nehmad Alché (\href{mailto:mikealche@gmail.com}{\tt mikealche@gmail.\+com})
+\item Jessica Singer (\href{mailto:singer.jeess@gmail.com}{\tt singer.\+jeess@gmail.\+com})
+\end{DoxyItemize}
+
+Algoritmos y Estructuras de Datos II -- F\+C\+EN -- U\+BA. 
\ No newline at end of file
diff --git a/latex/map_8h__incl.dot b/latex/map_8h__incl.dot
new file mode 100644
index 0000000..e1b5528
--- /dev/null
+++ b/latex/map_8h__incl.dot
@@ -0,0 +1,16 @@
+digraph "map.h"
+{
+  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
+  node [fontname="Helvetica",fontsize="10",shape=record];
+  Node1 [label="map.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
+  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
+  Node2 [label="algorithm",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
+  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
+  Node3 [label="cassert",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
+  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
+  Node4 [label="functional",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
+  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
+  Node5 [label="iterator",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
+  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
+  Node6 [label="utility",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
+}
diff --git a/latex/map_8h__incl.md5 b/latex/map_8h__incl.md5
new file mode 100644
index 0000000..5650141
--- /dev/null
+++ b/latex/map_8h__incl.md5
@@ -0,0 +1 @@
+94a546f45aa8df82c23902b74015e72c
\ No newline at end of file
diff --git a/latex/map_8h_source.tex b/latex/map_8h_source.tex
index 5bf3584..7d9a50a 100644
--- a/latex/map_8h_source.tex
+++ b/latex/map_8h_source.tex
@@ -2,441 +2,732 @@
 
 \begin{DoxyCode}
 00001 
-00577 \textcolor{preprocessor}{#ifndef MAP\_H\_}
-00578 \textcolor{preprocessor}{#define MAP\_H\_}
-00579 
-00580 \textcolor{preprocessor}{#include <functional>}
-00581 \textcolor{preprocessor}{#include <iterator>}
-00582 \textcolor{preprocessor}{#include <utility>}
-00583 \textcolor{preprocessor}{#include <cassert>}
-00584 \textcolor{preprocessor}{#include <algorithm>}
-00585 
-00586 \textcolor{preprocessor}{#ifdef DEBUG}
-00587 \textcolor{comment}{//Aca se puede incluir cualquier cosa que consideren que necesitan para debug}
-00588 \textcolor{comment}{//#include <iostream>}
-00589 \textcolor{comment}{//#include <iomanip>}
-00590 \textcolor{preprocessor}{#endif}
-00591 
-\hypertarget{map_8h_source.tex_l00599}{}\hyperlink{namespaceaed2}{00599} \textcolor{keyword}{namespace }\hyperlink{namespaceaed2}{aed2}\{
-00600 
-00669 \textcolor{keyword}{template}<
-00670   \textcolor{keyword}{class }Key,
-00671   \textcolor{keyword}{class }Meaning,
-00672   \textcolor{keyword}{class }Compare = std::less<Key>
-00673 >
-\hypertarget{map_8h_source.tex_l00674}{}\hyperlink{classaed2_1_1map}{00674} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map}{map} \{
-00675     \textcolor{comment}{//forward declarations (innecesario, pero ayuda al analizador semantico de Eclipse)}
-00676     \textcolor{keyword}{class }\hyperlink{structaed2_1_1map_1_1Node}{Node};
-00677     \textcolor{keyword}{class }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode};
-00678 \textcolor{keyword}{public}:
-00679     \textcolor{comment}{//forward declarations}
-00680     \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1iterator}{iterator};
-00681     \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator};
-00682 
-\hypertarget{map_8h_source.tex_l00686}{}\hyperlink{classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d_a4273e8812e7105a618df58a2c8b72b7d}{00686}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d_a4273e8812e7105a618df58a2c8b72b7d}{key\_type} = Key;
-\hypertarget{map_8h_source.tex_l00690}{}\hyperlink{classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40_aa3e34bf624f3009884a71b18f4ddae40}{00690}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40_aa3e34bf624f3009884a71b18f4ddae40}{mapped\_type} = Meaning;
-\hypertarget{map_8h_source.tex_l00694}{}\hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{00694}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type} = std::pair<const Key, Meaning>;
-\hypertarget{map_8h_source.tex_l00698}{}\hyperlink{classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523_a3efa081d3379ab76f33a5ef9fe697523}{00698}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523_a3efa081d3379ab76f33a5ef9fe697523}{key\_compare} = Compare;
-\hypertarget{map_8h_source.tex_l00702}{}\hyperlink{classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_af4f147533b3c0207ab036c86ce13ec0d}{00702}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_af4f147533b3c0207ab036c86ce13ec0d}{reference} = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}&;
-\hypertarget{map_8h_source.tex_l00706}{}\hyperlink{classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_a277080d3db76f19df9319ecba16475a9}{00706}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_a277080d3db76f19df9319ecba16475a9}{const\_reference} = \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}&;
-\hypertarget{map_8h_source.tex_l00710}{}\hyperlink{classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_a7394e98a23b86bc008ad73326b273fd5}{00710}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_a7394e98a23b86bc008ad73326b273fd5}{pointer} = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}*;
-\hypertarget{map_8h_source.tex_l00714}{}\hyperlink{classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_a1366fc3e227a49777cb748fc6d4e022b}{00714}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_a1366fc3e227a49777cb748fc6d4e022b}{const\_pointer} = \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}*;
-\hypertarget{map_8h_source.tex_l00718}{}\hyperlink{classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400_a8cf1c570f605e9c0ad6feb8ce12c9400}{00718}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400_a8cf1c570f605e9c0ad6feb8ce12c9400}{size\_type} = std::size\_t;
-\hypertarget{map_8h_source.tex_l00722}{}\hyperlink{classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d_a2f55b88809000fcbfce1c6cfef1ba74d}{00722}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d_a2f55b88809000fcbfce1c6cfef1ba74d}{difference\_type} = std::ptrdiff\_t;
-00723 
-\hypertarget{map_8h_source.tex_l00734}{}\hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{00734}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator} = std::reverse\_iterator<iterator>;
-\hypertarget{map_8h_source.tex_l00745}{}\hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{00745}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} = std::reverse\_iterator<const\_iterator>;
-00746 
-00748 
-00749 
-\hypertarget{map_8h_source.tex_l00765}{}\hyperlink{classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf_a64da1d965b13eb28cdb3837bc17a18cf}{00765}     \textcolor{keyword}{explicit} \hyperlink{classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf_a64da1d965b13eb28cdb3837bc17a18cf}{map}(Compare c = Compare()) \{
-00766         \textcolor{comment}{//completar}
-00767     \}
-00768 
-\hypertarget{map_8h_source.tex_l00784}{}\hyperlink{classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257_a7a77950a3d8e637bfa7cf5dcd904f257}{00784}     \hyperlink{classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257_a7a77950a3d8e637bfa7cf5dcd904f257}{map}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map}& other) \{
-00785         \textcolor{comment}{//completar}
-00786     \}
-00787 
-00831     \textcolor{keyword}{template}<\textcolor{keyword}{class} iterator>
-\hypertarget{map_8h_source.tex_l00832}{}\hyperlink{classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb_a5d336f3248572beb56be383dcc95cfeb}{00832}     \hyperlink{classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb_a5d336f3248572beb56be383dcc95cfeb}{map}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} first, \hyperlink{classaed2_1_1map_1_1iterator}{iterator} last, Compare c = Compare()) : 
-      \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(c) \{
-00833         \textcolor{keyword}{auto} it = \hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end}();
-00834         \textcolor{keywordflow}{while}(first != last) \{
-00835             \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(*first, it);
-00836             ++first;
-00837         \}
-00838     \}
+00825 \textcolor{preprocessor}{#ifndef MAP\_H\_}
+00826 \textcolor{preprocessor}{#define MAP\_H\_}
+00827 
+00828 \textcolor{preprocessor}{#include <algorithm>}
+00829 \textcolor{preprocessor}{#include <cassert>}
+00830 \textcolor{preprocessor}{#include <functional>}
+00831 \textcolor{preprocessor}{#include <iterator>}
+00832 \textcolor{preprocessor}{#include <utility>}
+00833 
+00834 \textcolor{preprocessor}{#ifdef DEBUG}
+00835 \textcolor{comment}{// Aca se puede incluir cualquier cosa que consideren que necesitan para debug}
+00836 \textcolor{comment}{//#include <iostream>}
+00837 \textcolor{comment}{//#include <iomanip>}
+00838 \textcolor{preprocessor}{#endif}
 00839 
-\hypertarget{map_8h_source.tex_l00855}{}\hyperlink{classaed2_1_1map_ac606d334809066929522964d45e76317_ac606d334809066929522964d45e76317}{00855}     \hyperlink{classaed2_1_1map}{map}& \hyperlink{classaed2_1_1map_ac606d334809066929522964d45e76317_ac606d334809066929522964d45e76317}{operator=}(\hyperlink{classaed2_1_1map}{map} other) \{
-00856         \textcolor{comment}{//completar}
-00857     \}
-00858 
-\hypertarget{map_8h_source.tex_l00880}{}\hyperlink{classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6_ab22c9a85c2dadbc286cd30e97069a8e6}{00880}     \hyperlink{classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6_ab22c9a85c2dadbc286cd30e97069a8e6}{~map}() \{
-00881         \textcolor{comment}{//completar}
-00882     \}
-00884 
-00886 
-00887 
-\hypertarget{map_8h_source.tex_l00907}{}\hyperlink{classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_a0b0a11f906da2926f9eb342fcee79fd7}{00907}     \textcolor{keyword}{const} Meaning& \hyperlink{classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_a0b0a11f906da2926f9eb342fcee79fd7}{at}(\textcolor{keyword}{const} Key& key)\textcolor{keyword}{ const }\{
-00908         \textcolor{comment}{//completar}
-00909     \}
-00910 
-\hypertarget{map_8h_source.tex_l00912}{}\hyperlink{classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_a6b21c09f59a83b6ee45432dcfa61f4a1}{00912}     Meaning& \hyperlink{classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_a6b21c09f59a83b6ee45432dcfa61f4a1}{at}(\textcolor{keyword}{const} Key& key) \{
-00913         \textcolor{comment}{//completar}
-00914     \}
-00915 
-\hypertarget{map_8h_source.tex_l00950}{}\hyperlink{classaed2_1_1map_a96f23896164ab47bee48c26b803f9801_a96f23896164ab47bee48c26b803f9801}{00950}     Meaning& \hyperlink{classaed2_1_1map_a96f23896164ab47bee48c26b803f9801_a96f23896164ab47bee48c26b803f9801}{operator[]}(\textcolor{keyword}{const} Key& key) \{
-00951         \textcolor{comment}{//completar}
-00952     \}
-00953 
-\hypertarget{map_8h_source.tex_l00976}{}\hyperlink{classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_afd0fc1a8234888e61e0e615de7e245b8}{00976}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_afd0fc1a8234888e61e0e615de7e245b8}{find}(\textcolor{keyword}{const} Key& key) \{
-00977         \textcolor{comment}{//completar}
-00978     \}
-00979 
-\hypertarget{map_8h_source.tex_l00981}{}\hyperlink{classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_ab8f3e41b1a0d7b74645836f8d2e1acfc}{00981}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_ab8f3e41b1a0d7b74645836f8d2e1acfc}{find}(\textcolor{keyword}{const} Key& key)\textcolor{keyword}{ const }\{
-00982         \textcolor{comment}{//completar}
-00983     \}
-00984 
-\hypertarget{map_8h_source.tex_l01003}{}\hyperlink{classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f_a3399d36fdd5a880b494f3a5795d3f18f}{01003}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f_a3399d36fdd5a880b494f3a5795d3f18f}{lower\_bound}(\textcolor{keyword}{const} Key& key)\textcolor{keyword}{ const }\{
-01004         \textcolor{comment}{//completar}
-01005     \}
-01006 
-\hypertarget{map_8h_source.tex_l01008}{}\hyperlink{classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_a07b3dd65557c59ee085e5f211269c6b3}{01008}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_a07b3dd65557c59ee085e5f211269c6b3}{lower\_bound}(\textcolor{keyword}{const} Key& key)  \{
-01009         \textcolor{comment}{//completar}
-01010     \}
-01012 
-01014 
-01015 
-\hypertarget{map_8h_source.tex_l01027}{}\hyperlink{classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee_af5320ca0a7df4d16015441d5d055a7ee}{01027}     \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee_af5320ca0a7df4d16015441d5d055a7ee}{empty}()\textcolor{keyword}{ const }\{
-01028         \textcolor{comment}{//completar}
-01029     \}
-01030 
-\hypertarget{map_8h_source.tex_l01041}{}\hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{01041}     \textcolor{keywordtype}{size\_t} \hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{size}()\textcolor{keyword}{ const }\{
-01042         \textcolor{comment}{//completar}
-01043     \}
-01045 
-01047 
-01048 
-01050 
-\hypertarget{map_8h_source.tex_l01077}{}\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{01077}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} hint, \textcolor{keyword}{const} 
+\hypertarget{map_8h_source.tex_l00849}{}\hyperlink{namespaceaed2}{00849} \textcolor{keyword}{namespace }\hyperlink{namespaceaed2}{aed2} \{
+00850 
+00938 \textcolor{keyword}{template} <\textcolor{keyword}{class} Key, \textcolor{keyword}{class} Meaning, \textcolor{keyword}{class} Compare = std::less<Key> >
+\hypertarget{map_8h_source.tex_l00939}{}\hyperlink{classaed2_1_1map}{00939} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map}{map} \{
+00940   \textcolor{comment}{// forward declarations (innecesario, pero ayuda al analizador semantico de}
+00941   \textcolor{comment}{// Eclipse)}
+00942   \textcolor{keyword}{class }\hyperlink{structaed2_1_1map_1_1Node}{Node};
+00943   \textcolor{keyword}{class }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode};
+00944 
+00945  \textcolor{keyword}{public}:
+00946   \textcolor{comment}{// forward declarations}
+00947   \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1iterator}{iterator};
+00948   \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator};
+00949 
+\hypertarget{map_8h_source.tex_l00954}{}\hyperlink{classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d_a4273e8812e7105a618df58a2c8b72b7d}{00954}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a4273e8812e7105a618df58a2c8b72b7d_a4273e8812e7105a618df58a2c8b72b7d}{key\_type} = Key;
+\hypertarget{map_8h_source.tex_l00959}{}\hyperlink{classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40_aa3e34bf624f3009884a71b18f4ddae40}{00959}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_aa3e34bf624f3009884a71b18f4ddae40_aa3e34bf624f3009884a71b18f4ddae40}{mapped\_type} = Meaning;
+\hypertarget{map_8h_source.tex_l00964}{}\hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{00964}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type} = std::pair<const Key, Meaning>;
+\hypertarget{map_8h_source.tex_l00969}{}\hyperlink{classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523_a3efa081d3379ab76f33a5ef9fe697523}{00969}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a3efa081d3379ab76f33a5ef9fe697523_a3efa081d3379ab76f33a5ef9fe697523}{key\_compare} = Compare;
+\hypertarget{map_8h_source.tex_l00974}{}\hyperlink{classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_af4f147533b3c0207ab036c86ce13ec0d}{00974}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_af4f147533b3c0207ab036c86ce13ec0d}{reference} = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}&;
+\hypertarget{map_8h_source.tex_l00979}{}\hyperlink{classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_a277080d3db76f19df9319ecba16475a9}{00979}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_a277080d3db76f19df9319ecba16475a9}{const\_reference} = \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}&;
+\hypertarget{map_8h_source.tex_l00984}{}\hyperlink{classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_a7394e98a23b86bc008ad73326b273fd5}{00984}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_a7394e98a23b86bc008ad73326b273fd5}{pointer} = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}*;
+\hypertarget{map_8h_source.tex_l00989}{}\hyperlink{classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_a1366fc3e227a49777cb748fc6d4e022b}{00989}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_a1366fc3e227a49777cb748fc6d4e022b}{const\_pointer} = \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}*;
+\hypertarget{map_8h_source.tex_l00994}{}\hyperlink{classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400_a8cf1c570f605e9c0ad6feb8ce12c9400}{00994}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a8cf1c570f605e9c0ad6feb8ce12c9400_a8cf1c570f605e9c0ad6feb8ce12c9400}{size\_type} = std::size\_t;
+\hypertarget{map_8h_source.tex_l00999}{}\hyperlink{classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d_a2f55b88809000fcbfce1c6cfef1ba74d}{00999}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a2f55b88809000fcbfce1c6cfef1ba74d_a2f55b88809000fcbfce1c6cfef1ba74d}{difference\_type} = std::ptrdiff\_t;
+01000 
+\hypertarget{map_8h_source.tex_l01016}{}\hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{01016}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator} = std::reverse\_iterator<iterator>;
+\hypertarget{map_8h_source.tex_l01032}{}\hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{01032}   \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} = std::reverse\_iterator<const\_iterator>;
+01033 
+01035 
+01036 
+\hypertarget{map_8h_source.tex_l01053}{}\hyperlink{classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf_a64da1d965b13eb28cdb3837bc17a18cf}{01053}   \textcolor{keyword}{explicit} \hyperlink{classaed2_1_1map_a64da1d965b13eb28cdb3837bc17a18cf_a64da1d965b13eb28cdb3837bc17a18cf}{map}(Compare c = Compare()) \{
+01054     \textcolor{comment}{// header = Node();}
+01055     \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt} = c;
+01056   \}
+01057 
+\hypertarget{map_8h_source.tex_l01074}{}\hyperlink{classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257_a7a77950a3d8e637bfa7cf5dcd904f257}{01074}   \hyperlink{classaed2_1_1map_a7a77950a3d8e637bfa7cf5dcd904f257_a7a77950a3d8e637bfa7cf5dcd904f257}{map}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map}& other) \{ *\textcolor{keyword}{this} = other; \}
+01075 
+01132   \textcolor{keyword}{template} <\textcolor{keyword}{class} iterator>
+\hypertarget{map_8h_source.tex_l01133}{}\hyperlink{classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb_a5d336f3248572beb56be383dcc95cfeb}{01133}   \hyperlink{classaed2_1_1map_a5d336f3248572beb56be383dcc95cfeb_a5d336f3248572beb56be383dcc95cfeb}{map}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} first, \hyperlink{classaed2_1_1map_1_1iterator}{iterator} last, Compare c = Compare()) : 
+      \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(c) \{
+01134     \textcolor{keyword}{auto} it = \hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end}();
+01135     \textcolor{keywordflow}{while} (first != last) \{
+01136       \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(*first, it);
+01137       ++first;
+01138     \}
+01139   \}
+01140 
+\hypertarget{map_8h_source.tex_l01157}{}\hyperlink{classaed2_1_1map_ac606d334809066929522964d45e76317_ac606d334809066929522964d45e76317}{01157}   \hyperlink{classaed2_1_1map}{map}& \hyperlink{classaed2_1_1map_ac606d334809066929522964d45e76317_ac606d334809066929522964d45e76317}{operator=}(\hyperlink{classaed2_1_1map}{map} other) \{
+01158     \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(other);
+01159     \textcolor{keywordflow}{return} *\textcolor{keyword}{this};
+01160   \}
+01161 
+\hypertarget{map_8h_source.tex_l01189}{}\hyperlink{classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6_ab22c9a85c2dadbc286cd30e97069a8e6}{01189}   \hyperlink{classaed2_1_1map_ab22c9a85c2dadbc286cd30e97069a8e6_ab22c9a85c2dadbc286cd30e97069a8e6}{~map}() \{
+01190     \textcolor{comment}{// completar}
+01191   \}
+01193 
+01195 
+01196 
+\hypertarget{map_8h_source.tex_l01218}{}\hyperlink{classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_a0b0a11f906da2926f9eb342fcee79fd7}{01218}   \textcolor{keyword}{const} Meaning& \hyperlink{classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_a0b0a11f906da2926f9eb342fcee79fd7}{at}(\textcolor{keyword}{const} Key& key)\textcolor{keyword}{ const }\{
+01219     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} it = \hyperlink{classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_afd0fc1a8234888e61e0e615de7e245b8}{find}(key);
+01220     \textcolor{keywordflow}{if} (it.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n} != \textcolor{keyword}{nullptr}) \{
+01221       \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(it.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n})->\_value.first;
+01222     \}
+01223     \textcolor{comment}{// const InnerNode* actual = root();}
+01224     \textcolor{comment}{// while (actual->\_value.first != key) \{}
+01225     \textcolor{comment}{//   if (lt(key, actual->\_value.first)) \{}
+01226     \textcolor{comment}{//     actual = static\_cast<InnerNode*>(actual->child[0]);}
+01227     \textcolor{comment}{//   \} else \{}
+01228     \textcolor{comment}{//     actual = static\_cast<InnerNode*>(actual->child[1]);}
+01229     \textcolor{comment}{//   \}}
+01230     \textcolor{comment}{// \}}
+01231     \textcolor{comment}{// return actual->\_value.second;}
+01232   \}
+01233 
+\hypertarget{map_8h_source.tex_l01235}{}\hyperlink{classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_a6b21c09f59a83b6ee45432dcfa61f4a1}{01235}   Meaning& \hyperlink{classaed2_1_1map_a6b21c09f59a83b6ee45432dcfa61f4a1_a6b21c09f59a83b6ee45432dcfa61f4a1}{at}(\textcolor{keyword}{const} Key& key) \{
+01236     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} it = \hyperlink{classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_afd0fc1a8234888e61e0e615de7e245b8}{find}(key);
+01237     \textcolor{keywordflow}{if} (it.\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n} != \textcolor{keyword}{nullptr}) \{
+01238       \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(it.\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n})->\_value.first;
+01239     \}
+01240     \textcolor{comment}{// InnerNode* actual = root();}
+01241     \textcolor{comment}{// while (actual->\_value.first != key) \{}
+01242     \textcolor{comment}{//   if (lt(key, actual->\_value.first)) \{}
+01243     \textcolor{comment}{//     actual = static\_cast<InnerNode*>(actual->child[0]);}
+01244     \textcolor{comment}{//   \} else \{}
+01245     \textcolor{comment}{//     actual = static\_cast<InnerNode*>(actual->child[1]);}
+01246     \textcolor{comment}{//   \}}
+01247     \textcolor{comment}{// \}}
+01248     \textcolor{comment}{// return actual->\_value.second;}
+01249   \}
+01250 
+\hypertarget{map_8h_source.tex_l01290}{}\hyperlink{classaed2_1_1map_a96f23896164ab47bee48c26b803f9801_a96f23896164ab47bee48c26b803f9801}{01290}   Meaning& \hyperlink{classaed2_1_1map_a96f23896164ab47bee48c26b803f9801_a96f23896164ab47bee48c26b803f9801}{operator[]}(\textcolor{keyword}{const} Key& key) \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a0b0a11f906da2926f9eb342fcee79fd7_a0b0a11f906da2926f9eb342fcee79fd7}{at}(key); \}
+01291 
+\hypertarget{map_8h_source.tex_l01317}{}\hyperlink{classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_afd0fc1a8234888e61e0e615de7e245b8}{01317}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_afd0fc1a8234888e61e0e615de7e245b8_afd0fc1a8234888e61e0e615de7e245b8}{find}(\textcolor{keyword}{const} Key& key) \{
+01318     \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr}) \{
+01319       \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator}{iterator}(\textcolor{keyword}{nullptr});
+01320     \} \textcolor{keywordflow}{else} \{
+01321       \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}* now = \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}();
+01322       \textcolor{keywordflow}{while} (now != \textcolor{keyword}{nullptr}) \{
+01323         \textcolor{keywordflow}{if} (now->\hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{\_value}.first == key) \{
+01324           \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator}{iterator}(now);
+01325         \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(key, now->\hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{\_value}.first)) \{
+01326           now = \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]);
+01327         \} \textcolor{keywordflow}{else} \{
+01328           now = \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
+01329         \}
+01330       \}
+01331       \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator}{iterator}(\textcolor{keyword}{nullptr});
+01332     \}
+01333   \}
+01334 
+\hypertarget{map_8h_source.tex_l01336}{}\hyperlink{classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_ab8f3e41b1a0d7b74645836f8d2e1acfc}{01336}   \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_ab8f3e41b1a0d7b74645836f8d2e1acfc_ab8f3e41b1a0d7b74645836f8d2e1acfc}{find}(\textcolor{keyword}{const} Key& key)\textcolor{keyword}{ const }\{
+01337     \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr}) \{
+01338       \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(\textcolor{keyword}{nullptr});
+01339     \} \textcolor{keywordflow}{else} \{
+01340       \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}* now = \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}();
+01341       \textcolor{keywordflow}{while} (now != \textcolor{keyword}{nullptr}) \{
+01342         \textcolor{keywordflow}{if} (now->\hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{\_value}.first == key) \{
+01343           \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(now);
+01344         \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(key, now->\hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{\_value}.first)) \{
+01345           now = \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]);
+01346         \} \textcolor{keywordflow}{else} \{
+01347           now = \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
+01348         \}
+01349       \}
+01350       \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(\textcolor{keyword}{nullptr});
+01351     \}
+01352   \}
+01353 
+\hypertarget{map_8h_source.tex_l01376}{}\hyperlink{classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f_a3399d36fdd5a880b494f3a5795d3f18f}{01376}   \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a3399d36fdd5a880b494f3a5795d3f18f_a3399d36fdd5a880b494f3a5795d3f18f}{lower\_bound}(\textcolor{keyword}{const} Key& key)\textcolor{keyword}{ const }\{
+01377     \textcolor{comment}{// completar}
+01378   \}
+01379 
+\hypertarget{map_8h_source.tex_l01381}{}\hyperlink{classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_a07b3dd65557c59ee085e5f211269c6b3}{01381}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a07b3dd65557c59ee085e5f211269c6b3_a07b3dd65557c59ee085e5f211269c6b3}{lower\_bound}(\textcolor{keyword}{const} Key& key) \{
+01382     \textcolor{comment}{// completar}
+01383   \}
+01385 
+01387 
+01388 
+\hypertarget{map_8h_source.tex_l01400}{}\hyperlink{classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee_af5320ca0a7df4d16015441d5d055a7ee}{01400}   \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_af5320ca0a7df4d16015441d5d055a7ee_af5320ca0a7df4d16015441d5d055a7ee}{empty}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count} == 0; \}
+01401 
+\hypertarget{map_8h_source.tex_l01412}{}\hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{01412}   \textcolor{keywordtype}{size\_t} \hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{size}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}; \}
+01414 
+01416 
+01417 
+01419 
+01454   \textcolor{comment}{// esta funcion es para generalizar agregar un elemento yendo por derecha y}
+01455   \textcolor{comment}{// por izquierda}
+\hypertarget{map_8h_source.tex_l01456}{}\hyperlink{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}{01456}   \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}{addElem}(\hyperlink{structaed2_1_1map_1_1Node}{Node}*& now, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value, \textcolor{keywordtype}{int} dir) \{
+01457     \textcolor{keywordflow}{if} (now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir] != \textcolor{keyword}{nullptr}) \{
+01458       now = now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir];  \textcolor{comment}{// si no es null, sigo bajando}
+01459       \textcolor{keywordflow}{return} \textcolor{keyword}{false};
+01460     \} \textcolor{keywordflow}{else} \{
+01461       now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir] = \textcolor{keyword}{new} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(now, value);
+01462       \textcolor{comment}{// static\_cast<InnerNode*>(now->child[side])->\_value = value;//le asigno}
+01463       \textcolor{comment}{// el valor al nuevo nodo}
+01464       \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(now->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir], value);
+01465       \textcolor{keywordflow}{return} \textcolor{keyword}{true};
+01466     \}
+01467   \}
+01468 
+\hypertarget{map_8h_source.tex_l01469}{}\hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{01469}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(\hyperlink{structaed2_1_1map_1_1Node}{Node}* newNode, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
+01470     \hyperlink{structaed2_1_1map_1_1Node}{Node}* aux;
+01471     \textcolor{keywordflow}{if} (static\_cast<InnerNode*>(this->\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}())->value() == value) \{
+01472       \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(this->\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}())->color = Color::Black;
+01473       \textcolor{keywordflow}{return};
+01474     \}
+01475     \textcolor{keywordflow}{while} (!(newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{is\_header}()) &&
+01476            (newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} == Color::Red)) \{
+01477       \hyperlink{structaed2_1_1map_1_1Node}{Node}* grandPa = newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01478       \textcolor{keywordflow}{if} (grandPa->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] == newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}) \{
+01479         \textcolor{keywordflow}{if} (grandPa->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] != \textcolor{keyword}{nullptr}) \{
+01480           aux = grandPa->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1];
+01481           \textcolor{keywordflow}{if} (aux->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} == Color::Red) \{
+01482             newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01483             aux->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01484             grandPa->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Red;
+01485             newNode = grandPa;
+01486           \}
+01487         \} \textcolor{keywordflow}{else} \{
+01488           \textcolor{keywordflow}{if} (newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] == newNode) \{
+01489             newNode = newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01490             \hyperlink{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}{leftrotate}(newNode);
+01491           \}
+01492           newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01493           grandPa->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Red;
+01494           \hyperlink{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}{rightrotate}(grandPa);
+01495         \}
+01496       \} \textcolor{keywordflow}{else} \{
+01497         \textcolor{keywordflow}{if} (grandPa->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] != \textcolor{keyword}{nullptr}) \{
+01498           aux = grandPa->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0];
+01499           \textcolor{keywordflow}{if} (aux->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} == Color::Red) \{
+01500             newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01501             aux->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01502             grandPa->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Red;
+01503             newNode = grandPa;
+01504           \}
+01505         \} \textcolor{keywordflow}{else} \{
+01506           \textcolor{keywordflow}{if} (newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] == newNode) \{
+01507             newNode = newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01508             \hyperlink{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}{rightrotate}(newNode);
+01509           \}
+01510           newNode->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01511           grandPa->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Red;
+01512           \hyperlink{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}{leftrotate}(grandPa);
+01513         \}
+01514       \}
+01515       \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}()->\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{color} = Color::Black;
+01516     \}
+01517   \}
+01518 
+\hypertarget{map_8h_source.tex_l01519}{}\hyperlink{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}{01519}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_ad764851f1534f2db0964c4f729056a1e_ad764851f1534f2db0964c4f729056a1e}{leftrotate}(\hyperlink{structaed2_1_1map_1_1Node}{Node}* p) \{
+01520     \textcolor{keywordflow}{if} (p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] == \textcolor{keyword}{nullptr})
+01521       \textcolor{keywordflow}{return};
+01522     \textcolor{keywordflow}{else} \{
+01523       \hyperlink{structaed2_1_1map_1_1Node}{Node}* y = p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1];
+01524 
+01525       \textcolor{keywordflow}{if} (y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] != \textcolor{keyword}{nullptr}) \{
+01526         p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0];
+01527         y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = p;
+01528       \} \textcolor{keywordflow}{else} \{
+01529         p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = \textcolor{keyword}{nullptr};
+01530       \}
+01531 
+01532       \textcolor{keywordflow}{if} (p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} != \textcolor{keyword}{nullptr}) y->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01533       \textcolor{keywordflow}{if} (p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{is\_header}()) \{
+01534         this->\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = y;
+01535         \textcolor{comment}{// header.parent = y;}
+01536         y->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = &\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+01537       \} \textcolor{keywordflow}{else} \{
+01538         \textcolor{keywordflow}{if} (p == p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0])
+01539           p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = y;
+01540         \textcolor{keywordflow}{else}
+01541           p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = y;
+01542       \}
+01543       y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = p;
+01544       p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = y;
+01545     \}
+01546   \}
+01547 
+\hypertarget{map_8h_source.tex_l01548}{}\hyperlink{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}{01548}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a816d69fa4dfe18a984dc3628fee14e2f_a816d69fa4dfe18a984dc3628fee14e2f}{rightrotate}(\hyperlink{structaed2_1_1map_1_1Node}{Node}* p) \{
+01549     \textcolor{keywordflow}{if} (p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] == \textcolor{keyword}{nullptr})
+01550       \textcolor{keywordflow}{return};
+01551     \textcolor{keywordflow}{else} \{
+01552       \hyperlink{structaed2_1_1map_1_1Node}{Node}* y = p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0];
+01553 
+01554       \textcolor{keywordflow}{if} (y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] != \textcolor{keyword}{nullptr}) \{
+01555         p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1];
+01556         y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = p;
+01557       \} \textcolor{keywordflow}{else} \{
+01558         p->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = \textcolor{keyword}{nullptr};
+01559       \}
+01560 
+01561       \textcolor{keywordflow}{if} (p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} != \textcolor{keyword}{nullptr}) y->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01562       \textcolor{keywordflow}{if} (p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{is\_header}()) \{
+01563         this->\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = y;
+01564         \textcolor{comment}{//  header.parent = y;}
+01565         y->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = &\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+01566       \} \textcolor{keywordflow}{else} \{
+01567         \textcolor{keywordflow}{if} (p == p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0])
+01568           p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = y;
+01569         \textcolor{keywordflow}{else}
+01570           p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = y;
+01571       \}
+01572       y->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = p;
+01573       p->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = y;
+01574     \}
+01575   \}
+\hypertarget{map_8h_source.tex_l01576}{}\hyperlink{classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_a7403745a296985d64b8666c18953b2c0}{01576}   \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_a7403745a296985d64b8666c18953b2c0}{invalidHint}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} hint, \textcolor{keyword}{const} 
       \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
-01078         \textcolor{comment}{//completar}
-01079     \}
-01080 
-\hypertarget{map_8h_source.tex_l01082}{}\hyperlink{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}{01082}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}{insert}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
-01083         \textcolor{comment}{//completar}
-01084     \}
-01085 
-\hypertarget{map_8h_source.tex_l01115}{}\hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{01115}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{insert\_or\_assign}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} hint, \textcolor{keyword}{const} 
+01577     \textcolor{keywordflow}{return} (hint == \textcolor{keyword}{nullptr} || \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}((*hint).first, value.first) ||
+01578             \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(value.first,
+01579                prevInorder(static\_cast<InnerNode*>(hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n}))->\hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{value}().first));
+01580   \}
+\hypertarget{map_8h_source.tex_l01581}{}\hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{01581}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} hint, \textcolor{keyword}{const} 
       \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
-01116         \textcolor{comment}{//completar}
-01117     \}
-01118 
-\hypertarget{map_8h_source.tex_l01120}{}\hyperlink{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}{01120}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}{insert\_or\_assign}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
-01121         \textcolor{comment}{//completar}
-01122     \}
-01123 
-\hypertarget{map_8h_source.tex_l01141}{}\hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{01141}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{erase}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} pos) \{
-01142         \textcolor{comment}{//completar}
-01143     \}
-01144 
-\hypertarget{map_8h_source.tex_l01157}{}\hyperlink{classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334_a2ffadb42cd5f0bc7b3752ff159b75334}{01157}     \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334_a2ffadb42cd5f0bc7b3752ff159b75334}{erase}(\textcolor{keyword}{const} Key& key) \{
-01158         \textcolor{comment}{//completar}
-01159     \}
-01160 
-\hypertarget{map_8h_source.tex_l01172}{}\hyperlink{classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca_a2bfa5165825979bf2431db55bc6bc9ca}{01172}     \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca_a2bfa5165825979bf2431db55bc6bc9ca}{clear}() \{
-01173         \textcolor{comment}{//completar}
-01174     \}
-01175 
-\hypertarget{map_8h_source.tex_l01199}{}\hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{01199}     \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map}{map}& other) \{
-01200         \textcolor{keyword}{using} std::swap;
-01201         \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}, other.\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt});
-01202         \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}, other.\hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count});
-01203 
-01204         \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}, other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent});
-01205         \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0], other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]);
-01206         \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1], other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
-01207         \textcolor{keywordflow}{if}(\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() != \textcolor{keyword}{nullptr}) \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}()->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = &\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
-01208         \textcolor{keywordflow}{if}(other.\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() != \textcolor{keyword}{nullptr}) other.\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}()->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = &other.
-      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
-01209 
-01210         \textcolor{comment}{//nota: cuando el arbol es vacio, los child de header apuntan a header.  Notar que quedan apuntando
-       mal despues del swap}
-01211         \textcolor{keywordflow}{if}(\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr}) \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.
-      \hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = &\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
-01212         \textcolor{keywordflow}{if}(other.\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr}) other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = other.
-      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = &other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
-01213     \}
-01215 
-01217 
-01218 
-01220 
-\hypertarget{map_8h_source.tex_l01232}{}\hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{01232}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{begin}() \{
-01233         \textcolor{comment}{//completar}
-01234     \}
-01235 
-\hypertarget{map_8h_source.tex_l01237}{}\hyperlink{classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_a1d10432d305bcb5f1af6ab7b75c27c1c}{01237}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_a1d10432d305bcb5f1af6ab7b75c27c1c}{begin}()\textcolor{keyword}{ const }\{
-01238         \textcolor{comment}{//completar}
-01239     \}
-01240 
-\hypertarget{map_8h_source.tex_l01242}{}\hyperlink{classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_ab96ad892caa28f193481a578f4956a2a}{01242}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_ab96ad892caa28f193481a578f4956a2a}{cbegin}() \{
-01243         \textcolor{comment}{//completar}
-01244     \}
-01245 
-\hypertarget{map_8h_source.tex_l01258}{}\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{01258}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end}() \{
-01259         \textcolor{comment}{//completar}
-01260     \}
-01261 
-\hypertarget{map_8h_source.tex_l01263}{}\hyperlink{classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_a1f847ad4fd46883ac60d764967172179}{01263}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_a1f847ad4fd46883ac60d764967172179}{end}()\textcolor{keyword}{ const }\{
-01264         \textcolor{comment}{//completar}
-01265     \}
-01266 
-\hypertarget{map_8h_source.tex_l01268}{}\hyperlink{classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_a7bb91e94cbc875f1a011b142ef877912}{01268}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_a7bb91e94cbc875f1a011b142ef877912}{cend}() \{
-01269         \textcolor{comment}{//completar}
-01270     \}
-01271 
-\hypertarget{map_8h_source.tex_l01284}{}\hyperlink{classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d_ac412d3902112122c1bffe2d4283a4e9d}{01284}     \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator} \hyperlink{classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d_ac412d3902112122c1bffe2d4283a4e9d}{rbegin}() \{
-01285         \textcolor{comment}{//completar}
-01286     \}
-01287 
-\hypertarget{map_8h_source.tex_l01289}{}\hyperlink{classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_aa68b6888ae3e256203d4ef273c293586}{01289}     \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_aa68b6888ae3e256203d4ef273c293586}{rbegin}()\textcolor{keyword}{ const }\{
-01290         \textcolor{comment}{//completar}
-01291     \}
-01292 
-\hypertarget{map_8h_source.tex_l01294}{}\hyperlink{classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_a6ad62765a2b2e00247b9e35a7542b448}{01294}     \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_a6ad62765a2b2e00247b9e35a7542b448}{crbegin}() \{
-01295         \textcolor{comment}{//completar}
-01296     \}
-01297 
-\hypertarget{map_8h_source.tex_l01310}{}\hyperlink{classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f_a277f03b4f4b6b98879e4e4921081801f}{01310}     \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator} \hyperlink{classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f_a277f03b4f4b6b98879e4e4921081801f}{rend}() \{
-01311         \textcolor{comment}{//completar}
-01312     \}
-01313 
-\hypertarget{map_8h_source.tex_l01315}{}\hyperlink{classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_aafce6e53c53c460897613747fec89f9d}{01315}     \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_aafce6e53c53c460897613747fec89f9d}{rend}()\textcolor{keyword}{ const }\{
-01316         \textcolor{comment}{//completar}
-01317     \}
-01318 
-\hypertarget{map_8h_source.tex_l01320}{}\hyperlink{classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_a40933b2efe1cb479de9195ea947244d1}{01320}     \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_a40933b2efe1cb479de9195ea947244d1}{crend}() \{
-01321         \textcolor{comment}{//completar}
-01322     \}
-01324 
-\hypertarget{map_8h_source.tex_l01354}{}\hyperlink{classaed2_1_1map_1_1iterator}{01354}     \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1iterator}{iterator} \{
-01355         \textcolor{keyword}{using} Node = \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1Node}{map::Node};
-01356         \textcolor{keyword}{using} InnerNode = \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1InnerNode}{map::InnerNode};
-01357     \textcolor{keyword}{public}:
-01358 
-\hypertarget{map_8h_source.tex_l01360}{}\hyperlink{classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b_a709df3d8aef6fd1eeb839616b554ff0b}{01360}         \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b_a709df3d8aef6fd1eeb839616b554ff0b}{iterator\_category} = std::bidirectional\_iterator\_tag;
-\hypertarget{map_8h_source.tex_l01362}{}\hyperlink{classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16_a4e1d954ef5c6a64bbcd881854f039a16}{01362}         \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16_a4e1d954ef5c6a64bbcd881854f039a16}{value\_type} = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{map::value\_type};
-\hypertarget{map_8h_source.tex_l01364}{}\hyperlink{classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_ac19788914a3110897e44c53f1318f6af}{01364}         \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_ac19788914a3110897e44c53f1318f6af}{reference} = \hyperlink{classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_af4f147533b3c0207ab036c86ce13ec0d}{map::reference};
-\hypertarget{map_8h_source.tex_l01366}{}\hyperlink{classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_a52ea7bdbf1dc6b252aec76633564bdf5}{01366}         \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_a52ea7bdbf1dc6b252aec76633564bdf5}{pointer} = \hyperlink{classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_a7394e98a23b86bc008ad73326b273fd5}{map::pointer};
-\hypertarget{map_8h_source.tex_l01368}{}\hyperlink{classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_a803083681db1f62aed5138194abc1f06}{01368}         \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_a803083681db1f62aed5138194abc1f06}{difference\_type} = std::ptrdiff\_t;
-01369 
-\hypertarget{map_8h_source.tex_l01396}{}\hyperlink{classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_acdd790eb54216601a2e0591776004dba}{01396}         \hyperlink{classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_acdd790eb54216601a2e0591776004dba}{iterator}() \{\}
-\hypertarget{map_8h_source.tex_l01409}{}\hyperlink{classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_a48e75896997d516fe69bc18f889222fe}{01409}         \hyperlink{classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_ac19788914a3110897e44c53f1318f6af}{reference} \hyperlink{classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_a48e75896997d516fe69bc18f889222fe}{operator*}()\textcolor{keyword}{ const }\{
-01410             \textcolor{comment}{//completar}
-01411         \}
-\hypertarget{map_8h_source.tex_l01427}{}\hyperlink{classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_a227de3b56a6ff2e6bb6de2d08277ca60}{01427}         \hyperlink{classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_a52ea7bdbf1dc6b252aec76633564bdf5}{pointer} \hyperlink{classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_a227de3b56a6ff2e6bb6de2d08277ca60}{operator->}()\textcolor{keyword}{ const }\{
-01428             \textcolor{comment}{//completar}
-01429         \}
-\hypertarget{map_8h_source.tex_l01445}{}\hyperlink{classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_a7c44de7f0508186e135ddbcfe782fec5}{01445}         \hyperlink{classaed2_1_1map_1_1iterator}{iterator}& \hyperlink{classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_a7c44de7f0508186e135ddbcfe782fec5}{operator++}() \{
-01446             \textcolor{comment}{//completar}
-01447         \}
-\hypertarget{map_8h_source.tex_l01463}{}\hyperlink{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}{01463}         \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}{operator++}(\textcolor{keywordtype}{int}) \{
-01464             \textcolor{comment}{//completar}
-01465         \}
-\hypertarget{map_8h_source.tex_l01481}{}\hyperlink{classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_ae7f70f71545d2a9de17b65edaaec748a}{01481}         \hyperlink{classaed2_1_1map_1_1iterator}{iterator}& \hyperlink{classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_ae7f70f71545d2a9de17b65edaaec748a}{operator--}() \{
-01482             \textcolor{comment}{//completar}
-01483         \}
-\hypertarget{map_8h_source.tex_l01499}{}\hyperlink{classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_add45e9ddbb8eeda99326cdb9ac9dd225}{01499}         \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_add45e9ddbb8eeda99326cdb9ac9dd225}{operator--}(\textcolor{keywordtype}{int}) \{
-01500             \textcolor{comment}{//completar}
-01501         \}
-\hypertarget{map_8h_source.tex_l01519}{}\hyperlink{classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_ad052c1ef8477a1613c292202226053a5}{01519}         \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_ad052c1ef8477a1613c292202226053a5}{operator==}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} other)\textcolor{keyword}{ const }\{
-01520             \textcolor{comment}{//completar}
-01521         \}
-\hypertarget{map_8h_source.tex_l01523}{}\hyperlink{classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_a836c7a166d63f507c4f79085ae953c51}{01523}         \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_a836c7a166d63f507c4f79085ae953c51}{operator!=}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} other)\textcolor{keyword}{ const }\{
-01524             \textcolor{comment}{//completar}
-01525         \}
-01526 
-01527     \textcolor{keyword}{private}:
-\hypertarget{map_8h_source.tex_l01548}{}\hyperlink{classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_ab0ea21abcb32b6d5a72cf341b9029838}{01548}         \hyperlink{classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_ab0ea21abcb32b6d5a72cf341b9029838}{iterator}(Node* pos) : \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}(pos) \{\}
-\hypertarget{map_8h_source.tex_l01559}{}\hyperlink{classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e_a7fe2cdc033cd899dc9fd1da08ac3b39e}{01559}         \textcolor{keyword}{operator} Node*() \textcolor{keyword}{const} \{\textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n};\}
-01561 
-01580 
-01582 
-\hypertarget{map_8h_source.tex_l01585}{}\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{01585}         Node* \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}\{\textcolor{keyword}{nullptr}\};
-01587         \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map}{map};
-01588     \};
-01589 
-\hypertarget{map_8h_source.tex_l01596}{}\hyperlink{classaed2_1_1map_1_1const__iterator}{01596}     \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \{
-01597         \textcolor{keyword}{using} Node = \textcolor{keyword}{const} \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1Node}{map::Node};
-01598         \textcolor{keyword}{using} InnerNode = \textcolor{keyword}{const} \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1InnerNode}{map::InnerNode};
-01599     \textcolor{keyword}{public}:
-01600         \textcolor{keyword}{using} iterator\_category = std::bidirectional\_iterator\_tag;
-01601         \textcolor{keyword}{using} value\_type = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{map::value\_type};
-01602         \textcolor{keyword}{using} reference = \hyperlink{classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_a277080d3db76f19df9319ecba16475a9}{map::const\_reference};
-01603         \textcolor{keyword}{using} pointer = \hyperlink{classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_a1366fc3e227a49777cb748fc6d4e022b}{map::const\_pointer};
-01604         \textcolor{keyword}{using} difference\_type = std::ptrdiff\_t;
-01605 
-\hypertarget{map_8h_source.tex_l01607}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555_a8add3e4cabbdaf313b0e085064491555}{01607}         \hyperlink{classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555_a8add3e4cabbdaf313b0e085064491555}{const\_iterator}() \{\}
-\hypertarget{map_8h_source.tex_l01625}{}\hyperlink{classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3_ab7924d90cbf6d19bec62514d10b62fb3}{01625}         \hyperlink{classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3_ab7924d90cbf6d19bec62514d10b62fb3}{const\_iterator}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} it) \{
-01626           \textcolor{comment}{//completar}
-01627         \}
-\hypertarget{map_8h_source.tex_l01629}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9_a3e8bf3ace171a4156dbf681fac671db9}{01629}         reference \hyperlink{classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9_a3e8bf3ace171a4156dbf681fac671db9}{operator*}()\textcolor{keyword}{ const  }\{
-01630           \textcolor{comment}{//completar}
-01631         \}
-\hypertarget{map_8h_source.tex_l01633}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208_a5cb0d5307b937d0bcda7d65379ce5208}{01633}         pointer \hyperlink{classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208_a5cb0d5307b937d0bcda7d65379ce5208}{operator->}()\textcolor{keyword}{ const }\{
-01634           \textcolor{comment}{//completar}
-01635         \}
-\hypertarget{map_8h_source.tex_l01637}{}\hyperlink{classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271_adaada1d489552555135d2ea89c67c271}{01637}         \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}& \hyperlink{classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271_adaada1d489552555135d2ea89c67c271}{operator++}()  \{
-01638           \textcolor{comment}{//completar}
-01639         \}
-\hypertarget{map_8h_source.tex_l01641}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e_a2fbc216b2f11694bb567ea850bcfdb2e}{01641}         \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e_a2fbc216b2f11694bb567ea850bcfdb2e}{operator++}(\textcolor{keywordtype}{int})  \{
-01642           \textcolor{comment}{//completar}
-01643         \}
-\hypertarget{map_8h_source.tex_l01645}{}\hyperlink{classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90_ae12d6608eeca05957fa3de3f50287c90}{01645}         \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}& \hyperlink{classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90_ae12d6608eeca05957fa3de3f50287c90}{operator--}()  \{
-01646           \textcolor{comment}{//completar}
-01647         \}
-\hypertarget{map_8h_source.tex_l01649}{}\hyperlink{classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228_ad5ae1cb1d000ac1f528ff32f9af3e228}{01649}         \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228_ad5ae1cb1d000ac1f528ff32f9af3e228}{operator--}(\textcolor{keywordtype}{int})  \{
-01650           \textcolor{comment}{//completar}
-01651         \}
-\hypertarget{map_8h_source.tex_l01653}{}\hyperlink{classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494_af837632a6c4a88ec13c4c96153538494}{01653}         \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494_af837632a6c4a88ec13c4c96153538494}{operator==}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} other)\textcolor{keyword}{ const  }\{
-01654           \textcolor{comment}{//completar}
-01655         \}
-\hypertarget{map_8h_source.tex_l01657}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510_a40b9e921ad9c25aded17f394b9534510}{01657}         \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510_a40b9e921ad9c25aded17f394b9534510}{operator!=}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} other)\textcolor{keyword}{ const  }\{
-01658           \textcolor{comment}{//completar}
-01659         \}
+01582     \textcolor{comment}{/*Tengo que insertar un elemento, para esto, distingo tres casos:}
+01583 \textcolor{comment}{    * 1. el elemento a insertar es la raiz. Este es el caso mas facil, solo}
+01584 \textcolor{comment}{    * tengo que}
+01585 \textcolor{comment}{    * ponerlo en relacion incestuosa con el header y ponerle el valor}
+01586 \textcolor{comment}{    * correspondiente.}
+01587 \textcolor{comment}{    * Ademas, tengo que setear los hijos de header como raiz. La raiz siempre es}
+01588 \textcolor{comment}{    * negra, y en este caso}
+01589 \textcolor{comment}{    * no tengo que llamar a insertionFix.}
+01590 \textcolor{comment}{    * 2. El elemento a insertar es menor que el hijo izquierdo de header, o es}
+01591 \textcolor{comment}{    * mayor}
+01592 \textcolor{comment}{    * al hijo derecho de header. Este caso tambien es muy simple, ya que lo voy}
+01593 \textcolor{comment}{    * a insertar a la izquierda}
+01594 \textcolor{comment}{    * del hijo izquierdo de header o a la derecha del hijo derecho segun}
+01595 \textcolor{comment}{    * corresponda, y actualizar header.}
+01596 \textcolor{comment}{    * Notar que esto tambien me beneficia porque al insertar cualquier nodo no}
+01597 \textcolor{comment}{    * me voy a tener que fijar}
+01598 \textcolor{comment}{    * si hay que actualizar el maximo o no. Sí va a ser necesario cuando se haga}
+01599 \textcolor{comment}{    * un delete.}
+01600 \textcolor{comment}{    * 3. El elemento a insertar no cae en ninguno de los casos anteriores. En}
+01601 \textcolor{comment}{    * este caso, es donde tengo que considerar}
+01602 \textcolor{comment}{    * el hint pasado por parametro. El hint es correcto sii es mayor al}
+01603 \textcolor{comment}{    * elemento, y prevInorder de hint es menor}
+01604 \textcolor{comment}{    * al elemento.}
+01605 \textcolor{comment}{    * Si el hint es correcto, se puede probar que o el hint o su prevInorder van}
+01606 \textcolor{comment}{    * a ser nils del lado que me sirve}
+01607 \textcolor{comment}{    * i.e. el hint no tiene hijo izq o el prevInorder no tiene hijo derecho.}
+01608 \textcolor{comment}{    * Si ninguno de los dos fuera nil en esos lados, existiria un elemento mayor}
+01609 \textcolor{comment}{    * al prevInorder. Si este elemento}
+01610 \textcolor{comment}{    * no fuera el hint, entonces afirmo este elemento sería menor al hint. Si}
+01611 \textcolor{comment}{    * fuera mayor, y el hint no estuviera}
+01612 \textcolor{comment}{    * en un subarbol de dicho elemento, tendria un absurdo por el invariante de}
+01613 \textcolor{comment}{    * abb. Si el hint esta en el}
+01614 \textcolor{comment}{    * subarbol del hijo derecho a prevInorder, para que su prevInorder siga}
+01615 \textcolor{comment}{    * siendo ese, deberia ser el leftmost de}
+01616 \textcolor{comment}{    * ese subarbol con lo cual su hijo izquierdo seria nil.}
+01617 \textcolor{comment}{    * A la vez, que sea nil me asegura que lo puedo insertar de ese lado (habria}
+01618 \textcolor{comment}{    * que convencerse)}
+01619 \textcolor{comment}{    * Por lo que maravillosamente solo tengo que hacer dos comparaciones boludas}
+01620 \textcolor{comment}{    * y asignarlo donde corresponda.}
+01621 \textcolor{comment}{    * A continuacion obvio hay que llamar al insertionFIx.}
+01622 \textcolor{comment}{    * En caso de que el hint no sea correcto, hayq ue llamar a insertar casi tla}
+01623 \textcolor{comment}{    * cual de los algoritmos del Cormen.}
+01624 \textcolor{comment}{    * */}
+01625     \textcolor{keywordflow}{if} ((\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} == \textcolor{keyword}{nullptr}) || \hyperlink{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}{isMaxOrMin}(value) ||
+01626         \hyperlink{classaed2_1_1map_a7403745a296985d64b8666c18953b2c0_a7403745a296985d64b8666c18953b2c0}{invalidHint}(hint, value)) \{
+01627       \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(value);
+01628     \} \textcolor{keywordflow}{else} \{
+01629       \textcolor{keywordflow}{if} (hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] == \textcolor{keyword}{nullptr}) \{  \textcolor{comment}{// lo asigno a la izquierda del hint}
+01630         hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] =
+01631             \textcolor{keyword}{new} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(static\_cast<InnerNode*>(hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n}), value);
+01632         \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0], value);
+01633       \} \textcolor{keywordflow}{else} \{
+01634         \hyperlink{structaed2_1_1map_1_1Node}{Node}* previo = prevInorder(static\_cast<InnerNode*>(hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n}));
+01635         previo->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = \textcolor{keyword}{new} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(previo, value);
+01636         \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(previo->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1], value);
+01637       \}
+01638       \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}++;
+01639     \}
+01640   \}
+\hypertarget{map_8h_source.tex_l01641}{}\hyperlink{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}{01641}   \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}{isMaxOrMin}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
+01642     \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]->\hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{value}().first, value.first) ||
+01643            \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(value.first, \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]->\hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{value}().first);
+01644   \}
+01645 
+\hypertarget{map_8h_source.tex_l01646}{}\hyperlink{classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_a8b89040f695bb838538e41b050d8e2d2}{01646}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_a8b89040f695bb838538e41b050d8e2d2}{assignMaxOrMin}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
+01647     \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]->\hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{value}().first, value.first)) \{
+01648       \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = \textcolor{keyword}{new} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.
+      \hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1], value);
+01649       \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1];
+01650       \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1], value);
+01651 
+01652     \} \textcolor{keywordflow}{else} \{
+01653       \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = \textcolor{keyword}{new} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.
+      \hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0], value);
+01654       \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0];
+01655       \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0], value);
+01656     \}
+01657   \}
+\hypertarget{map_8h_source.tex_l01659}{}\hyperlink{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}{01659}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a60aacba06b1579630b3c8e996cf248c8_a60aacba06b1579630b3c8e996cf248c8}{insert}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{ 
+      \hyperlink{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}{insert\_or\_upsert}(value, 0); \}
 01660 
-01661     \textcolor{keyword}{private}:
-\hypertarget{map_8h_source.tex_l01663}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3_a195d395708167dca23f9ce49f7c604f3}{01663}         \hyperlink{classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3_a195d395708167dca23f9ce49f7c604f3}{const\_iterator}(Node* pos) : \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}(pos) \{\}
-\hypertarget{map_8h_source.tex_l01665}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3_a637c0f083a23ec4a262d47baeecafcf3}{01665}         \textcolor{keyword}{operator} Node*() \textcolor{keyword}{const} \{\textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n};\}
-\hypertarget{map_8h_source.tex_l01667}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{01667}         Node* \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}\{\textcolor{keyword}{nullptr}\};
-01668         \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map}{map};
-01669     \};
-01670 
-01671 \textcolor{keyword}{private}:
-01672     \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1iterator}{iterator};
-01673     \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator};
-01674 
-\hypertarget{map_8h_source.tex_l01684}{}\hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{01684}     \textcolor{keyword}{enum class} \hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color} \{Red, Black, Header\};
-01685 
-\hypertarget{map_8h_source.tex_l01702}{}\hyperlink{structaed2_1_1map_1_1Node}{01702}     \textcolor{keyword}{struct }\hyperlink{structaed2_1_1map_1_1Node}{Node} \{
-\hypertarget{map_8h_source.tex_l01704}{}\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{01704}         \hyperlink{structaed2_1_1map_1_1Node}{Node}* child[2]\{\textcolor{keyword}{nullptr},\textcolor{keyword}{nullptr}\};
-\hypertarget{map_8h_source.tex_l01706}{}\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{01706}         \hyperlink{structaed2_1_1map_1_1Node}{Node}* parent\{\textcolor{keyword}{nullptr}\};
-\hypertarget{map_8h_source.tex_l01708}{}\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{01708}         \hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color} color\{Color::Red\};
-01709 
-01711 
-01712 
-01714 
-\hypertarget{map_8h_source.tex_l01722}{}\hyperlink{structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6_a9c1a600491066ce7eb669b1cb76d56c6}{01722}         \hyperlink{structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6_a9c1a600491066ce7eb669b1cb76d56c6}{Node}() : color(\hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color}::Header) \{
-01723             child[0] = child[1] = \textcolor{keyword}{this};
-01724         \}
-01725 
-\hypertarget{map_8h_source.tex_l01736}{}\hyperlink{structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e_a62b5a42e88e219d53af8237a9ebedb6e}{01736}         \hyperlink{structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e_a62b5a42e88e219d53af8237a9ebedb6e}{Node}(\hyperlink{structaed2_1_1map_1_1Node}{Node}* p, \hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color} c = Color::Red) : parent(p), color(c) \{\}
-01738         
-\hypertarget{map_8h_source.tex_l01753}{}\hyperlink{structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540_a4f3cb2cc4302fe96432e624ced147540}{01753}         \textcolor{keyword}{virtual} \hyperlink{structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540_a4f3cb2cc4302fe96432e624ced147540}{~Node}() \{\}
-01754 
-01755 
-01757 
-01758 
-01760 
-\hypertarget{map_8h_source.tex_l01778}{}\hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{01778}         \textcolor{keywordtype}{bool} \hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{is\_header}()\textcolor{keyword}{ const }\{
-01779             \textcolor{keywordflow}{return} color == Color::Header;
-01780         \}
-01781 
-\hypertarget{map_8h_source.tex_l01794}{}\hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{01794}         \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& \hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{value}() \{
-01795             assert(not is\_header());
-01796             \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(\textcolor{keyword}{this})->\_value;
-01797         \}
-\hypertarget{map_8h_source.tex_l01799}{}\hyperlink{structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_a747a33f40ad748d750372fe73aea0b32}{01799}         \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& \hyperlink{structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_a747a33f40ad748d750372fe73aea0b32}{value}()\textcolor{keyword}{ const }\{
-01800             assert(not is\_header());
-01801             \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\textcolor{keyword}{const }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(\textcolor{keyword}{this})->\_value;
-01802         \}
-01803 
-\hypertarget{map_8h_source.tex_l01816}{}\hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_a5451f8da0b7ad3582fab1decad5d09cb}{01816}         \textcolor{keyword}{const} Key& \hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_a5451f8da0b7ad3582fab1decad5d09cb}{key}()\textcolor{keyword}{ const }\{
-01817             assert(not is\_header());
-01818             \textcolor{keywordflow}{return} value().first;
-01819         \}
-01820 
-01822 
-01823 \textcolor{preprocessor}{#ifdef DEBUG}
-01824 
-01830         \textcolor{keywordtype}{void} print(\textcolor{keywordtype}{int} tab = 0)\textcolor{keyword}{ const }\{
-01831             std::cout << std::string(tab, \textcolor{charliteral}{' '}) << value().first << \textcolor{stringliteral}{"->"} << value().second << \textcolor{stringliteral}{"   ("} << (
-      color == Color::Red ? \textcolor{stringliteral}{"Red)"} : \textcolor{stringliteral}{"Black)"}) << std::endl;
-01832             \textcolor{keywordflow}{if}(child[0]) child[0]->print(tab + 2);
-01833             \textcolor{keywordflow}{if}(child[1]) child[1]->print(tab + 2);
-01834         \}
-01835 
-01836 \textcolor{preprocessor}{#endif}
-01837     \};
-01838 
-\hypertarget{map_8h_source.tex_l01855}{}\hyperlink{structaed2_1_1map_1_1InnerNode}{01855}     \textcolor{keyword}{struct }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode} : \textcolor{keyword}{public} \hyperlink{structaed2_1_1map_1_1Node}{Node} \{
-\hypertarget{map_8h_source.tex_l01857}{}\hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{01857}         \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type} \hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{\_value};
-01858     \};
-01859 
-01861 
-01882 
-01884 
-\hypertarget{map_8h_source.tex_l01888}{}\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{01888}     Compare \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt};
-\hypertarget{map_8h_source.tex_l01890}{}\hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{01890}     \textcolor{keywordtype}{size\_t} \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}\{0\};
-\hypertarget{map_8h_source.tex_l01892}{}\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{01892}     \hyperlink{structaed2_1_1map_1_1Node}{Node} \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
-01894 
-01896 
-01897 
-01899 
-\hypertarget{map_8h_source.tex_l01904}{}\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{01904}     \textcolor{keyword}{inline} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}* \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() \{ \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(header.
+\hypertarget{map_8h_source.tex_l01661}{}\hyperlink{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}{01661}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}{insert\_or\_upsert}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value, \textcolor{keywordtype}{bool} upsert) \{
+01662     \hyperlink{structaed2_1_1map_1_1Node}{Node}* now = this->\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01663     \textcolor{keywordtype}{bool} inserted = \textcolor{keyword}{false};
+01664 
+01665     \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr}) \{
+01666       \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = \textcolor{keyword}{new} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(&\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}, value);
+01667       \hyperlink{classaed2_1_1map_abe3f47a745e17a6327943b813ff6bfb3_abe3f47a745e17a6327943b813ff6bfb3}{insertionFix}(\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}(), value);
+01668       \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.
+      \hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+01669       inserted = \textcolor{keyword}{true};  \textcolor{comment}{// notar q el count++ lo hago aca, no se si es lo mejor.}
+01670     \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a81db4ead6daafe94938d5410173bdb6c_a81db4ead6daafe94938d5410173bdb6c}{isMaxOrMin}(value)) \{
+01671       \hyperlink{classaed2_1_1map_a8b89040f695bb838538e41b050d8e2d2_a8b89040f695bb838538e41b050d8e2d2}{assignMaxOrMin}(value);
+01672       inserted = \textcolor{keyword}{true};
+01673     \} \textcolor{keywordflow}{else} \{
+01674       \textcolor{keywordflow}{while} (now != \textcolor{keyword}{nullptr} && !inserted) \{
+01675         \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(now->\hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_a5451f8da0b7ad3582fab1decad5d09cb}{key}(), value.first)) \{
+01676           inserted = \hyperlink{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}{addElem}(now, value, 1);
+01677         \} \textcolor{keywordflow}{else} \{
+01678           \textcolor{keywordflow}{if} ((now->\hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_a5451f8da0b7ad3582fab1decad5d09cb}{key}() == value.first) && upsert) \{
+01679             \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(now)->\_value.second = value.second;
+01680             inserted = \textcolor{keyword}{true};
+01681             \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}--;  \textcolor{comment}{// para que no me lo cuente dos veces, igual no es copado}
+01682                       \textcolor{comment}{// hacer esto habria q cambiarlo}
+01683           \} \textcolor{keywordflow}{else}
+01684             inserted = \hyperlink{classaed2_1_1map_a709e1a06ac3c5932c1eb6d9741f37b2c_a709e1a06ac3c5932c1eb6d9741f37b2c}{addElem}(now, value, 0);
+01685         \}
+01686       \}
+01687     \}
+01688     \textcolor{keywordflow}{if} (inserted) \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}++;
+01689   \}
+\hypertarget{map_8h_source.tex_l01729}{}\hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{01729}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a2ef6723c183916276b0afc4a4c721475_a2ef6723c183916276b0afc4a4c721475}{insert\_or\_assign}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} hint, \textcolor{keyword}{const} 
+      \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
+01730     \textcolor{keywordflow}{if} (*hint == value) \{
+01731       \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(hint.\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{n})->\_value.second = value.second;
+01732     \} \textcolor{keywordflow}{else}
+01733       \hyperlink{classaed2_1_1map_a6941cde9a79c27f054b5c97a587a1854_a6941cde9a79c27f054b5c97a587a1854}{insert}(hint, value);
+01734   \}
+01735 
+\hypertarget{map_8h_source.tex_l01737}{}\hyperlink{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}{01737}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a9128a806713bcc999ebd8a97ab77e765_a9128a806713bcc999ebd8a97ab77e765}{insert\_or\_assign}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value) \{
+01738     \hyperlink{classaed2_1_1map_aef47582a93a069c4ec95da8c595e4fee_aef47582a93a069c4ec95da8c595e4fee}{insert\_or\_upsert}(value, 1);
+01739   \}
+01740 
+\hypertarget{map_8h_source.tex_l01759}{}\hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{01759}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{erase}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} pos) \{
+01760     \textcolor{comment}{// completar :(}
+01761   \}
+01762 
+\hypertarget{map_8h_source.tex_l01776}{}\hyperlink{classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334_a2ffadb42cd5f0bc7b3752ff159b75334}{01776}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a2ffadb42cd5f0bc7b3752ff159b75334_a2ffadb42cd5f0bc7b3752ff159b75334}{erase}(\textcolor{keyword}{const} Key& key) \{
+01777     \textcolor{comment}{// completar}
+01778   \}
+01779 
+\hypertarget{map_8h_source.tex_l01792}{}\hyperlink{classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca_a2bfa5165825979bf2431db55bc6bc9ca}{01792}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a2bfa5165825979bf2431db55bc6bc9ca_a2bfa5165825979bf2431db55bc6bc9ca}{clear}() \{
+01793     \textcolor{keywordflow}{while} ((\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}) != \{nullptr, nullptr\}) \{
+01794       \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] != \textcolor{keyword}{nullptr}) \hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{erase}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.
+      \hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]);
+01795       \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] != \textcolor{keyword}{nullptr}) \hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{erase}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.
+      \hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
+01796     \}
+01797     \hyperlink{classaed2_1_1map_ad8e796bf9c9c558e5ce6b61e116253fe_ad8e796bf9c9c558e5ce6b61e116253fe}{erase}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent});
+01798   \}
+01799 
+\hypertarget{map_8h_source.tex_l01830}{}\hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{01830}   \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map}{map}& other) \{
+01831     \textcolor{keyword}{using} std::swap;
+01832     \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}, other.\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt});
+01833     \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}, other.\hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count});
+01834 
+01835     \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}, other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent});
+01836     \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0], other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]);
+01837     \hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1], other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
+01838     \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() != \textcolor{keyword}{nullptr}) \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}()->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = &\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+01839     \textcolor{keywordflow}{if} (other.\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() != \textcolor{keyword}{nullptr}) other.\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}()->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} = &other.
+      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+01840 
+01841     \textcolor{comment}{// nota: cuando el arbol es vacio, los child de header apuntan a header.}
+01842     \textcolor{comment}{// Notar que quedan apuntando mal despues del swap}
+01843     \textcolor{keywordflow}{if} (\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr}) \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = &
+      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+01844     \textcolor{keywordflow}{if} (other.\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() == \textcolor{keyword}{nullptr})
+01845       other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0] = other.\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1] = &other.
+      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+01846   \}
+01848 
+01850 
+01851 
+01853 
+\hypertarget{map_8h_source.tex_l01865}{}\hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{01865}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{begin}() \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator}{iterator}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]); \}
+01866 
+\hypertarget{map_8h_source.tex_l01868}{}\hyperlink{classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_a1d10432d305bcb5f1af6ab7b75c27c1c}{01868}   \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a1d10432d305bcb5f1af6ab7b75c27c1c_a1d10432d305bcb5f1af6ab7b75c27c1c}{begin}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(
+      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]); \}
+01869 
+\hypertarget{map_8h_source.tex_l01871}{}\hyperlink{classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_ab96ad892caa28f193481a578f4956a2a}{01871}   \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_ab96ad892caa28f193481a578f4956a2a_ab96ad892caa28f193481a578f4956a2a}{cbegin}() \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(
+      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[0]); \}
+01872 
+\hypertarget{map_8h_source.tex_l01886}{}\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{01886}   \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end}() \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator}{iterator}(); \}
+01887 
+\hypertarget{map_8h_source.tex_l01889}{}\hyperlink{classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_a1f847ad4fd46883ac60d764967172179}{01889}   \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a1f847ad4fd46883ac60d764967172179_a1f847ad4fd46883ac60d764967172179}{end}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(); \}
+01890 
+\hypertarget{map_8h_source.tex_l01892}{}\hyperlink{classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_a7bb91e94cbc875f1a011b142ef877912}{01892}   \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_a7bb91e94cbc875f1a011b142ef877912_a7bb91e94cbc875f1a011b142ef877912}{cend}() \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}(); \}
+01893 
+\hypertarget{map_8h_source.tex_l01907}{}\hyperlink{classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d_ac412d3902112122c1bffe2d4283a4e9d}{01907}   \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator} \hyperlink{classaed2_1_1map_ac412d3902112122c1bffe2d4283a4e9d_ac412d3902112122c1bffe2d4283a4e9d}{rbegin}() \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator}(
+      \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]); \}
+01908 
+\hypertarget{map_8h_source.tex_l01910}{}\hyperlink{classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_aa68b6888ae3e256203d4ef273c293586}{01910}   \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_aa68b6888ae3e256203d4ef273c293586_aa68b6888ae3e256203d4ef273c293586}{rbegin}()\textcolor{keyword}{ const }\{
+01911     \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
+01912   \}
+01913 
+\hypertarget{map_8h_source.tex_l01915}{}\hyperlink{classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_a6ad62765a2b2e00247b9e35a7542b448}{01915}   \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_a6ad62765a2b2e00247b9e35a7542b448_a6ad62765a2b2e00247b9e35a7542b448}{crbegin}() \{
+01916     \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator}(\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header}.\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[1]);
+01917   \}
+01918 
+\hypertarget{map_8h_source.tex_l01933}{}\hyperlink{classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f_a277f03b4f4b6b98879e4e4921081801f}{01933}   \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator} \hyperlink{classaed2_1_1map_a277f03b4f4b6b98879e4e4921081801f_a277f03b4f4b6b98879e4e4921081801f}{rend}() \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a8e6a592062260177fd73b2f9897b1dd5_a8e6a592062260177fd73b2f9897b1dd5}{reverse\_iterator}(); \}
+01934 
+\hypertarget{map_8h_source.tex_l01936}{}\hyperlink{classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_aafce6e53c53c460897613747fec89f9d}{01936}   \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_aafce6e53c53c460897613747fec89f9d_aafce6e53c53c460897613747fec89f9d}{rend}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} 
+      \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator}(); \}
+01937 
+\hypertarget{map_8h_source.tex_l01939}{}\hyperlink{classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_a40933b2efe1cb479de9195ea947244d1}{01939}   \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator} \hyperlink{classaed2_1_1map_a40933b2efe1cb479de9195ea947244d1_a40933b2efe1cb479de9195ea947244d1}{crend}() \{ \textcolor{keywordflow}{return} 
+      \hyperlink{classaed2_1_1map_aed66a216549d13078a3ea6978ea0b768_aed66a216549d13078a3ea6978ea0b768}{const\_reverse\_iterator}(); \}
+01941 
+\hypertarget{map_8h_source.tex_l01985}{}\hyperlink{classaed2_1_1map_1_1iterator}{01985}   \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1iterator}{iterator} \{
+01986     \textcolor{keyword}{using} Node = \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1Node}{map::Node};
+01987     \textcolor{keyword}{using} InnerNode = \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1InnerNode}{map::InnerNode};
+01988 
+01989    \textcolor{keyword}{public}:
+\hypertarget{map_8h_source.tex_l01992}{}\hyperlink{classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b_a709df3d8aef6fd1eeb839616b554ff0b}{01992}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a709df3d8aef6fd1eeb839616b554ff0b_a709df3d8aef6fd1eeb839616b554ff0b}{iterator\_category} = std::bidirectional\_iterator\_tag;
+\hypertarget{map_8h_source.tex_l01994}{}\hyperlink{classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16_a4e1d954ef5c6a64bbcd881854f039a16}{01994}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a4e1d954ef5c6a64bbcd881854f039a16_a4e1d954ef5c6a64bbcd881854f039a16}{value\_type} = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{map::value\_type};
+\hypertarget{map_8h_source.tex_l01997}{}\hyperlink{classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_ac19788914a3110897e44c53f1318f6af}{01997}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_ac19788914a3110897e44c53f1318f6af}{reference} = \hyperlink{classaed2_1_1map_af4f147533b3c0207ab036c86ce13ec0d_af4f147533b3c0207ab036c86ce13ec0d}{map::reference};
+\hypertarget{map_8h_source.tex_l02000}{}\hyperlink{classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_a52ea7bdbf1dc6b252aec76633564bdf5}{02000}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_a52ea7bdbf1dc6b252aec76633564bdf5}{pointer} = \hyperlink{classaed2_1_1map_a7394e98a23b86bc008ad73326b273fd5_a7394e98a23b86bc008ad73326b273fd5}{map::pointer};
+\hypertarget{map_8h_source.tex_l02003}{}\hyperlink{classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_a803083681db1f62aed5138194abc1f06}{02003}     \textcolor{keyword}{using} \hyperlink{classaed2_1_1map_1_1iterator_a803083681db1f62aed5138194abc1f06_a803083681db1f62aed5138194abc1f06}{difference\_type} = std::ptrdiff\_t;
+02004 
+\hypertarget{map_8h_source.tex_l02035}{}\hyperlink{classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_acdd790eb54216601a2e0591776004dba}{02035}     \hyperlink{classaed2_1_1map_1_1iterator_acdd790eb54216601a2e0591776004dba_acdd790eb54216601a2e0591776004dba}{iterator}() \{\}
+\hypertarget{map_8h_source.tex_l02048}{}\hyperlink{classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_a48e75896997d516fe69bc18f889222fe}{02048}     \hyperlink{classaed2_1_1map_1_1iterator_ac19788914a3110897e44c53f1318f6af_ac19788914a3110897e44c53f1318f6af}{reference} \hyperlink{classaed2_1_1map_1_1iterator_a48e75896997d516fe69bc18f889222fe_a48e75896997d516fe69bc18f889222fe}{operator*}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}->value(); \}
+\hypertarget{map_8h_source.tex_l02066}{}\hyperlink{classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_a227de3b56a6ff2e6bb6de2d08277ca60}{02066}     \hyperlink{classaed2_1_1map_1_1iterator_a52ea7bdbf1dc6b252aec76633564bdf5_a52ea7bdbf1dc6b252aec76633564bdf5}{pointer} \hyperlink{classaed2_1_1map_1_1iterator_a227de3b56a6ff2e6bb6de2d08277ca60_a227de3b56a6ff2e6bb6de2d08277ca60}{operator->}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} &(\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}->value()); \}
+\hypertarget{map_8h_source.tex_l02083}{}\hyperlink{classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_a7c44de7f0508186e135ddbcfe782fec5}{02083}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator}& \hyperlink{classaed2_1_1map_1_1iterator_a7c44de7f0508186e135ddbcfe782fec5_a7c44de7f0508186e135ddbcfe782fec5}{operator++}() \{
+02084       this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n} = nextInorder(this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n});
+02085       \textcolor{keywordflow}{return} *\textcolor{keyword}{this};
+02086     \}
+\hypertarget{map_8h_source.tex_l02112}{}\hyperlink{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}{02112}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_1_1iterator_af4fe5565eb478cfccd254b2ef230b974_af4fe5565eb478cfccd254b2ef230b974}{operator++}(\textcolor{keywordtype}{int}) \{
+02113       \hyperlink{classaed2_1_1map_1_1iterator}{iterator} it = *\textcolor{keyword}{this};
+02114       (*this)++;
+02115       \textcolor{keywordflow}{return} it;
+02116     \}
+\hypertarget{map_8h_source.tex_l02133}{}\hyperlink{classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_ae7f70f71545d2a9de17b65edaaec748a}{02133}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator}& \hyperlink{classaed2_1_1map_1_1iterator_ae7f70f71545d2a9de17b65edaaec748a_ae7f70f71545d2a9de17b65edaaec748a}{operator--}() \{
+02134       this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n} = prevInorder(this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n});
+02135       \textcolor{keywordflow}{return} *\textcolor{keyword}{this};
+02136     \}
+\hypertarget{map_8h_source.tex_l02153}{}\hyperlink{classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_add45e9ddbb8eeda99326cdb9ac9dd225}{02153}     \hyperlink{classaed2_1_1map_1_1iterator}{iterator} \hyperlink{classaed2_1_1map_1_1iterator_add45e9ddbb8eeda99326cdb9ac9dd225_add45e9ddbb8eeda99326cdb9ac9dd225}{operator--}(\textcolor{keywordtype}{int}) \{
+02154       \hyperlink{classaed2_1_1map_1_1iterator}{iterator} it = *\textcolor{keyword}{this};
+02155       (*this)--;
+02156       \textcolor{keywordflow}{return} it;
+02157     \}
+\hypertarget{map_8h_source.tex_l02176}{}\hyperlink{classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_ad052c1ef8477a1613c292202226053a5}{02176}     \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1iterator_ad052c1ef8477a1613c292202226053a5_ad052c1ef8477a1613c292202226053a5}{operator==}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} other)\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} ((*this).n == other.
+      \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}); \}
+\hypertarget{map_8h_source.tex_l02178}{}\hyperlink{classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_a836c7a166d63f507c4f79085ae953c51}{02178}     \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1iterator_a836c7a166d63f507c4f79085ae953c51_a836c7a166d63f507c4f79085ae953c51}{operator!=}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} other)\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} !(\textcolor{keyword}{this} == other); \}
+02179 
+02180    \textcolor{keyword}{private}:
+\hypertarget{map_8h_source.tex_l02206}{}\hyperlink{classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_ab0ea21abcb32b6d5a72cf341b9029838}{02206}     \hyperlink{classaed2_1_1map_1_1iterator_ab0ea21abcb32b6d5a72cf341b9029838_ab0ea21abcb32b6d5a72cf341b9029838}{iterator}(Node* pos) : \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}(pos) \{\}
+\hypertarget{map_8h_source.tex_l02219}{}\hyperlink{classaed2_1_1map_1_1iterator_a7fe2cdc033cd899dc9fd1da08ac3b39e_a7fe2cdc033cd899dc9fd1da08ac3b39e}{02219}     \textcolor{keyword}{operator} Node*() \textcolor{keyword}{const} \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}; \}
+02221 
+02243 
+02245 
+\hypertarget{map_8h_source.tex_l02248}{}\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{02248}     Node* \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}\{\textcolor{keyword}{nullptr}\};
+02250     \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map}{map};
+02251   \};
+02252 
+\hypertarget{map_8h_source.tex_l02262}{}\hyperlink{classaed2_1_1map_1_1const__iterator}{02262}   \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \{
+02263     \textcolor{keyword}{using} Node = \textcolor{keyword}{const} \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1Node}{map::Node};
+02264     \textcolor{keyword}{using} InnerNode = \textcolor{keyword}{const} \textcolor{keyword}{typename} \hyperlink{structaed2_1_1map_1_1InnerNode}{map::InnerNode};
+02265 
+02266    \textcolor{keyword}{public}:
+02267     \textcolor{keyword}{using} iterator\_category = std::bidirectional\_iterator\_tag;
+02268     \textcolor{keyword}{using} value\_type = \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{map::value\_type};
+02269     \textcolor{keyword}{using} reference = \hyperlink{classaed2_1_1map_a277080d3db76f19df9319ecba16475a9_a277080d3db76f19df9319ecba16475a9}{map::const\_reference};
+02270     \textcolor{keyword}{using} pointer = \hyperlink{classaed2_1_1map_a1366fc3e227a49777cb748fc6d4e022b_a1366fc3e227a49777cb748fc6d4e022b}{map::const\_pointer};
+02271     \textcolor{keyword}{using} difference\_type = std::ptrdiff\_t;
+02272 
+\hypertarget{map_8h_source.tex_l02274}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555_a8add3e4cabbdaf313b0e085064491555}{02274}     \hyperlink{classaed2_1_1map_1_1const__iterator_a8add3e4cabbdaf313b0e085064491555_a8add3e4cabbdaf313b0e085064491555}{const\_iterator}() \{\}
+\hypertarget{map_8h_source.tex_l02294}{}\hyperlink{classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3_ab7924d90cbf6d19bec62514d10b62fb3}{02294}     \hyperlink{classaed2_1_1map_1_1const__iterator_ab7924d90cbf6d19bec62514d10b62fb3_ab7924d90cbf6d19bec62514d10b62fb3}{const\_iterator}(\hyperlink{classaed2_1_1map_1_1iterator}{iterator} it) \{ this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n} = it.\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}; \}
+\hypertarget{map_8h_source.tex_l02296}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9_a3e8bf3ace171a4156dbf681fac671db9}{02296}     reference \hyperlink{classaed2_1_1map_1_1const__iterator_a3e8bf3ace171a4156dbf681fac671db9_a3e8bf3ace171a4156dbf681fac671db9}{operator*}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}->value(); \}
+\hypertarget{map_8h_source.tex_l02298}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208_a5cb0d5307b937d0bcda7d65379ce5208}{02298}     pointer \hyperlink{classaed2_1_1map_1_1const__iterator_a5cb0d5307b937d0bcda7d65379ce5208_a5cb0d5307b937d0bcda7d65379ce5208}{operator->}()\textcolor{keyword}{ const }\{
+02299       \textcolor{keywordflow}{return} &((\textcolor{keyword}{static\_cast<}InnerNode*\textcolor{keyword}{>}(\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}))->\_value);
+02300     \}
+\hypertarget{map_8h_source.tex_l02302}{}\hyperlink{classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271_adaada1d489552555135d2ea89c67c271}{02302}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}& \hyperlink{classaed2_1_1map_1_1const__iterator_adaada1d489552555135d2ea89c67c271_adaada1d489552555135d2ea89c67c271}{operator++}() \{
+02303       this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n} = nextInorder(this->\hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n});
+02304       \textcolor{keywordflow}{return} *\textcolor{keyword}{this};
+02305     \}
+\hypertarget{map_8h_source.tex_l02307}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e_a2fbc216b2f11694bb567ea850bcfdb2e}{02307}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_1_1const__iterator_a2fbc216b2f11694bb567ea850bcfdb2e_a2fbc216b2f11694bb567ea850bcfdb2e}{operator++}(\textcolor{keywordtype}{int}) \{
+02308       \textcolor{comment}{// completar}
+02309     \}
+\hypertarget{map_8h_source.tex_l02311}{}\hyperlink{classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90_ae12d6608eeca05957fa3de3f50287c90}{02311}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator}& \hyperlink{classaed2_1_1map_1_1const__iterator_ae12d6608eeca05957fa3de3f50287c90_ae12d6608eeca05957fa3de3f50287c90}{operator--}() \{
+02312       \textcolor{comment}{// completar}
+02313     \}
+\hypertarget{map_8h_source.tex_l02315}{}\hyperlink{classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228_ad5ae1cb1d000ac1f528ff32f9af3e228}{02315}     \hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} \hyperlink{classaed2_1_1map_1_1const__iterator_ad5ae1cb1d000ac1f528ff32f9af3e228_ad5ae1cb1d000ac1f528ff32f9af3e228}{operator--}(\textcolor{keywordtype}{int}) \{
+02316       \textcolor{comment}{// completar}
+02317     \}
+\hypertarget{map_8h_source.tex_l02319}{}\hyperlink{classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494_af837632a6c4a88ec13c4c96153538494}{02319}     \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1const__iterator_af837632a6c4a88ec13c4c96153538494_af837632a6c4a88ec13c4c96153538494}{operator==}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} other)\textcolor{keyword}{ const }\{
+02320       \textcolor{comment}{// completar}
+02321     \}
+\hypertarget{map_8h_source.tex_l02323}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510_a40b9e921ad9c25aded17f394b9534510}{02323}     \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_1_1const__iterator_a40b9e921ad9c25aded17f394b9534510_a40b9e921ad9c25aded17f394b9534510}{operator!=}(\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator} other)\textcolor{keyword}{ const }\{
+02324       \textcolor{comment}{// completar}
+02325     \}
+02326 
+02327    \textcolor{keyword}{private}:
+\hypertarget{map_8h_source.tex_l02329}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3_a195d395708167dca23f9ce49f7c604f3}{02329}     \hyperlink{classaed2_1_1map_1_1const__iterator_a195d395708167dca23f9ce49f7c604f3_a195d395708167dca23f9ce49f7c604f3}{const\_iterator}(Node* pos) : \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}(pos) \{\}
+\hypertarget{map_8h_source.tex_l02331}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a637c0f083a23ec4a262d47baeecafcf3_a637c0f083a23ec4a262d47baeecafcf3}{02331}     \textcolor{keyword}{operator} Node*() \textcolor{keyword}{const} \{ \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}; \}
+\hypertarget{map_8h_source.tex_l02333}{}\hyperlink{classaed2_1_1map_1_1const__iterator_a921e123f9c7f94610cf9fee3ab55d277_a921e123f9c7f94610cf9fee3ab55d277}{02333}     Node* \hyperlink{classaed2_1_1map_1_1iterator_adf8633ef71bb6c1fc01c0abe8728fd93_adf8633ef71bb6c1fc01c0abe8728fd93}{n}\{\textcolor{keyword}{nullptr}\};
+02334     \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map}{map};
+02335   \};
+02336 
+02337  \textcolor{keyword}{private}:
+02338   \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1iterator}{iterator};
+02339   \textcolor{keyword}{friend} \textcolor{keyword}{class }\hyperlink{classaed2_1_1map_1_1const__iterator}{const\_iterator};
+02340 
+\hypertarget{map_8h_source.tex_l02352}{}\hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{02352}   \textcolor{keyword}{enum class} \hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color} \{ Red, Black, Header \};
+02353 
+\hypertarget{map_8h_source.tex_l02380}{}\hyperlink{structaed2_1_1map_1_1Node}{02380}   \textcolor{keyword}{struct }\hyperlink{structaed2_1_1map_1_1Node}{Node} \{
+\hypertarget{map_8h_source.tex_l02382}{}\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{02382}     \hyperlink{structaed2_1_1map_1_1Node}{Node}* child[2]\{\textcolor{keyword}{nullptr}, \textcolor{keyword}{nullptr}\};
+\hypertarget{map_8h_source.tex_l02385}{}\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{02385}     \hyperlink{structaed2_1_1map_1_1Node}{Node}* parent\{\textcolor{keyword}{nullptr}\};
+\hypertarget{map_8h_source.tex_l02387}{}\hyperlink{structaed2_1_1map_1_1Node_a58dd9993fee8ee3eaa5716b72a3eca47_a58dd9993fee8ee3eaa5716b72a3eca47}{02387}     \hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color} color\{Color::Red\};
+02388 
+02390 
+02391 
+02393 
+\hypertarget{map_8h_source.tex_l02401}{}\hyperlink{structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6_a9c1a600491066ce7eb669b1cb76d56c6}{02401}     \hyperlink{structaed2_1_1map_1_1Node_a9c1a600491066ce7eb669b1cb76d56c6_a9c1a600491066ce7eb669b1cb76d56c6}{Node}() : color(\hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color}::Header) \{ child[0] = child[1] = \textcolor{keyword}{this}; \}
+02402 
+\hypertarget{map_8h_source.tex_l02413}{}\hyperlink{structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e_a62b5a42e88e219d53af8237a9ebedb6e}{02413}     \hyperlink{structaed2_1_1map_1_1Node_a62b5a42e88e219d53af8237a9ebedb6e_a62b5a42e88e219d53af8237a9ebedb6e}{Node}(\hyperlink{structaed2_1_1map_1_1Node}{Node}* p, \hyperlink{classaed2_1_1map_a6d62a415a4b9d320b30cada4ebcf9f5b_a6d62a415a4b9d320b30cada4ebcf9f5b}{Color} c = Color::Red) : parent(p), color(c) \{\}
+02415 
+\hypertarget{map_8h_source.tex_l02436}{}\hyperlink{structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540_a4f3cb2cc4302fe96432e624ced147540}{02436}     \textcolor{keyword}{virtual} \hyperlink{structaed2_1_1map_1_1Node_a4f3cb2cc4302fe96432e624ced147540_a4f3cb2cc4302fe96432e624ced147540}{~Node}() \{\}
+02437 
+02439 
+02440 
+02442 
+\hypertarget{map_8h_source.tex_l02468}{}\hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{02468}     \textcolor{keywordtype}{bool} \hyperlink{structaed2_1_1map_1_1Node_ae6cc4598a60dbab7120ffae58ebbadca_ae6cc4598a60dbab7120ffae58ebbadca}{is\_header}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} color == Color::Header; \}
+02469 
+\hypertarget{map_8h_source.tex_l02484}{}\hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{02484}     \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& \hyperlink{structaed2_1_1map_1_1Node_af4ada8e79dabb4849fc87de63d3970fb_af4ada8e79dabb4849fc87de63d3970fb}{value}() \{
+02485       assert(not is\_header());
+02486       \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(\textcolor{keyword}{this})->\_value;
+02487     \}
+\hypertarget{map_8h_source.tex_l02489}{}\hyperlink{structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_a747a33f40ad748d750372fe73aea0b32}{02489}     \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& \hyperlink{structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_a747a33f40ad748d750372fe73aea0b32}{value}()\textcolor{keyword}{ const }\{
+02490       assert(not is\_header());
+02491       \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\textcolor{keyword}{const }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(\textcolor{keyword}{this})->\_value;
+02492     \}
+02493 
+\hypertarget{map_8h_source.tex_l02508}{}\hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_a5451f8da0b7ad3582fab1decad5d09cb}{02508}     \textcolor{keyword}{const} Key& \hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d09cb_a5451f8da0b7ad3582fab1decad5d09cb}{key}()\textcolor{keyword}{ const }\{
+02509       assert(not is\_header());
+02510       \textcolor{keywordflow}{return} value().first;
+02511     \}
+02512 
+02514 
+02515 \textcolor{preprocessor}{#ifdef DEBUG}
+02516 
+02523     \textcolor{keywordtype}{void} print(\textcolor{keywordtype}{int} tab = 0)\textcolor{keyword}{ const }\{
+02524       std::cout << std::string(tab, \textcolor{charliteral}{' '}) << value().first << \textcolor{stringliteral}{"->"}
+02525                 << value().second << \textcolor{stringliteral}{"   ("}
+02526                 << (color == Color::Red ? \textcolor{stringliteral}{"Red)"} : \textcolor{stringliteral}{"Black)"}) << std::endl;
+02527       \textcolor{keywordflow}{if} (child[0]) child[0]->print(tab + 2);
+02528       \textcolor{keywordflow}{if} (child[1]) child[1]->print(tab + 2);
+02529     \}
+02530 
+02531 \textcolor{preprocessor}{#endif}
+02532   \};
+02533 
+\hypertarget{map_8h_source.tex_l02559}{}\hyperlink{structaed2_1_1map_1_1InnerNode}{02559}   \textcolor{keyword}{struct }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode} : \textcolor{keyword}{public} \hyperlink{structaed2_1_1map_1_1Node}{Node} \{
+\hypertarget{map_8h_source.tex_l02561}{}\hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{02561}     \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type} \hyperlink{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{\_value};
+02562     \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}(\hyperlink{structaed2_1_1map_1_1Node}{Node}* myparent, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map_a719db98e0ff9a837610f76be33264680_a719db98e0ff9a837610f76be33264680}{value\_type}& value)
+02563         : \hyperlink{structaed2_1_1map_1_1Node}{Node}(myparent), \_value(value) \{
+02564       \textcolor{comment}{// parent = myparent;}
+02565     \}
+02566   \};
+02567 
+02569 
+02592 
+02594 
+\hypertarget{map_8h_source.tex_l02599}{}\hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{02599}   Compare \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt};
+\hypertarget{map_8h_source.tex_l02601}{}\hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{02601}   \textcolor{keywordtype}{size\_t} \hyperlink{classaed2_1_1map_a44236c4f16cdc20a10759862b198bde4_a44236c4f16cdc20a10759862b198bde4}{count}\{0\};
+\hypertarget{map_8h_source.tex_l02603}{}\hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{02603}   \hyperlink{structaed2_1_1map_1_1Node}{Node} \hyperlink{classaed2_1_1map_a92d93f905c8ad73fba18fdc7e8915cce_a92d93f905c8ad73fba18fdc7e8915cce}{header};
+02605   \textcolor{keywordtype}{bool} hasChild(\hyperlink{structaed2_1_1map_1_1Node}{Node}* node, \textcolor{keywordtype}{int} dir) \{ \textcolor{keywordflow}{return} node->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir] != \textcolor{keyword}{nullptr}; \}
+02606   \textcolor{keywordtype}{bool} hasChild(\textcolor{keyword}{const} \hyperlink{structaed2_1_1map_1_1Node}{Node}* node, \textcolor{keywordtype}{int} dir) \{
+02607     \textcolor{keywordflow}{return} node->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir] != \textcolor{keyword}{nullptr};
+02608   \}
+02609   \hyperlink{structaed2_1_1map_1_1Node}{Node}* nextInorder(\hyperlink{structaed2_1_1map_1_1Node}{Node}* node, \textcolor{keywordtype}{int} dir = 1) \{
+02610     \textcolor{keywordflow}{if} (hasChild(node, dir)) \textcolor{keywordflow}{return} getDMost(node->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir], 1 - dir);
+02611     \textcolor{keywordflow}{if} (isChild(node, 1 - dir)) \textcolor{keywordflow}{return} node->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+02612     \textcolor{keywordflow}{while} (isChild(node, dir)) node = node->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent};
+02613     \textcolor{keywordflow}{return} node;
+02614   \}
+02615 
+02616   \hyperlink{structaed2_1_1map_1_1Node}{Node}* prevInorder(\hyperlink{structaed2_1_1map_1_1Node}{Node}* node) \{ \textcolor{keywordflow}{return} nextInorder(node, 0); \}
+02617 
+02618   \hyperlink{structaed2_1_1map_1_1Node}{Node}* getDMost(\hyperlink{structaed2_1_1map_1_1Node}{Node}* node, \textcolor{keywordtype}{int} dir) \{
+02619     \hyperlink{structaed2_1_1map_1_1Node}{Node}* aux = node;
+02620     \textcolor{keywordflow}{while} (aux != \textcolor{keyword}{nullptr} && hasChild(node, dir)) \{
+02621       aux = aux->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir];
+02622     \}
+02623     \textcolor{keywordflow}{return} aux;
+02624   \}
+02625 
+02626   \textcolor{keywordtype}{bool} isChild(\hyperlink{structaed2_1_1map_1_1Node}{Node}* node, \textcolor{keywordtype}{int} dir) \{ \textcolor{keywordflow}{return} node->\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}->\hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child}[dir] == node; \}
+02627 
+02629 
+02630 
+02632 
+\hypertarget{map_8h_source.tex_l02637}{}\hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{02637}   \textcolor{keyword}{inline} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}* \hyperlink{classaed2_1_1map_a07ab50eda249a57858a34037d4c4c7b2_a07ab50eda249a57858a34037d4c4c7b2}{root}() \{ \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(header.
       \hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}); \}
-01905 
-\hypertarget{map_8h_source.tex_l01907}{}\hyperlink{classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_a89cf44cf0661a97f5dd0985160dcc0e7}{01907}     \textcolor{keyword}{inline} \textcolor{keyword}{const} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}* \hyperlink{classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_a89cf44cf0661a97f5dd0985160dcc0e7}{root}()\textcolor{keyword}{ const }\{ \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\textcolor{keyword}{const }
-      \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(header.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent}); \}
-01909 
-01911 
-01912 
-\hypertarget{map_8h_source.tex_l01920}{}\hyperlink{classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624_ab45cb28bb215cd229383d88b96b3f624}{01920}     \textcolor{keyword}{inline} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624_ab45cb28bb215cd229383d88b96b3f624}{eq}(\textcolor{keyword}{const} Key& k1, \textcolor{keyword}{const} Key& k2)\textcolor{keyword}{ const }\{
-01921         \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(k1, k2) == \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(k2, k1);
-01922     \}
-01923 \};
-01924 
-01926 
-01927 
-01929 
-01952 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l01953}{}\hyperlink{classaed2_1_1map_abfc51b39670220e79037ac067006e933_abfc51b39670220e79037ac067006e933}{01953} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_abfc51b39670220e79037ac067006e933_abfc51b39670220e79037ac067006e933}{operator==}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-01954     \textcolor{keywordflow}{return} m1.\hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{size}() == m2.\hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{size}() and std::equal(m1.\hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{begin}(), m1.\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end}(), m2.
-      \hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{begin}());
-01955 \}
-01956 
-01963 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l01964}{}\hyperlink{classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09_abce0fa35c5b25fd67111c2e704616f09}{01964} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09_abce0fa35c5b25fd67111c2e704616f09}{operator!=}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-01965     \textcolor{keywordflow}{return} not(m1 == m2);
-01966 \}
-01967 
-01991 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l01992}{}\hyperlink{classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d_a8ff07f6a24c290ea7e8f63ec7ab24f8d}{01992} \textcolor{keywordtype}{bool} operator<(const map<K, V, C>& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-01993     \textcolor{comment}{//completar.  Vale usar std::lexicographical\_compare}
-01994 \}
-01995 
-02002 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l02003}{}\hyperlink{classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63_a2000cd874b72034ce7fe730c811b6c63}{02003} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63_a2000cd874b72034ce7fe730c811b6c63}{operator>}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-02004     \textcolor{keywordflow}{return} m2 < m1;
-02005 \}
-02006 
-02013 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l02014}{}\hyperlink{classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208_afe374b37f17263d0cad3ee19a590d208}{02014} \textcolor{keywordtype}{bool} operator<=(const map<K, V, C>& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-02015     \textcolor{keywordflow}{return} not(m2 < m1);
-02016 \}
-02017 
-02024 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l02025}{}\hyperlink{classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159_a093a6d1a055339c5fc6297a1d47a9159}{02025} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159_a093a6d1a055339c5fc6297a1d47a9159}{operator>=}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-02026     \textcolor{keywordflow}{return} !(m1 < m2);
-02027 \}
-02029 
-02031 
-02032 
-02048 \textcolor{keyword}{template}<\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
-\hypertarget{map_8h_source.tex_l02049}{}\hyperlink{classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72_a119cb2938bbc11c25ebd4fb824782a72}{02049} \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72_a119cb2938bbc11c25ebd4fb824782a72}{swap}(\hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
-02050     m1.\hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(m2);
-02051 \}
-02052 \}
-02053 
-02054 \textcolor{preprocessor}{#endif }\textcolor{comment}{/* MAP\_H\_ */}\textcolor{preprocessor}{}
+02638 
+\hypertarget{map_8h_source.tex_l02640}{}\hyperlink{classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_a89cf44cf0661a97f5dd0985160dcc0e7}{02640}   \textcolor{keyword}{inline} \textcolor{keyword}{const} \hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}* \hyperlink{classaed2_1_1map_a89cf44cf0661a97f5dd0985160dcc0e7_a89cf44cf0661a97f5dd0985160dcc0e7}{root}()\textcolor{keyword}{ const }\{
+02641     \textcolor{keywordflow}{return} \textcolor{keyword}{static\_cast<}\textcolor{keyword}{const }\hyperlink{structaed2_1_1map_1_1InnerNode}{InnerNode}*\textcolor{keyword}{>}(header.\hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent});
+02642   \}
+02644 
+02646 
+02647 
+\hypertarget{map_8h_source.tex_l02656}{}\hyperlink{classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624_ab45cb28bb215cd229383d88b96b3f624}{02656}   \textcolor{keyword}{inline} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_ab45cb28bb215cd229383d88b96b3f624_ab45cb28bb215cd229383d88b96b3f624}{eq}(\textcolor{keyword}{const} Key& k1, \textcolor{keyword}{const} Key& k2)\textcolor{keyword}{ const }\{
+02657     \textcolor{keywordflow}{return} \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(k1, k2) == \hyperlink{classaed2_1_1map_a0e5be36fae0693e4665bd2a615e7550a_a0e5be36fae0693e4665bd2a615e7550a}{lt}(k2, k1);
+02658   \}
+02659 \};
+02660 
+02662 
+02663 
+02665 
+02691 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02692}{}\hyperlink{classaed2_1_1map_abfc51b39670220e79037ac067006e933_abfc51b39670220e79037ac067006e933}{02692} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_abfc51b39670220e79037ac067006e933_abfc51b39670220e79037ac067006e933}{operator==}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02693   \textcolor{keywordflow}{return} m1.\hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{size}() == m2.\hyperlink{classaed2_1_1map_a89f2613f926ac13293eafe65889d6021_a89f2613f926ac13293eafe65889d6021}{size}() and
+02694          std::equal(m1.\hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{begin}(), m1.\hyperlink{classaed2_1_1map_a76023e6a56cb625513e1b5ea028bf983_a76023e6a56cb625513e1b5ea028bf983}{end}(), m2.\hyperlink{classaed2_1_1map_a58a95705d54b3dda7f775ce5a22225cb_a58a95705d54b3dda7f775ce5a22225cb}{begin}());
+02695 \}
+02696 
+02703 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02704}{}\hyperlink{classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09_abce0fa35c5b25fd67111c2e704616f09}{02704} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_abce0fa35c5b25fd67111c2e704616f09_abce0fa35c5b25fd67111c2e704616f09}{operator!=}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02705   \textcolor{keywordflow}{return} not(m1 == m2);
+02706 \}
+02707 
+02734 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02735}{}\hyperlink{classaed2_1_1map_a8ff07f6a24c290ea7e8f63ec7ab24f8d_a8ff07f6a24c290ea7e8f63ec7ab24f8d}{02735} \textcolor{keywordtype}{bool} operator<(const map<K, V, C>& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02736   \textcolor{comment}{// completar.  Vale usar std::lexicographical\_compare}
+02737 \}
+02738 
+02745 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02746}{}\hyperlink{classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63_a2000cd874b72034ce7fe730c811b6c63}{02746} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a2000cd874b72034ce7fe730c811b6c63_a2000cd874b72034ce7fe730c811b6c63}{operator>}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02747   \textcolor{keywordflow}{return} m2 < m1;
+02748 \}
+02749 
+02756 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02757}{}\hyperlink{classaed2_1_1map_afe374b37f17263d0cad3ee19a590d208_afe374b37f17263d0cad3ee19a590d208}{02757} \textcolor{keywordtype}{bool} operator<=(const map<K, V, C>& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02758   \textcolor{keywordflow}{return} not(m2 < m1);
+02759 \}
+02760 
+02767 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02768}{}\hyperlink{classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159_a093a6d1a055339c5fc6297a1d47a9159}{02768} \textcolor{keywordtype}{bool} \hyperlink{classaed2_1_1map_a093a6d1a055339c5fc6297a1d47a9159_a093a6d1a055339c5fc6297a1d47a9159}{operator>=}(\textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \textcolor{keyword}{const} \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02769   \textcolor{keywordflow}{return} !(m1 < m2);
+02770 \}
+02772 
+02774 
+02775 
+02791 \textcolor{keyword}{template} <\textcolor{keyword}{class} K, \textcolor{keyword}{class} V, \textcolor{keyword}{class} C>
+\hypertarget{map_8h_source.tex_l02792}{}\hyperlink{classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72_a119cb2938bbc11c25ebd4fb824782a72}{02792} \textcolor{keywordtype}{void} \hyperlink{classaed2_1_1map_a119cb2938bbc11c25ebd4fb824782a72_a119cb2938bbc11c25ebd4fb824782a72}{swap}(\hyperlink{classaed2_1_1map}{map<K, V, C>}& m1, \hyperlink{classaed2_1_1map}{map<K, V, C>}& m2) \{
+02793   m1.\hyperlink{classaed2_1_1map_a43ddb71cc91e5c6021a7a1f243d6cc4a_a43ddb71cc91e5c6021a7a1f243d6cc4a}{swap}(m2);
+02794 \}
+02795 \}
+02796 
+02797 \textcolor{preprocessor}{#endif }\textcolor{comment}{/* MAP\_H\_ */}\textcolor{preprocessor}{}
 \end{DoxyCode}
diff --git a/latex/refman.log b/latex/refman.log
new file mode 100644
index 0000000..e900e7b
--- /dev/null
+++ b/latex/refman.log
@@ -0,0 +1,140 @@
+This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex 2017.5.25)  25 MAY 2017 10:40
+entering extended mode
+ restricted \write18 enabled.
+ %&-line parsing enabled.
+**refman
+(./refman.tex
+LaTeX2e <2016/02/01>
+Babel <3.9q> and hyphenation patterns for 3 language(s) loaded.
+
+(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
+Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
+(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
+File: size10.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
+)
+\c@part=\count79
+\c@section=\count80
+\c@subsection=\count81
+\c@subsubsection=\count82
+\c@paragraph=\count83
+\c@subparagraph=\count84
+\c@figure=\count85
+\c@table=\count86
+\abovecaptionskip=\skip41
+\belowcaptionskip=\skip42
+\bibindent=\dimen102
+) (/usr/share/texlive/texmf-dist/tex/latex/base/fixltx2e.sty
+Package: fixltx2e 2015/06/22 v2.0b fixes to LaTeX (obsolete)
+
+Package fixltx2e Warning: fixltx2e is not required with releases after 2015
+(fixltx2e)                All fixes are now in the LaTeX kernel.
+(fixltx2e)                See the latexrelease package for details.
+
+) (/usr/share/texlive/texmf-dist/tex/latex/tools/calc.sty
+Package: calc 2014/10/28 v4.3 Infix arithmetic (KKT,FJ)
+\calc@Acount=\count87
+\calc@Bcount=\count88
+\calc@Adimen=\dimen103
+\calc@Bdimen=\dimen104
+\calc@Askip=\skip43
+\calc@Bskip=\skip44
+LaTeX Info: Redefining \setlength on input line 80.
+LaTeX Info: Redefining \addtolength on input line 81.
+\calc@Ccount=\count89
+\calc@Cskip=\skip45
+) (./doxygen.sty
+Package: doxygen 
+(/usr/share/texlive/texmf-dist/tex/latex/base/alltt.sty
+Package: alltt 1997/06/16 v2.0g defines alltt environment
+) (/usr/share/texlive/texmf-dist/tex/latex/tools/array.sty
+Package: array 2014/10/28 v2.4c Tabular extension package (FMi)
+\col@sep=\dimen105
+\extrarowheight=\dimen106
+\NC@list=\toks14
+\extratabsurround=\skip46
+\backup@length=\skip47
+) (/usr/share/texlive/texmf-dist/tex/latex/float/float.sty
+Package: float 2001/11/08 v1.3d Float enhancements (AL)
+\c@float@type=\count90
+\float@exts=\toks15
+\float@box=\box26
+\@float@everytoks=\toks16
+\@floatcapt=\box27
+) (/usr/share/texlive/texmf-dist/tex/latex/base/ifthen.sty
+Package: ifthen 2014/09/29 v1.1c Standard LaTeX ifthen package (DPC)
+) (/usr/share/texlive/texmf-dist/tex/latex/tools/verbatim.sty
+Package: verbatim 2014/10/28 v1.5q LaTeX2e package for verbatim enhancements
+\every@verbatim=\toks17
+\verbatim@line=\toks18
+\verbatim@in@stream=\read1
+) (/usr/share/texlive/texmf-dist/tex/latex/xcolor/xcolor.sty
+Package: xcolor 2007/01/21 v2.11 LaTeX color extensions (UK)
+(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
+File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
+)
+Package xcolor Info: Driver file: pdftex.def on input line 225.
+(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
+File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX
+(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
+Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
+) (/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
+Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
+)
+\Gread@gobject=\count91
+) (/usr/share/texlive/texmf-dist/tex/latex/colortbl/colortbl.sty
+Package: colortbl 2012/02/13 v1.0a Color table columns (DPC)
+\everycr=\toks19
+\minrowclearance=\skip48
+)
+\rownum=\count92
+Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1337.
+Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1341.
+Package xcolor Info: Model `RGB' extended on input line 1353.
+Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1355.
+Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1356.
+Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1357.
+Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1358.
+Package xcolor Info: Model `Gray' substituted by `gray' on input line 1359.
+Package xcolor Info: Model `wave' substituted by `hsb' on input line 1360.
+) (/usr/share/texlive/texmf-dist/tex/latex/tools/longtable.sty
+Package: longtable 2014/10/28 v4.11 Multi-page Table package (DPC)
+\LTleft=\skip49
+\LTright=\skip50
+\LTpre=\skip51
+\LTpost=\skip52
+\LTchunksize=\count93
+\LTcapwidth=\dimen107
+\LT@head=\box28
+\LT@firsthead=\box29
+\LT@foot=\box30
+\LT@lastfoot=\box31
+\LT@cols=\count94
+\LT@rows=\count95
+\c@LT@tables=\count96
+\c@LT@chunks=\count97
+\LT@p@ftn=\toks20
+)
+
+! LaTeX Error: File `tabu.sty' not found.
+
+Type X to quit or <RETURN> to proceed,
+or enter new name. (Default extension: sty)
+
+Enter file name: 
+! Emergency stop.
+<read *> 
+         
+l.14 \RequirePackage
+                    {tabularx}^^M
+*** (cannot \read from terminal in nonstop modes)
+
+ 
+Here is how much of TeX's memory you used:
+ 1452 strings out of 494953
+ 18017 string characters out of 6180977
+ 77912 words of memory out of 5000000
+ 4779 multiletter control sequences out of 15000+600000
+ 3640 words of font info for 14 fonts, out of 8000000 for 9000
+ 14 hyphenation exceptions out of 8191
+ 48i,0n,37p,272b,36s stack positions out of 5000i,500n,10000p,200000b,80000s
+!  ==> Fatal error occurred, no output PDF file produced!
diff --git a/latex/structaed2_1_1map_1_1InnerNode.tex b/latex/structaed2_1_1map_1_1InnerNode.tex
index cc88613..33ce59e 100644
--- a/latex/structaed2_1_1map_1_1InnerNode.tex
+++ b/latex/structaed2_1_1map_1_1InnerNode.tex
@@ -19,7 +19,7 @@ struct aed2\+::map$<$ Key, Meaning, Compare $>$\+::\+Inner\+Node}
 
 Estructura (privada) de un nodo no cabecera del árbol red-\/black. 
 
-Tal como sugiere Cormen et al. {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]}, como se implementa en G\+CC, y cómo explicamos en \hyperlink{Implementacion}{Implementación del árbol red-\/black}, el árbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como centinelas. La estructura \hyperlink{structaed2_1_1map_1_1InnerNode}{Inner\+Node} hereda de la estructura \hyperlink{structaed2_1_1map_1_1Node}{aed2\+::map\+::\+Node}, agregando el valor, para representar a los nodos no cabecera.
+Tal como sugiere Cormen et al. \cite{CormenLeisersonRivestStein2009}, como se implementa en G\+CC, y cómo explicamos en \hyperlink{Implementacion}{Implementación del árbol red-\/black}, el árbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como centinelas. La estructura \hyperlink{structaed2_1_1map_1_1InnerNode}{Inner\+Node} hereda de la estructura \hyperlink{structaed2_1_1map_1_1Node}{aed2\+::map\+::\+Node}, agregando el valor, para representar a los nodos no cabecera.
 
 Además de definir los campos de la estructura de un nodo, esta clase podría implementar una especie de submodulo que incluya funciones para manipular el árbol red-\/black. Se sugiere incluir en esta estructura aquellas funciones que, si bien no requieren conocer el resto de la estructura red-\/black, explotan el conocimiento de que el árbol red-\/black tiene un unico nodo sentinela que sirve de cabecera.
 
@@ -28,7 +28,7 @@ Como \hyperlink{structaed2_1_1map_1_1InnerNode}{Inner\+Node} es una estructura p
 \end{DoxyRemark}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01855}{1855} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02559}{2559} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -38,7 +38,7 @@ Definición en la línea \hyperlink{map_8h_source_l01855}{1855} del archivo \hyp
 \paragraph[{\texorpdfstring{\+\_\+value}{_value}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ {\bf value\+\_\+type} {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::Inner\+Node\+::\+\_\+value}\hypertarget{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}{}\label{structaed2_1_1map_1_1InnerNode_a53fd8a50986fec67601dd77c44c1657e_a53fd8a50986fec67601dd77c44c1657e}
 Valor del nodo 
 
-Definición en la línea \hyperlink{map_8h_source_l01857}{1857} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02561}{2561} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
diff --git a/latex/structaed2_1_1map_1_1Node.tex b/latex/structaed2_1_1map_1_1Node.tex
index 97d4562..ee71f02 100644
--- a/latex/structaed2_1_1map_1_1Node.tex
+++ b/latex/structaed2_1_1map_1_1Node.tex
@@ -33,7 +33,7 @@ const Key \& \hyperlink{structaed2_1_1map_1_1Node_a5451f8da0b7ad3582fab1decad5d0
 \subsubsection*{Atributos públicos}
 \begin{DoxyCompactItemize}
 \item 
-\hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$ \hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child} \mbox{[}2\mbox{]} \{nullptr,nullptr\}
+\hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$ \hyperlink{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{child} \mbox{[}2\mbox{]} \{nullptr, nullptr\}
 \begin{DoxyCompactList}\small\item\em Punteros a los hijos izquierdo (child\mbox{[}0\mbox{]}) y derecho (child\mbox{[}1\mbox{]}) \end{DoxyCompactList}\item 
 \hyperlink{structaed2_1_1map_1_1Node}{Node} $\ast$ \hyperlink{structaed2_1_1map_1_1Node_ab6a5f9e471b311755e4a56834086cb90_ab6a5f9e471b311755e4a56834086cb90}{parent} \{nullptr\}
 \begin{DoxyCompactList}\small\item\em Puntero al padre\+: garantiza insercion con puntero en O(1) amortizado e iteracion en O(1) memoria. \end{DoxyCompactList}\item 
@@ -47,7 +47,7 @@ struct aed2\+::map$<$ Key, Meaning, Compare $>$\+::\+Node}
 
 Estructura (privada) de un nodo del árbol red-\/black. 
 
-Tal como sugiere Cormen et al. {\bfseries [Cormen\+Leiserson\+Rivest\+Stein2009]}, como se implementa en gcc, y cómo explicamos en \hyperlink{Implementacion}{Implementación del árbol red-\/black}, el arbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como sentinelas. La estructura \hyperlink{structaed2_1_1map_1_1Node}{Node} es la base para representar a ambos tipos de nodos, ya que omite los valores. La clase \hyperlink{structaed2_1_1map_1_1InnerNode}{aed2\+::map\+::\+Inner\+Node}, que hereda de \hyperlink{structaed2_1_1map_1_1Node}{Node}, extiende la representación incluyendo el valor.
+Tal como sugiere Cormen et al. \cite{CormenLeisersonRivestStein2009}, como se implementa en gcc, y cómo explicamos en \hyperlink{Implementacion}{Implementación del árbol red-\/black}, el arbol tiene dos tipos de nodos. Aquellos que tienen un valor e implementan el árbol y aquellos que se usan como sentinelas. La estructura \hyperlink{structaed2_1_1map_1_1Node}{Node} es la base para representar a ambos tipos de nodos, ya que omite los valores. La clase \hyperlink{structaed2_1_1map_1_1InnerNode}{aed2\+::map\+::\+Inner\+Node}, que hereda de \hyperlink{structaed2_1_1map_1_1Node}{Node}, extiende la representación incluyendo el valor.
 
 Además de definir los campos de la estructura de un nodo, esta clase podría usarse para implementar una especie de submodulo que incluya funciones para manipular el arbol red-\/black. Las funciones incluidas en esta estructura deberían ser aquellas que, si bien no requieren conocer el resto de la estructura red-\/black, explotan el conocimiento de que el árbol red-\/black tiene un único nodo sentinela que sirve de cabecera. (Ver ejemplos)
 
@@ -56,7 +56,7 @@ Como \hyperlink{structaed2_1_1map_1_1Node}{Node} es una estructura privada, no t
 \end{DoxyRemark}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01702}{1702} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02380}{2380} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -79,7 +79,7 @@ Construye un nodo con color Header y cuyos hijos apuntan al nodo creado. Esta es
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01722}{1722} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02401}{2401} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!Node@{Node}}
 \index{Node@{Node}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -107,7 +107,7 @@ Crea un nodo con padre {\bfseries p}, color {\bfseries c} y sin hijos.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01736}{1736} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02413}{2413} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!````~Node@{$\sim$\+Node}}
 \index{````~Node@{$\sim$\+Node}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -127,7 +127,7 @@ En rigor, nunca deberíamos invocar new \hyperlink{structaed2_1_1map_1_1Node}{No
 \end{DoxyRemark}
 
 
-Definición en la línea \hyperlink{map_8h_source_l01753}{1753} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02436}{2436} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
@@ -154,7 +154,7 @@ true si el nodo actual tiene color aed2\+::map\+::\+Color\+::\+Header.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01778}{1778} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02468}{2468} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!value@{value}}
 \index{value@{value}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -180,7 +180,7 @@ valor asociado al nodo.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01794}{1794} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02484}{2484} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!value@{value}}
 \index{value@{value}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -191,7 +191,7 @@ Definición en la línea \hyperlink{map_8h_source_l01794}{1794} del archivo \hyp
 ) const\hspace{0.3cm}{\ttfamily [inline]}}\hypertarget{structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_a747a33f40ad748d750372fe73aea0b32}{}\label{structaed2_1_1map_1_1Node_a747a33f40ad748d750372fe73aea0b32_a747a33f40ad748d750372fe73aea0b32}
 Esta es una función miembro sobrecargada que se suministra por conveniencia. Difiere de la anterior función solamente en los argumentos que acepta. 
 
-Definición en la línea \hyperlink{map_8h_source_l01799}{1799} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02489}{2489} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!key@{key}}
 \index{key@{key}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -217,21 +217,21 @@ clave del valor asociado al nodo.
 \item[Complejidad Temporal]$O$(1)
 \end{DoxyDescription}
 
-Definición en la línea \hyperlink{map_8h_source_l01816}{1816} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02508}{2508} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
 \subsubsection{Documentación de los datos miembro}
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!child@{child}}
 \index{child@{child}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
-\paragraph[{\texorpdfstring{child}{child}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ {\bf Node}$\ast$ {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::Node\+::child\mbox{[}2\mbox{]} \{nullptr,nullptr\}}\hypertarget{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{}\label{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}
+\paragraph[{\texorpdfstring{child}{child}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class Key, class Meaning, class Compare = std\+::less$<$\+Key$>$$>$ {\bf Node}$\ast$ {\bf aed2\+::map}$<$ Key, Meaning, Compare $>$\+::Node\+::child\mbox{[}2\mbox{]} \{nullptr, nullptr\}}\hypertarget{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}{}\label{structaed2_1_1map_1_1Node_a7d65c374c73c443a46d8fc224aff9e82_a7d65c374c73c443a46d8fc224aff9e82}
 
 
 Punteros a los hijos izquierdo (child\mbox{[}0\mbox{]}) y derecho (child\mbox{[}1\mbox{]}) 
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01704}{1704} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02382}{2382} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!parent@{parent}}
 \index{parent@{parent}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -242,7 +242,7 @@ Puntero al padre\+: garantiza insercion con puntero en O(1) amortizado e iteraci
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01706}{1706} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02385}{2385} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 \index{aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}!color@{color}}
 \index{color@{color}!aed2\+::map\+::\+Node@{aed2\+::map\+::\+Node}}
@@ -253,7 +253,7 @@ Color del nodo.
 
 
 
-Definición en la línea \hyperlink{map_8h_source_l01708}{1708} del archivo \hyperlink{map_8h_source}{map.\+h}.
+Definición en la línea \hyperlink{map_8h_source_l02387}{2387} del archivo \hyperlink{map_8h_source}{map.\+h}.
 
 
 
diff --git a/map.h b/map.h
index f19be03..a951669 100644
--- a/map.h
+++ b/map.h
@@ -17,8 +17,10 @@
  *
  * \tableofcontents
  *
- * - \b Autores: Oliver Gibson (gibson31@gmail.com), Catalina Juarros (catalinajuarros@gmail.com),
- * Miguel Nehmad Alché (mikealche@gmail.com), Jessica Singer (singer.jeess@gmail.com)
+ * - \b Autores: Oliver Gibson (gibson31@gmail.com), Catalina Juarros
+ * (catalinajuarros@gmail.com),
+ * Miguel Nehmad Alché (mikealche@gmail.com), Jessica Singer
+ * (singer.jeess@gmail.com)
  * - \b Materia: Algoritmos y Estructuras de Datos II
  *
  * El presente documento describe la implementación de un módulo diccionario
@@ -1049,7 +1051,7 @@ class map {
    * \LT = \P{c}.operator()
    */
   explicit map(Compare c = Compare()) {
-    //header = Node();
+    // header = Node();
     lt = c;
   }
 
@@ -1144,8 +1146,8 @@ class map {
    *
    * \aliasing{completar}
    *
-   * \pre \aedpre{completar}
-   * \post \aedpost{completar}
+   * \pre \aedpre{other0 = other}
+   * \post \aedpost{res = other0}
    *
    * \complexity{\O(\DEL(\P{*this}) \PLUS \COPY(\P{other}))}
    *
@@ -1214,8 +1216,10 @@ class map {
    * recurrir a la función find.
    */
   const Meaning& at(const Key& key) const {
-  	const_iterator it = find(key);
-  	if (it.n != nullptr) { return static_cast<InnerNode*>(it.n)->_value.first; }
+    const_iterator it = find(key);
+    if (it.n != nullptr) {
+      return static_cast<InnerNode*>(it.n)->_value.first;
+    }
     // const InnerNode* actual = root();
     // while (actual->_value.first != key) {
     //   if (lt(key, actual->_value.first)) {
@@ -1229,8 +1233,10 @@ class map {
 
   /** \overload */
   Meaning& at(const Key& key) {
-  	iterator it = find(key);
-  	if (it.n != nullptr) { return static_cast<InnerNode*>(it.n)->_value.first; }
+    iterator it = find(key);
+    if (it.n != nullptr) {
+      return static_cast<InnerNode*>(it.n)->_value.first;
+    }
     // InnerNode* actual = root();
     // while (actual->_value.first != key) {
     //   if (lt(key, actual->_value.first)) {
@@ -1273,8 +1279,8 @@ class map {
    *
    * \aliasing{completar}
    *
-   * \pre \aedpre{completar}
-   * \post \aedpost{completar}
+   * \pre \aedpre{definido?(\P{key},this)}
+   * \post \aedpost{res \igobs obtener(\P{key},this)}
        *
    * \complexity{\O(\LOG(\SIZE(\P{*this})) \CDOT \CMP(\P{*this}) + \a x) donde
    * - \a x = 1 si def?(\a self, \P{key}), y
@@ -1297,7 +1303,7 @@ class map {
    * \aliasing{completar}
    *
    * \pre \aedpre{true}
-   * \post \aedpost{completar}
+   * \post \aedpost{if def?(key,this) then (*res)->value().first == key) else *res == header}
    *
    * \complexity{\O(\LOG(\SIZE(\P{*this})) \CDOT \CMP(\P{*this}))}
    *
@@ -1308,41 +1314,41 @@ class map {
    * inserción.
    *
    */
-  iterator find(const Key& key) { 
-  	if (root() == nullptr) {
-  		return iterator(nullptr);
-  	} else {
-  		InnerNode* now = root();
-  		while(now != nullptr) {
-  			if (now->_value.first == key) {
-  				return iterator(now);
-  			} else if (lt(key, now->_value.first)) {
-  				now = static_cast<InnerNode*>(now->child[0]);
-  			} else {
-  				now = static_cast<InnerNode*>(now->child[1]);
-  			}
-  		}
-  		return iterator(nullptr);
-  	}
+  iterator find(const Key& key) {
+    if (root() == nullptr) {
+      return this->end();
+    } else {
+      InnerNode* now = root();
+      while (now != nullptr) {
+        if (now->_value.first == key) {
+          return iterator(now);
+        } else if (lt(key, now->_value.first)) {
+          now = static_cast<InnerNode*>(now->child[0]);
+        } else {
+          now = static_cast<InnerNode*>(now->child[1]);
+        }
+      }
+      return this->end();
+    }
   }
 
   /** \overload */
   const_iterator find(const Key& key) const {
-  	if (root() == nullptr) {
-  		return const_iterator(nullptr);
-  	} else {
-  		InnerNode* now = root();
-  		while(now != nullptr) {
-  			if (now->_value.first == key) {
-  				return const_iterator(now);
-  			} else if (lt(key, now->_value.first)) {
-  				now = static_cast<InnerNode*>(now->child[0]);
-  			} else {
-  				now = static_cast<InnerNode*>(now->child[1]);
-  			}
-  		}
-  		return const_iterator(nullptr);
-  	}
+    if (root() == nullptr) {
+      return this->end();
+    } else {
+      InnerNode* now = root();
+      while (now != nullptr) {
+        if (now->_value.first == key) {
+          return const_iterator(now);
+        } else if (lt(key, now->_value.first)) {
+          now = static_cast<InnerNode*>(now->child[0]);
+        } else {
+          now = static_cast<InnerNode*>(now->child[1]);
+        }
+      }
+      return this->end();
+    }
   }
 
   /**
@@ -1368,26 +1374,12 @@ class map {
    *
    */
   const_iterator lower_bound(const Key& key) const {
-      if (lt(static_cast<InnerNode*>(header.child[1])->_value.first, key)) return const_iterator();
-    InnerNode* actual = static_cast<InnerNode*>(header.parent);
-      while (actual != nullptr)
-      {
-          if (lt(actual->_value.first, key) && actual->child[1] != nullptr) actual = static_cast<InnerNode*>(actual->child[1]);
-          else return const_iterator(actual);
-      }
-      return const_iterator(actual);
+    // completar
   }
 
   /** \overload */
   iterator lower_bound(const Key& key) {
-      if (lt(static_cast<InnerNode*>(header.child[1])->_value.first, key)) return iterator();
-      InnerNode* actual = static_cast<InnerNode*>(header.parent);
-      while (actual != nullptr)
-      {
-          if (lt(actual->_value.first, key) && actual->child[1] != nullptr) actual = static_cast<InnerNode*>(actual->child[1]);
-          else return iterator(actual);
-      }
-      return iterator(actual);
+    // completar
   }
   ///@}
 
@@ -1459,223 +1451,242 @@ class map {
    * \attention Para garantizar que el nuevo elemento se inserte sí o sí, usar
    * aed2::map::insert_or_assign.
    */
-// esta funcion es para generalizar agregar un elemento yendo por derecha y por izquierda
-  bool addElem(Node* &now, const value_type& value, int dir) {
-      if (now->child[dir] != nullptr) {
-          now = now->child[dir]; //si no es null, sigo bajando
-          return false;
-      }
-      else {
-          now->child[dir] = new InnerNode(now, value);
-         // static_cast<InnerNode*>(now->child[side])->_value = value;//le asigno el valor al nuevo nodo
-          insertionFix(now->child[dir], value);
-          return true;
-      }
+  // esta funcion es para generalizar agregar un elemento yendo por derecha y
+  // por izquierda
+  bool addElem(Node*& now, const value_type& value, int dir) {
+    if (now->child[dir] != nullptr) {
+      now = now->child[dir];  // si no es null, sigo bajando
+      return false;
+    } else {
+      now->child[dir] = new InnerNode(now, value);
+      // static_cast<InnerNode*>(now->child[side])->_value = value;//le asigno
+      // el valor al nuevo nodo
+      insertionFix(now->child[dir], value);
+      return true;
+    }
   }
 
-    void insertionFix(Node* newNode, const value_type &value) {
-        Node* aux;
-        if (static_cast<InnerNode*>(this->root())->value() == value) {
-            static_cast<InnerNode*>(this->root())->color = Color::Black;
-            return;
+  void insertionFix(Node* newNode, const value_type& value) {
+    Node* aux;
+    if (static_cast<InnerNode*>(this->root())->value() == value) {
+      static_cast<InnerNode*>(this->root())->color = Color::Black;
+      return;
+    }
+    while (!(newNode->parent->is_header()) &&
+           (newNode->parent->color == Color::Red)) {
+      Node* grandPa = newNode->parent->parent;
+      if (grandPa->child[0] == newNode->parent) {
+        if (grandPa->child[1] != nullptr) {
+          aux = grandPa->child[1];
+          if (aux->color == Color::Red) {
+            newNode->parent->color = Color::Black;
+            aux->color = Color::Black;
+            grandPa->color = Color::Red;
+            newNode = grandPa;
+          }
+        } else {
+          if (newNode->parent->child[1] == newNode) {
+            newNode = newNode->parent;
+            leftrotate(newNode);
+          }
+          newNode->parent->color = Color::Black;
+          grandPa->color = Color::Red;
+          rightrotate(grandPa);
         }
-        while (!(newNode->parent->is_header())  && (newNode->parent->color == Color::Red)) {
-            Node* grandPa = newNode->parent->parent;
-            if (grandPa->child[0] == newNode->parent) {
-                if (grandPa->child[1] != nullptr) {
-                    aux = grandPa->child[1];
-                    if (aux->color == Color::Red) {
-                        newNode->parent->color = Color::Black;
-                        aux->color = Color::Black;
-                        grandPa->color = Color::Red;
-                        newNode = grandPa;
-                    }
-                } else {
-                    if (newNode->parent->child[1] == newNode) {
-                        newNode = newNode->parent;
-                        leftrotate(newNode);
-                    }
-                    newNode->parent->color = Color::Black;
-                    grandPa->color = Color::Red;
-                    rightrotate(grandPa);
-                }
-            } else {
-                if (grandPa->child[0] != nullptr) {
-                    aux = grandPa->child[0];
-                    if (aux->color == Color::Red) {
-                        newNode->parent->color = Color::Black;
-                        aux->color = Color::Black;
-                        grandPa->color = Color::Red;
-                        newNode = grandPa;
-                    }
-                } else {
-                    if (newNode->parent->child[0] == newNode) {
-                        newNode = newNode->parent;
-                        rightrotate(newNode);
-                    }
-                    newNode->parent->color = Color::Black;
-                    grandPa->color = Color::Red;
-                    leftrotate(grandPa);
-                }
-            }
-            root()->color = Color::Black;
+      } else {
+        if (grandPa->child[0] != nullptr) {
+          aux = grandPa->child[0];
+          if (aux->color == Color::Red) {
+            newNode->parent->color = Color::Black;
+            aux->color = Color::Black;
+            grandPa->color = Color::Red;
+            newNode = grandPa;
+          }
+        } else {
+          if (newNode->parent->child[0] == newNode) {
+            newNode = newNode->parent;
+            rightrotate(newNode);
+          }
+          newNode->parent->color = Color::Black;
+          grandPa->color = Color::Red;
+          leftrotate(grandPa);
         }
+      }
+      root()->color = Color::Black;
     }
+  }
 
-    void leftrotate(Node* p) {
-        if(p->child[1]==nullptr)
-            return ;
-        else {
-            Node* y = p->child[1];
-
-            if(y->child[0]!=nullptr) {
-                p->child[1]=y->child[0];
-                y->child[0]->parent=p;
-            } else { p->child[1]=nullptr; }
-
-            if(p->parent!=nullptr)
-                y->parent=p->parent;
-            if(p->parent->is_header()) {
-                this->header.parent = y;
-               // header.parent = y;
-                y->parent = &header;
-            } else {
-                if(p==p->parent->child[0])
-                    p->parent->child[0]=y;
-                else
-                    p->parent->child[1]=y;
-            }
-            y->child[0]=p;
-            p->parent=y;
-        }
+  void leftrotate(Node* p) {
+    if (p->child[1] == nullptr)
+      return;
+    else {
+      Node* y = p->child[1];
+
+      if (y->child[0] != nullptr) {
+        p->child[1] = y->child[0];
+        y->child[0]->parent = p;
+      } else {
+        p->child[1] = nullptr;
+      }
 
+      if (p->parent != nullptr) y->parent = p->parent;
+      if (p->parent->is_header()) {
+        this->header.parent = y;
+        // header.parent = y;
+        y->parent = &header;
+      } else {
+        if (p == p->parent->child[0])
+          p->parent->child[0] = y;
+        else
+          p->parent->child[1] = y;
+      }
+      y->child[0] = p;
+      p->parent = y;
     }
+  }
 
-    void rightrotate(Node* p) {
-        if(p->child[0]==nullptr)
-            return ;
-        else {
-            Node* y = p->child[0];
-
-            if(y->child[1]!=nullptr) {
-                p->child[0]=y->child[1];
-                y->child[1]->parent=p;
-            } else { p->child[0]=nullptr; }
-
-            if(p->parent!=nullptr)
-                y->parent=p->parent;
-            if(p->parent->is_header()) {
-                this->header.parent = y;
-              //  header.parent = y;
-                y->parent = &header;
-            } else {
-                if(p==p->parent->child[0])
-                    p->parent->child[0]=y;
-                else
-                    p->parent->child[1]=y;
-            }
-            y->child[1]=p;
-            p->parent=y;
-        }
+  void rightrotate(Node* p) {
+    if (p->child[0] == nullptr)
+      return;
+    else {
+      Node* y = p->child[0];
+
+      if (y->child[1] != nullptr) {
+        p->child[0] = y->child[1];
+        y->child[1]->parent = p;
+      } else {
+        p->child[0] = nullptr;
+      }
 
+      if (p->parent != nullptr) y->parent = p->parent;
+      if (p->parent->is_header()) {
+        this->header.parent = y;
+        //  header.parent = y;
+        y->parent = &header;
+      } else {
+        if (p == p->parent->child[0])
+          p->parent->child[0] = y;
+        else
+          p->parent->child[1] = y;
+      }
+      y->child[1] = p;
+      p->parent = y;
     }
-    bool invalidHint(const_iterator hint, const value_type& value) {
-        return (hint.n == nullptr || lt((*hint).first, value.first) || lt(value.first, (hint.n)->prevInorder()->value().first));
-    }
-    iterator insert(const_iterator hint, const value_type& value) {
-         /*Tengo que insertar un elemento, para esto, distingo tres casos:
-         * 1. el elemento a insertar es la raiz. Este es el caso mas facil, solo tengo que
-         * ponerlo en relacion incestuosa con el header y ponerle el valor correspondiente.
-         * Ademas, tengo que setear los hijos de header como raiz. La raiz siempre es negra, y en este caso
-         * no tengo que llamar a insertionFix.
-         * 2. El elemento a insertar es menor que el hijo izquierdo de header, o es mayor
-         * al hijo derecho de header. Este caso tambien es muy simple, ya que lo voy a insertar a la izquierda
-         * del hijo izquierdo de header o a la derecha del hijo derecho segun corresponda, y actualizar header.
-         * Notar que esto tambien me beneficia porque al insertar cualquier nodo no me voy a tener que fijar
-         * si hay que actualizar el maximo o no. Sí va a ser necesario cuando se haga un delete.
-         * 3. El elemento a insertar no cae en ninguno de los casos anteriores. En este caso, es donde tengo que considerar
-         * el hint pasado por parametro. El hint es correcto sii es mayor al elemento, y prevInorder de hint es menor
-         * al elemento.
-         * Si el hint es correcto, se puede probar que o el hint o su prevInorder van a ser nils del lado que me sirve
-         * i.e. el hint no tiene hijo izq o el prevInorder no tiene hijo derecho.
-         * Si ninguno de los dos fuera nil en esos lados, existiria un elemento mayor al prevInorder. Si este elemento
-         * no fuera el hint, entonces afirmo este elemento sería menor al hint. Si fuera mayor, y el hint no estuviera
-         * en un subarbol de dicho elemento, tendria un absurdo por el invariante de abb. Si el hint esta en el
-         * subarbol del hijo derecho a prevInorder, para que su prevInorder siga siendo ese, deberia ser el leftmost de
-         * ese subarbol con lo cual su hijo izquierdo seria nil.
-         * A la vez, que sea nil me asegura que lo puedo insertar de ese lado (habria que convencerse)
-         * Por lo que maravillosamente solo tengo que hacer dos comparaciones boludas y asignarlo donde corresponda.
-         * A continuacion obvio hay que llamar al insertionFIx.
-         * En caso de que el hint no sea correcto, hayq ue llamar a insertar casi tla cual de los algoritmos del Cormen.
-         * */
-       ;
-        if ((header.parent == nullptr) || isMaxOrMin(value) || invalidHint(hint, value)) {
-           insert(value);
-        } else {
-            if (hint.n->child[0] == nullptr) { //lo asigno a la izquierda del hint
-                hint.n->child[0] = new InnerNode(hint.n, value);
-                insertionFix(hint.n->child[0], value);
-            } else {
-                Node* previo =  hint.n->prevInorder();
-                previo->child[1] = new InnerNode(previo, value);
-                insertionFix(previo->child[1], value);
-            }
-            count++;
-        }
-
+  }
+  bool invalidHint(const_iterator hint, const value_type& value) {
+    return (hint == nullptr || lt((*hint).first, value.first) ||
+            lt(value.first,
+               prevInorder(static_cast<InnerNode*>(hint.n))->value().first));
+  }
+  iterator insert(const_iterator hint, const value_type& value) {
+    /*Tengo que insertar un elemento, para esto, distingo tres casos:
+    * 1. el elemento a insertar es la raiz. Este es el caso mas facil, solo
+    * tengo que
+    * ponerlo en relacion incestuosa con el header y ponerle el valor
+    * correspondiente.
+    * Ademas, tengo que setear los hijos de header como raiz. La raiz siempre es
+    * negra, y en este caso
+    * no tengo que llamar a insertionFix.
+    * 2. El elemento a insertar es menor que el hijo izquierdo de header, o es
+    * mayor
+    * al hijo derecho de header. Este caso tambien es muy simple, ya que lo voy
+    * a insertar a la izquierda
+    * del hijo izquierdo de header o a la derecha del hijo derecho segun
+    * corresponda, y actualizar header.
+    * Notar que esto tambien me beneficia porque al insertar cualquier nodo no
+    * me voy a tener que fijar
+    * si hay que actualizar el maximo o no. Sí va a ser necesario cuando se haga
+    * un delete.
+    * 3. El elemento a insertar no cae en ninguno de los casos anteriores. En
+    * este caso, es donde tengo que considerar
+    * el hint pasado por parametro. El hint es correcto sii es mayor al
+    * elemento, y prevInorder de hint es menor
+    * al elemento.
+    * Si el hint es correcto, se puede probar que o el hint o su prevInorder van
+    * a ser nils del lado que me sirve
+    * i.e. el hint no tiene hijo izq o el prevInorder no tiene hijo derecho.
+    * Si ninguno de los dos fuera nil en esos lados, existiria un elemento mayor
+    * al prevInorder. Si este elemento
+    * no fuera el hint, entonces afirmo este elemento sería menor al hint. Si
+    * fuera mayor, y el hint no estuviera
+    * en un subarbol de dicho elemento, tendria un absurdo por el invariante de
+    * abb. Si el hint esta en el
+    * subarbol del hijo derecho a prevInorder, para que su prevInorder siga
+    * siendo ese, deberia ser el leftmost de
+    * ese subarbol con lo cual su hijo izquierdo seria nil.
+    * A la vez, que sea nil me asegura que lo puedo insertar de ese lado (habria
+    * que convencerse)
+    * Por lo que maravillosamente solo tengo que hacer dos comparaciones boludas
+    * y asignarlo donde corresponda.
+    * A continuacion obvio hay que llamar al insertionFIx.
+    * En caso de que el hint no sea correcto, hayq ue llamar a insertar casi tla
+    * cual de los algoritmos del Cormen.
+    * */
+    if ((header.parent == nullptr) || isMaxOrMin(value) ||
+        invalidHint(hint, value)) {
+      insert(value);
+    } else {
+      if (hint.n->child[0] == nullptr) {  // lo asigno a la izquierda del hint
+        hint.n->child[0] =
+            new InnerNode(static_cast<InnerNode*>(hint.n), value);
+        insertionFix(hint.n->child[0], value);
+      } else {
+        Node* previo = prevInorder(static_cast<InnerNode*>(hint.n));
+        previo->child[1] = new InnerNode(previo, value);
+        insertionFix(previo->child[1], value);
+      }
+      count++;
     }
-bool isMaxOrMin(const value_type& value) {
-    return lt(header.child[1]->value().first, value.first) || lt(value.first, header.child[0]->value().first);
-}
+  }
+  bool isMaxOrMin(const value_type& value) {
+    return lt(header.child[1]->value().first, value.first) ||
+           lt(value.first, header.child[0]->value().first);
+  }
 
-void assignMaxOrMin(const value_type& value) {
+  void assignMaxOrMin(const value_type& value) {
     if (lt(header.child[1]->value().first, value.first)) {
-        header.child[1]->child[1] = new InnerNode(header.child[1], value);
-        header.child[1] = header.child[1]->child[1];
-        insertionFix(header.child[1], value);
+      header.child[1]->child[1] = new InnerNode(header.child[1], value);
+      header.child[1] = header.child[1]->child[1];
+      insertionFix(header.child[1], value);
 
     } else {
-        header.child[0]->child[0] = new InnerNode(header.child[0], value);
-        header.child[0] = header.child[0]->child[0];
-        insertionFix(header.child[0], value);
+      header.child[0]->child[0] = new InnerNode(header.child[0], value);
+      header.child[0] = header.child[0]->child[0];
+      insertionFix(header.child[0], value);
     }
-
-}
-    /** \overload*/
-  iterator insert(const value_type& value) {
-      insert_or_upsert(value, 0);
   }
-
-    iterator insert_or_upsert(const value_type& value, bool upsert) {
-        Node* now = this->header.parent;
-        bool inserted = false;
-
-        if (root() == nullptr) {
-            header.parent = new InnerNode(&header, value);
-            insertionFix(root(), value);
-            header.child[0] = header.child[1] = header.parent;
-            inserted = true; //notar q el count++ lo hago aca, no se si es lo mejor.
-        } else if (isMaxOrMin(value)) {
-            assignMaxOrMin(value);
-            inserted = true;
+  /** \overload*/
+  iterator insert(const value_type& value) { insert_or_upsert(value, 0); }
+
+  iterator insert_or_upsert(const value_type& value, bool upsert) {
+    Node* now = this->header.parent;
+    bool inserted = false;
+
+    if (root() == nullptr) {
+      header.parent = new InnerNode(&header, value);
+      insertionFix(root(), value);
+      header.child[0] = header.child[1] = header.parent;
+      inserted = true;  // notar q el count++ lo hago aca, no se si es lo mejor.
+    } else if (isMaxOrMin(value)) {
+      assignMaxOrMin(value);
+      inserted = true;
+    } else {
+      while (now != nullptr && !inserted) {
+        if (lt(now->key(), value.first)) {
+          inserted = addElem(now, value, 1);
         } else {
-            while(now != nullptr && !inserted) {
-                if (lt(now->key(), value.first)) {
-                    inserted = addElem(now, value, 1);
-                }
-                else {
-                    if ((now->key() == value.first) && upsert) {
-                        static_cast<InnerNode *>(now)->_value.second = value.second;
-                        inserted = true;
-                        count--; //para que no me lo cuente dos veces, igual no es copado hacer esto habria q cambiarlo
-                    }
-                    else inserted = addElem(now, value, 0);
-
-                }
-            }
+          if ((now->key() == value.first) && upsert) {
+            static_cast<InnerNode*>(now)->_value.second = value.second;
+            inserted = true;
+            count--;  // para que no me lo cuente dos veces, igual no es copado
+                      // hacer esto habria q cambiarlo
+          } else
+            inserted = addElem(now, value, 0);
         }
-        if (inserted) count++;
+      }
     }
+    if (inserted) count++;
+  }
   /**
    * @brief Inserta o redefine \P{value} en el diccionario
    *
@@ -1716,13 +1727,10 @@ void assignMaxOrMin(const value_type& value) {
    * notación no es tan bonita.
    */
   iterator insert_or_assign(const_iterator hint, const value_type& value) {
-    if ((*hint).first == value.first)
-    {
-        static_cast<InnerNode*>(hint.n)->_value.second = value.second;
-    }
-    else
-        if (invalidHint(hint, value)) insert_or_assign(value);
-        else insert(hint, value);
+    if (*hint == value) {
+      static_cast<InnerNode*>(hint.n)->_value.second = value.second;
+    } else
+      insert(hint, value);
   }
 
   /** \overload */
@@ -1782,12 +1790,11 @@ void assignMaxOrMin(const value_type& value) {
    * \complexity{\O(\DEL(\P{*this}))}
    */
   void clear() {
-    while ((header.parent->child) != {nullptr, nullptr})
-    {
-        if (header.parent->child[0] != nullptr)  erase(header.parent->child[0]);
-        if (header.parent->child[1] != nullptr) erase(header.parent->child[1]);
+    while ((header.parent->child) != {nullptr, nullptr}) {
+      if (header.parent->child[0] != nullptr) erase(header.parent->child[0]);
+      if (header.parent->child[1] != nullptr) erase(header.parent->child[1]);
     }
-      erase(header.parent);
+    erase(header.parent);
   }
 
   /**
@@ -1855,21 +1862,13 @@ void assignMaxOrMin(const value_type& value) {
    *
    * \complexity{\O(1)}
    */
-  iterator begin() {
-    return iterator(header.child[0]);
-  }
+  iterator begin() { return iterator(header.child[0]); }
 
   /** \overload */
-  const_iterator begin() const {
-
-      return const_iterator(header.child[0]);
-  }
+  const_iterator begin() const { return const_iterator(header.child[0]); }
 
   /** \overload */
-  const_iterator cbegin() {
-
-      return const_iterator(header.child[0]);
-  }
+  const_iterator cbegin() { return const_iterator(header.child[0]); }
 
   /**
    * @brief Devuelve un iterador apuntando a la posición pasando-el-ultimo del
@@ -1884,19 +1883,13 @@ void assignMaxOrMin(const value_type& value) {
    *
    * \complexity{\O(1)}
    */
-  iterator end() {
-    return iterator(header);
-  }
+  iterator end() { return iterator(&header); }
 
   /** \overload */
-  const_iterator end() const {
-    return const_iterator(header);
-  }
+  const_iterator end() const { return const_iterator(&header); }
 
   /** \overload */
-  const_iterator cend() {
-    return const_iterator(header);
-  }
+  const_iterator cend() { return const_iterator(&header); }
 
   /**
    * @brief Devuelve un iterador al primer valor del diccionario, en un
@@ -1911,14 +1904,11 @@ void assignMaxOrMin(const value_type& value) {
    *
    * \complexity{\O(1)}
    */
-  reverse_iterator rbegin() {
-    return reverse_iterator(header.child[1]);
-  }
+  reverse_iterator rbegin() { return reverse_iterator(header.child[1]); }
 
   /** \overload */
   const_reverse_iterator rbegin() const {
-
-      return const_reverse_iterator(header.child[1]);
+    return const_reverse_iterator(header.child[1]);
   }
 
   /** \overload */
@@ -1940,19 +1930,13 @@ void assignMaxOrMin(const value_type& value) {
    *
    * \complexity{\O(1)}
    */
-  reverse_iterator rend() {
-    return reverse_iterator(header);
-  }
+  reverse_iterator rend() { return reverse_iterator(); }
 
   /** \overload */
-  const_reverse_iterator rend() const {
-    return const_reverse_iterator(header);
-  }
+  const_reverse_iterator rend() const { return const_reverse_iterator(); }
 
   /** \overload */
-  const_reverse_iterator crend() {
-    return const_reverse_iterator(header);
-  }
+  const_reverse_iterator crend() { return const_reverse_iterator(); }
   //@}
 
   /**
@@ -2098,8 +2082,7 @@ void assignMaxOrMin(const value_type& value) {
      */
     iterator& operator++() {
       this->n = nextInorder(this->n);
-     // if (n->is_header()) return &iterator();
-        return *this;
+      return *this;
     }
     /**
      *\brief Busca el sucesor inorder del nodo al que apunta el iterador
@@ -2127,9 +2110,9 @@ void assignMaxOrMin(const value_type& value) {
      * }
      */
     iterator operator++(int) {
-     // iterator it = *this;
-        (*this)++;
-        return *this;
+      iterator it = *this;
+      (*this)++;
+      return it;
     }
     /**
      * \brief Retrocede el iterador a la posición anterior
@@ -2168,9 +2151,9 @@ void assignMaxOrMin(const value_type& value) {
      * }
      */
     iterator operator--(int) {
-        iterator it = *this;
-        (*this)--;
-        return it;
+      iterator it = *this;
+      (*this)--;
+      return it;
     }
     /**
      * \brief Operador de igualdad
@@ -2190,13 +2173,9 @@ void assignMaxOrMin(const value_type& value) {
      *
      * \complexity{\O(1)}
      */
-    bool operator==(iterator other) const {
-    	return ((*this).n == other.n);
-    }
+    bool operator==(iterator other) const { return ((*this).n == other.n); }
     /** \brief idem !|operator== */
-    bool operator!=(iterator other) const {
-    	return !(this==other);
-    }
+    bool operator!=(iterator other) const { return !(this == other); }
 
    private:
     /**
@@ -2312,16 +2291,16 @@ void assignMaxOrMin(const value_type& value) {
      *
      * \complexity{\O(1)}
      */
-    const_iterator(iterator it) {
-      this->n = it.n;
-    }
+    const_iterator(iterator it) { this->n = it.n; }
     /** \brief Ver aed2::map::iterator::operator*() */
     reference operator*() const { return n->value(); }
     /** \brief Ver aed2::map::iterator::operator->() */
-    pointer operator->() const { return &(n->value()); }
+    pointer operator->() const {
+      return &((static_cast<InnerNode*>(n))->_value);
+    }
     /** \brief Ver aed2::map::iterator::operator++() */
     const_iterator& operator++() {
-        this->n = (*(this->n)).nextInorder();
+      this->n = nextInorder(this->n);
       return *this;
     }
     /** \brief Ver aed2::map::iterator::operator++(int) */
@@ -2420,52 +2399,7 @@ void assignMaxOrMin(const value_type& value) {
      * \complexity{\O(1)}
      */
     Node() : color(Color::Header) { child[0] = child[1] = this; }
-      bool hasChild(int dir) { return this->child[dir] != nullptr; }
-     // bool hasChild(int dir) { return node->child[dir] != nullptr; }
-    //  const Node* nextInorder(int dir = 1) {
-    //      if (this->hasChild(dir)) return getDMost(this->child[dir], 1 - dir);
-    //      if (this->isChild(1 - dir)) return this->parent;
-     //     while (this->isChild(dir)) this = this->parent;
-     //     return this;
-    //  }
-     Node* nextInorder(int dir = 1) {
-         Node* next = this;
-         if (next->hasChild(dir)) return (next->child[dir])->getDMost(1 - dir);
-         if (next->isChild(1 - dir)) return next->parent;
-         while (next->isChild(dir)) *next = next->parent;
-         return next;
-     }
-      Node* prevInorder() { return this->nextInorder(0); }
-
-      Node* getDMost(int dir) {
-          Node* aux = this;
-          while (aux != nullptr && aux->hasChild(dir)) {
-              aux = aux->child[dir];
-          }
-          return aux;
-      }
-
-      bool isChild(int dir) { return this->parent->child[dir] == this; }
-
-      bool hasChild(int dir) const { return this->child[dir] != nullptr; }
-      const Node* nextInorder(int dir = 1) const{
-          const Node* next = this;
-          if (next->hasChild(dir)) return next->child[dir]->getDMost(1 - dir);
-          if (next->isChild(1 - dir)) return next->parent;
-          while (next->isChild(dir)) next = next->parent;
-          return next;
-      }
-      const Node* prevInorder() const{ return this->nextInorder(0); }
 
-      const Node* getDMost(int dir) const {
-          const Node* aux = this;
-          while (aux != nullptr && aux->hasChild(dir)) {
-              aux = aux->child[dir];
-          }
-          return aux;
-      }
-
-      bool isChild(int dir) const{ return this->parent->child[dir] == this; }
     /**
      * @brief Constructor para nodos del arbol red-black, sin enlaces.
      *
@@ -2625,10 +2559,10 @@ void assignMaxOrMin(const value_type& value) {
   struct InnerNode : public Node {
     /** Valor del nodo */
     value_type _value;
-      InnerNode(Node* myparent, const value_type &value) : Node(myparent), _value(value)
-      {
-            //parent = myparent;
-      }
+    InnerNode(Node* myparent, const value_type& value)
+        : Node(myparent), _value(value) {
+      // parent = myparent;
+    }
   };
 
   ////////////////////////////////////////////////////////////////////////////////////////////////////
@@ -2647,13 +2581,12 @@ void assignMaxOrMin(const value_type& value) {
    * \par Invariante de representacion
        * \parblock
        * rep: map \TO bool\n
-       * rep(m) \EQUIV completar
+       * rep(m) \EQUIV true \iff asd
        * \endparblock
-       *
        * \par Función de abstracción
        * \parblock
        * abs: map m \TO Diccionario(\T{Key}, \T{Meaning})  {rep(n)}\n
-       * abs(m) \EQUIV completar
+       * abs(m) \EQUIV if m.empty() then vacio else definir (m.root()->value().first,m.root()->value().second, Abs(m.erase(m.root()->value().first)) )
        * \endparblock
    */
   //////////////////////////////////////////////////////////////////////////////////////////////////////
@@ -2669,7 +2602,28 @@ void assignMaxOrMin(const value_type& value) {
   /** \brief Cabeceera del arbol; ver \ref Implementacion */
   Node header;
   //@}
+  bool hasChild(Node* node, int dir) { return node->child[dir] != nullptr; }
+  bool hasChild(const Node* node, int dir) {
+    return node->child[dir] != nullptr;
+  }
+  Node* nextInorder(Node* node, int dir = 1) {
+    if (hasChild(node, dir)) return getDMost(node->child[dir], 1 - dir);
+    if (isChild(node, 1 - dir)) return node->parent;
+    while (isChild(node, dir)) node = node->parent;
+    return node;
+  }
+
+  Node* prevInorder(Node* node) { return nextInorder(node, 0); }
+
+  Node* getDMost(Node* node, int dir) {
+    Node* aux = node;
+    while (aux != nullptr && hasChild(node, dir)) {
+      aux = aux->child[dir];
+    }
+    return aux;
+  }
 
+  bool isChild(Node* node, int dir) { return node->parent->child[dir] == node; }
 
   ////////////////////////////////////////
   /** \name Acceso y consulta del árbol */
diff --git a/texput.log b/texput.log
new file mode 100644
index 0000000..7c5ef25
--- /dev/null
+++ b/texput.log
@@ -0,0 +1,21 @@
+This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=latex 2017.5.25)  25 MAY 2017 10:38
+entering extended mode
+ restricted \write18 enabled.
+ %&-line parsing enabled.
+**latex/
+
+! Emergency stop.
+<*> latex/
+          
+End of file on the terminal!
+
+ 
+Here is how much of TeX's memory you used:
+ 3 strings out of 494954
+ 108 string characters out of 6181003
+ 45168 words of memory out of 5000000
+ 3390 multiletter control sequences out of 15000+600000
+ 3640 words of font info for 14 fonts, out of 8000000 for 9000
+ 14 hyphenation exceptions out of 8191
+ 0i,0n,0p,9b,6s stack positions out of 5000i,500n,10000p,200000b,80000s
+No pages of output.
diff --git a/todo.txt b/todo.txt
index 05b5168..e0aa2d5 100644
--- a/todo.txt
+++ b/todo.txt
@@ -1,3 +1,4 @@
 Corregir operador corchetes
 Poner asserts donde haga falta
-Hacer operator++(int) y operator--(int)
\ No newline at end of file
+Hacer operator++(int) y operator--(int)
+Preguntarle a soulignac sobre la aridad del abs
